
#include "hloe.inc"

 __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOR_ON & _IESO_OFF & _FCMEN_OFF)


hllv2cval UDATA
hllcvall RES .1

#define cval hllcvall



Resetv code 0 
 bcf INTCON,GIE
 pagesel hloego
 goto hloego
 
#ifdef HLLMULTITASK
vectr code 4	 ;Device specific
ISR:


 PREEMPT
#endif
 banksel PIR1
 btfss PIR1,TMR1IF
 goto hllnotisr49	
 bcf PIR1,TMR1IF


 movlw .1 

   FAR_CALL ISR , safepush


 movlw -.1

   FAR_CALL ISR , safepush

   banksel cval
   movfw cval
   
   

   FAR_CALL ISR , safepush


 FAR_CALL ISR,mul


 FAR_CALL ISR,add

 POP
 banksel cval
 movwf cval
 

   banksel cval
   movfw cval
   
   

   FAR_CALL ISR , safepush

 POP
 banksel PORTC
 movwf PORTC
 


hllnotisr49:

#ifdef HLLMULTITASK
ExitISR:    

  RESUME
  
  
  retfie
#endif

mainvars udata_shr	
#ifdef HLLMULTITASK
pbase res .1			; Used for functions w/ numbered pass/return, to clean up parms/push args
pbaseisr res .1	
#else
pbase res .1
#endif

PC_Save res .1

main code
hloego:

 
  clrf in_isr
 
  movlw stack-1		;Set up stack starting position based on literals det. by incremental linker
  movwf FSR 
  movlw alt_stack-1
  movwf alt_fsr 
  
  
  clrf softstack0
 
 bankisel stack
 pagesel hlluserprog
 goto hlluserprog
hllupuser CODE
hlluserprog: 
 

 movlw .0 

   FAR_CALL hlluserprog , safepush

 POP
 banksel cval
 movwf cval
 


 movlw .112 

   FAR_CALL hlluserprog , safepush

   banksel OSCCON
   movfw OSCCON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,oru

 POP
 banksel OSCCON
 movwf OSCCON
 


 movlw .0

   FAR_CALL hlluserprog , safepush

 POP
 banksel TRISC
 movwf TRISC
 


 movlw .0

   FAR_CALL hlluserprog , safepush

 POP
 banksel PORTC
 movwf PORTC
 


 movlw TMR1CS


   FAR_CALL hlluserprog , safepush


 movlw TMR1GE


   FAR_CALL hlluserprog , safepush


 movlw T1CKPS1


   FAR_CALL hlluserprog , safepush


 movlw T1CKPS0


   FAR_CALL hlluserprog , safepush


 movlw NOT_T1SYNC


   FAR_CALL hlluserprog , safepush


 movlw T1OSCEN


   FAR_CALL hlluserprog , safepush

   banksel T1CON
   movfw T1CON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,clearbit

 POP
 banksel T1CON
 movwf T1CON
 


 movlw TMR1IE


   FAR_CALL hlluserprog , safepush

   banksel PIE1
   movfw PIE1
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel PIE1
 movwf PIE1
 


 movlw PEIE


   FAR_CALL hlluserprog , safepush

   banksel INTCON
   movfw INTCON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel INTCON
 movwf INTCON
 


 movlw TMR1ON


   FAR_CALL hlluserprog , safepush

   banksel T1CON
   movfw T1CON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel T1CON
 movwf T1CON
 


 movlw GIE


   FAR_CALL hlluserprog , safepush

   banksel INTCON
   movfw INTCON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel INTCON
 movwf INTCON
 

    
hllprogend:
 goto hllprogend
 