
#include "hloe.inc"


;
; R O B O T
;
; C O N F I G
;


 __config (_EXTRC_OSC_NOCLKOUT& _WDT_OFF  & _MCLRE_OFF & _IESO_OFF & _FCMEN_OFF  & _PWRTE_ON & _BOR_OFF)




Resetv code 0 
 bcf INTCON,GIE
 pagesel hloego
 goto hloego
 
#ifdef HLLMULTITASK
vectr code 4	 ;Device specific
ISR:


 PREEMPT
#endif

;
; R O B O T
;
; H E A D E R
;

#ifdef HLLMULTITASK
ExitISR:    
 RESUME 
 
  retfie
#endif

mainvars udata_shr	
#ifdef HLLMULTITASK
pbase res .1			; Used for functions w/ numbered pass/return, to clean up parms/push args
pbaseisr res .1	
#else
pbase res .1
#endif
PC_Save res .1

main code
hloego:

 

  
  clrf in_isr
 
  movlw stack-1		;Set up stack starting position based on literals det. by incremental linker
  movwf FSR 
  movlw alt_stack-1
  movwf alt_fsr 
 
 
 clrf softstack0 
 
 bankisel stack
 pagesel hlluserprog
 goto hlluserprog
hllupuser CODE
hlluserprog: 
 

 movlw SYNC


   FAR_CALL hlluserprog , safepush


 movlw BRGH


   FAR_CALL hlluserprog , safepush

   banksel TXSTA
   movfw TXSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,clearbit

 POP
 banksel TXSTA
 movwf TXSTA
 


 movlw BRG16


   FAR_CALL hlluserprog , safepush


 movlw SCKP


   FAR_CALL hlluserprog , safepush

   banksel BAUDCTL
   movfw BAUDCTL
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,setbit

 POP
 banksel BAUDCTL
 movwf BAUDCTL
 


 movlw CREN


   FAR_CALL hlluserprog , safepush

   banksel RCSTA
   movfw RCSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw CREN


   FAR_CALL hlluserprog , safepush

   banksel RCSTA
   movfw RCSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw .25

   FAR_CALL hlluserprog , safepush

 POP
 banksel SPBRG
 movwf SPBRG
 


 movlw .0

   FAR_CALL hlluserprog , safepush

 POP
 banksel SPBRGH
 movwf SPBRGH
 


 movlw TXEN


   FAR_CALL hlluserprog , safepush


 movlw TX9


   FAR_CALL hlluserprog , safepush

   banksel TXSTA
   movfw TXSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,setbit

 POP
 banksel TXSTA
 movwf TXSTA
 


 movlw SPEN


   FAR_CALL hlluserprog , safepush

   banksel RCSTA
   movfw RCSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 FAR_CALL hlluserprog,dowork

    
hllprogend:
 goto hllprogend
 

hllt450 CODE
dowork:


 movlw .13

   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch


 movlw .10

   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'H'


 movlw .72


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'e'


 movlw .101


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'l'


 movlw .108


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'l'


 movlw .108


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'o'


 movlw .111


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char ','


 movlw .44


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char ' '


 movlw .32


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'w'


 movlw .119


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'o'


 movlw .111


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'r'


 movlw .114


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'l'


 movlw .108


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char 'd'


 movlw .100


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch

 ; char '!'


 movlw .33


   FAR_CALL dowork , safepush


 FAR_CALL dowork,printch


 return
 