MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 #include "hloe.inc"
                      00001 
                      00002 
                      00003 #define HLLGUARDhllblss
                      00004 
                      00005 
                      00006 #define HLOE_STACK_SIZE .80
                      00007 #define HLOE_STACK2_SIZE .20
                      00008 
                      00009 
                      00010 #include <p16f687.inc>
                      00001         LIST
                      00002 ; P16F687.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00553         LIST
                      00011 #include <f:\beau\frostcompiler\kernel.inc>
                      00001 PUSH macro ;Push to the main stack for the programmer's parms and dyn. data;
                      00002  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
                      00003  movwf INDF ; code of any sort will not overwrite the data. 
                      00004  endm 
                      00005  
                      00006 POP macro ;Pop from main stack; "decf" is the de-allocator and thus happens last to 
                      00007  movfw INDF ; preserve the safety of this code under interruptible conditions. 
                      00008  decf FSR,f 
                      00009  endm
                      00010  
                      00011 DISCARD macro ;Remove items from the main stack and throw them away w/o affecting W
                      00012  decf FSR,f 
                      00013  endm
                      00014  
                      00015 KDISCARD macro ;Remove items from stack 2 and throw them away w/o affecting W
                      00016  decf alt_fsr,f 
                      00017  endm
                      00018 
                      00019 COPY macro ;Duplicate stack top
                      00020  movfw INDF
                      00021  incf FSR,f 
                      00022  movwf INDF 
                      00023  endm
                      00024 
                      00025 #define HLFSR FSR
                      00026  
                      00027 #define HLINDF INDF
                      00028 
                      00029   
                      00030 FAR_CALL macro caller_os,func_os ;Call destination residing within a different code page
                      00031  pagesel func_os
                      00032  call func_os
                      00033  pagesel caller_os ;This one restores the caller's code page
                      00034  endm
                      00035 
                      00036 ;Call destination residing within a different code page... does not restore the caller's
                      00037 ; code page after return, which may be OK (e.g. if the next operation is another 'Far'
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 ; function call). 
                      00039 HALF_FAR_CALL macro func_os 
                      00040  pagesel func_os        
                      00041  call func_os
                      00042  endm
                      00043  
                      00044 KPOP macro
                      00045  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00046  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00047  btfsc STATUS,Z
                      00048  goto $+0F
                      00049  movfw FSR 
                      00050  movwf softstack0+1 ;Save user stack ptr 
                      00051  movfw alt_fsr ;Get second stack ptr 
                      00052  movwf FSR 
                      00053  movfw INDF ;Dereference it 
                      00054  decf FSR,f ;Decrement it 
                      00055  movwf softstack1+1  ;Save popped value for ret urn 
                      00056  movfw FSR ;Save second stack ptr 
                      00057  movwf alt_fsr 
                      00058  movfw softstack0+1  ;Restore user stack ptr 
                      00059  movwf FSR 
                      00060  clrf softstack0+1
                      00061  movfw softstack1+1  ;Bring back popped value for ret urn 
                      00062  goto $+0E
                      00063  movfw FSR 
                      00064  movwf softstack0 ;Save user stack ptr 
                      00065  movfw alt_fsr ;Get second stack ptr 
                      00066  movwf FSR 
                      00067  movfw INDF ;Dereference it 
                      00068  decf FSR,f ;Decrement it 
                      00069  movwf softstack1  ;Save popped value for ret urn 
                      00070  movfw FSR ;Save second stack ptr 
                      00071  movwf alt_fsr 
                      00072  movfw softstack0  ;Restore user stack ptr 
                      00073  movwf FSR 
                      00074  clrf softstack0
                      00075  movfw softstack1  ;Bring back popped value for ret urn 
                      00076  bankisel stack
                      00077  endm 
                      00078 
                      00079 KPUSH macro
                      00080  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00081  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00082  btfsc STATUS,Z
                      00083  goto $+0E
                      00084  movwf softstack1+1 ;softstack1 holds parm value being pushed
                      00085  movfw FSR  
                      00086  movwf softstack0+1  ;softstack0 holds FSR
                      00087  movfw alt_fsr 
                      00088  movwf FSR 
                      00089  movfw softstack1+1
                      00090  incf alt_fsr,f 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00092  movwf INDF 
                      00093  movfw softstack0+1
                      00094  movwf FSR 
                      00095  clrf softstack0+1 
                      00096  goto $+0D
                      00097  movwf softstack1 ;softstack1 holds parm value being pushed
                      00098  movfw FSR  
                      00099  movwf softstack0  ;softstack0 holds FSR
                      00100  movfw alt_fsr 
                      00101  movwf FSR 
                      00102  movfw softstack1
                      00103  incf alt_fsr,f 
                      00104  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00105  movwf INDF 
                      00106  movfw softstack0
                      00107  movwf FSR 
                      00108  clrf softstack0
                      00109  bankisel stack
                      00110  endm
                      00111  
                      00112 PREEMPT macro
                      00113 #ifdef HLLMULTITASK 
                      00114  movwf W_Save ; save context- save W in "W_save" file reg.
                      00115  ;From datasheet... save STATUS properly
                      00116  swapf STATUS,W 
                      00117  movwf STATUS_Save 
                      00118  movf FSR,w 
                      00119  movwf FSR_Save 
                      00120  movf PCLATH,w ; save status in "STATUS_Save" file reg.
                      00121  movwf PC_Save 
                      00122  movf alt_fsr,w 
                      00123  movwf ALT_Save
                      00124  incf in_isr,f
                      00125  pagesel ISR
                      00126  bankisel stack 
                      00127  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
                      00128  movf softstack0,f        ; (coded to preserve constant interrupt latency)
                      00129  btfss STATUS,Z       
                      00130  movf softstack0,w  
                      00131  movwf FSR          
                      00132 #endif 
                      00133  endm
                      00134  
                      00135 RESUME macro
                      00136  
                      00137 #ifdef HLLMULTITASK 
                      00138  clrf in_isr
                      00139  movf ALT_Save,w
                      00140  movwf alt_fsr 
                      00141  movf PC_Save,w ; restore context (W and STATUS)
                      00142  movwf PCLATH
                      00143  movf FSR_Save,w 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00144  movwf FSR
                      00145  ;Per the datasheet...
                      00146  swapf STATUS_Save,W
                      00147  movwf STATUS ;Move W into Status reg
                      00148  swapf W_Save,F ;Swap W_TEMP
                      00149  swapf W_Save,W ;Swap W_TEMP into W
                      00150 #endif
                      00151 
                      00152  endm
                      00153  
                      00154 ; Table macro.. this followed by any series of RETLW calls
                      00155 ; transforms said call list into a function that takes an offset
                      00156 ; and returns that entry in the table (takes 1 byte, returns 1
                      00157 ; byte... this goes atop the HLL feature which allows generation 
                      00158 ; of tables. It can also go atop RETLW tables entered into assembly 
                      00159 ; files in a very basic fashion when doing assembly programming. In 
                      00160 ; either case, the overall result can be called exactly as if it were any 
                      00161 ; other HLOE function
                      00162 HLTABLE macro mmnme
                      00163 mmnme:
                      00164  movlw high mmnme#v(2) ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00165  movwf PCLATH ; and PAGESEL doesn't take care of all 5
                      00166  movlw low mmnme#v(2) ; Perform pointer arithmetic
                      00167  addwf INDF,w 
                      00168  decf FSR,f
                      00169  btfsc STATUS,C ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00170  incf PCLATH,f 
                      00171  movwf PCL 
                      00172 mmnme#v(2): 
                      00173  ;retlw K, retlw K, etc. go here
                      00174  endm
                      00175  
                      00012 
                      00013 
                      00014 #define HLLMULTITASK
                      00003 
                      00004 
                      00005 ;
                      00006 ; R O B O T
                      00007 ;
                      00008 ; C O N F I G
                      00009 ;
                      00010 
                      00011 
2007   30C6           00012  __config (_EXTRC_OSC_NOCLKOUT& _WDT_OFF  & _MCLRE_OFF & _IESO_OFF & _FCMEN_OFF  & _PWRTE_ON & _BOR_OFF)
                      00013 
                      00014 
                      00015 
                      00016 
                      00017 Resetv code 0 
0000   138B           00018  bcf INTCON,GIE
                      00019  pagesel hloego
0001   2???           00020  goto hloego
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00021  
                      00022 #ifdef HLLMULTITASK
                      00023 vectr code 4     ;Device specific
0004                  00024 ISR:
                      00025 
                      00026 
                      00027  PREEMPT
                          M #ifdef HLLMULTITASK 
0004   00??               M  movwf W_Save ; save context- save W in "W_save" file reg.
                          M  ;From datasheet... save STATUS properly
0005   0E03               M  swapf STATUS,W 
0006   00??               M  movwf STATUS_Save 
0007   0804               M  movf FSR,w 
0008   00??               M  movwf FSR_Save 
0009   080A               M  movf PCLATH,w ; save status in "STATUS_Save" file reg.
000A   00??               M  movwf PC_Save 
000B   08??               M  movf alt_fsr,w 
000C   00??               M  movwf ALT_Save
000D   0A??               M  incf in_isr,f
                          M  pagesel ISR
000E   ????               M  bankisel stack 
000F   0804               M  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
0010   08??               M  movf softstack0,f        ; (coded to preserve constant interrupt latency)
0011   1D03               M  btfss STATUS,Z       
0012   08??               M  movf softstack0,w  
0013   0084               M  movwf FSR          
                          M #endif 
                      00028 #endif
0014   1283 1303      00029  banksel PIR1
0016   1C0C           00030  btfss PIR1,TMR1IF
0017   2???           00031  goto hllnotisr49       
0018   100C           00032  bcf PIR1,TMR1IF
                      00033 
                      00034  ; char '.'
                      00035 
                      00036 
0019   302E           00037  movlw .46
                      00038 
                      00039 
                      00040    
                      00041  HALF_FAR_CALL safepush
                          M  pagesel safepush       
001A   2???               M  call safepush
                      00042 
                      00043 
                      00044  
                      00045  FAR_CALL ISR,printch
                          M  pagesel printch
001B   2???               M  call printch
                          M  pagesel ISR       ;This one restores the caller's code page
                      00046 
                      00047  ; char '.'
                      00048 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00049 
001C   302E           00050  movlw .46
                      00051 
                      00052 
                      00053    
                      00054  HALF_FAR_CALL safepush
                          M  pagesel safepush       
001D   2???               M  call safepush
                      00055 
                      00056 
                      00057  
                      00058  FAR_CALL ISR,printch
                          M  pagesel printch
001E   2???               M  call printch
                          M  pagesel ISR       ;This one restores the caller's code page
                      00059 
                      00060  ; char '.'
                      00061 
                      00062 
001F   302E           00063  movlw .46
                      00064 
                      00065 
                      00066    
                      00067  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0020   2???               M  call safepush
                      00068 
                      00069 
                      00070  
                      00071  FAR_CALL ISR,printch
                          M  pagesel printch
0021   2???               M  call printch
                          M  pagesel ISR       ;This one restores the caller's code page
                      00072 
                      00073 
0022                  00074 hllnotisr49:
                      00075 
                      00076 
                      00077 ;
                      00078 ; R O B O T
                      00079 ;
                      00080 ; H E A D E R
                      00081 ;
                      00082 
                      00083 #ifdef HLLMULTITASK
0022                  00084 ExitISR:    
                      00085  RESUME 
                          M  
                          M #ifdef HLLMULTITASK 
0022   01??               M  clrf in_isr
0023   08??               M  movf ALT_Save,w
0024   00??               M  movwf alt_fsr 
0025   08??               M  movf PC_Save,w ; restore context (W and STATUS)
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0026   008A               M  movwf PCLATH
0027   08??               M  movf FSR_Save,w 
0028   0084               M  movwf FSR
                          M  ;Per the datasheet...
0029   0E??               M  swapf STATUS_Save,W
002A   0083               M  movwf STATUS ;Move W into Status reg
002B   0E??               M  swapf W_Save,F ;Swap W_TEMP
002C   0E??               M  swapf W_Save,W ;Swap W_TEMP into W
                          M #endif
                          M 
                      00086  
002D   0009           00087   retfie
                      00088 #endif
                      00089 
                      00090 mainvars udata_shr      
                      00091 #ifdef HLLMULTITASK
0000                  00092 pbase res .1                    ; Used for functions w/ numbered pass/return, to clean up parms/push arg
                            s
0001                  00093 pbaseisr res .1 
                      00094 #else
                      00095 pbase res .1
                      00096 #endif
0002                  00097 PC_Save res .1
                      00098 
                      00099 main code
0000                  00100 hloego:
                      00101 
                      00102  
                      00103 
                      00104   
0000   01??           00105   clrf in_isr
                      00106  
0001   30??           00107   movlw stack-1         ;Set up stack starting position based on literals det. by incremental linker
0002   0084           00108   movwf FSR 
0003   30??           00109   movlw alt_stack-1
0004   00??           00110   movwf alt_fsr 
                      00111  
                      00112  
0005   01??           00113  clrf softstack0 
                      00114  
0006   ????           00115  bankisel stack
                      00116  pagesel hlluserprog
0007   2???           00117  goto hlluserprog
                      00118 hllupuser CODE
0000                  00119 hlluserprog: 
                      00120  
                      00121 
0000   3004           00122  movlw SYNC
                      00123 
                      00124 
                      00125    
                      00126  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00127 
                      00128 
0002   3002           00129  movlw BRGH
                      00130 
                      00131 
                      00132    
                      00133  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0003   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00134 
0004   1683 1303      00135    banksel TXSTA
0006   0818           00136    movfw TXSTA
                      00137    
                      00138    
                      00139 
                      00140    
                      00141  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0007   2???               M  call safepush
                      00142 
                      00143 
                      00144  
                      00145  HALF_FAR_CALL setbit
                          M  pagesel setbit         
0008   2???               M  call setbit
                      00146 
                      00147 
                      00148  
                      00149  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
0009   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00150 
                      00151  POP
000A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000B   0384               M  decf FSR,f 
000C   1683 1303      00152  banksel TXSTA
000E   0098           00153  movwf TXSTA
                      00154  
                      00155 
                      00156 
000F   3003           00157  movlw BRG16
                      00158 
                      00159 
                      00160    
                      00161  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0010   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00162 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00163 
0011   3004           00164  movlw SCKP
                      00165 
                      00166 
                      00167    
                      00168  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0012   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00169 
0013   1683 1303      00170    banksel BAUDCTL
0015   081B           00171    movfw BAUDCTL
                      00172    
                      00173    
                      00174 
                      00175    
                      00176  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0016   2???               M  call safepush
                      00177 
                      00178 
                      00179  
                      00180  HALF_FAR_CALL setbit
                          M  pagesel setbit         
0017   2???               M  call setbit
                      00181 
                      00182 
                      00183  
                      00184  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0018   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00185 
                      00186  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   1683 1303      00187  banksel BAUDCTL
001D   009B           00188  movwf BAUDCTL
                      00189  
                      00190 
                      00191 
001E   3004           00192  movlw CREN
                      00193 
                      00194 
                      00195    
                      00196  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
001F   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00197 
0020   1283 1303      00198    banksel RCSTA
0022   0818           00199    movfw RCSTA
                      00200    
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00201    
                      00202 
                      00203    
                      00204  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0023   2???               M  call safepush
                      00205 
                      00206 
                      00207  
                      00208  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
0024   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00209 
                      00210  POP
0025   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0026   0384               M  decf FSR,f 
0027   1283 1303      00211  banksel RCSTA
0029   0098           00212  movwf RCSTA
                      00213  
                      00214 
                      00215 
002A   3004           00216  movlw CREN
                      00217 
                      00218 
                      00219    
                      00220  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
002B   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00221 
002C   1283 1303      00222    banksel RCSTA
002E   0818           00223    movfw RCSTA
                      00224    
                      00225    
                      00226 
                      00227    
                      00228  HALF_FAR_CALL safepush
                          M  pagesel safepush       
002F   2???               M  call safepush
                      00229 
                      00230 
                      00231  
                      00232  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0030   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00233 
                      00234  POP
0031   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0032   0384               M  decf FSR,f 
0033   1283 1303      00235  banksel RCSTA
0035   0098           00236  movwf RCSTA
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00237  
                      00238 
                      00239 
0036   3019           00240  movlw .25
                      00241 
                      00242    
                      00243  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0037   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00244 
                      00245  POP
0038   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0039   0384               M  decf FSR,f 
003A   1683 1303      00246  banksel SPBRG
003C   0099           00247  movwf SPBRG
                      00248  
                      00249 
                      00250 
003D   3000           00251  movlw .0
                      00252 
                      00253    
                      00254  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
003E   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00255 
                      00256  POP
003F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0040   0384               M  decf FSR,f 
0041   1683 1303      00257  banksel SPBRGH
0043   009A           00258  movwf SPBRGH
                      00259  
                      00260 
                      00261 
0044   3005           00262  movlw TXEN
                      00263 
                      00264 
                      00265    
                      00266  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0045   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00267 
                      00268 
0046   3006           00269  movlw TX9
                      00270 
                      00271 
                      00272    
                      00273  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0047   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00274 
0048   1683 1303      00275    banksel TXSTA
004A   0818           00276    movfw TXSTA
                      00277    
                      00278    
                      00279 
                      00280    
                      00281  HALF_FAR_CALL safepush
                          M  pagesel safepush       
004B   2???               M  call safepush
                      00282 
                      00283 
                      00284  
                      00285  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
004C   2???               M  call clearbit
                      00286 
                      00287 
                      00288  
                      00289  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
004D   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00290 
                      00291  POP
004E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
004F   0384               M  decf FSR,f 
0050   1683 1303      00292  banksel TXSTA
0052   0098           00293  movwf TXSTA
                      00294  
                      00295 
                      00296 
0053   3007           00297  movlw SPEN
                      00298 
                      00299 
                      00300    
                      00301  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0054   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00302 
0055   1283 1303      00303    banksel RCSTA
0057   0818           00304    movfw RCSTA
                      00305    
                      00306    
                      00307 
                      00308    
                      00309  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0058   2???               M  call safepush
                      00310 
                      00311 
                      00312  
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00313  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0059   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00314 
                      00315  POP
005A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
005B   0384               M  decf FSR,f 
005C   1283 1303      00316  banksel RCSTA
005E   0098           00317  movwf RCSTA
                      00318  
                      00319 
                      00320 
005F   3000           00321  movlw .0
                      00322 
                      00323    
                      00324  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0060   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00325 
                      00326  POP
0061   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0062   0384               M  decf FSR,f 
0063   1283 1303      00327  banksel INTCON
0065   008B           00328  movwf INTCON
                      00329  
                      00330 
                      00331 
0066   3007           00332  movlw C1ON
                      00333 
                      00334 
                      00335    
                      00336  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0067   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00337 
0068   1283 1703      00338    banksel CM1CON0
006A   0819           00339    movfw CM1CON0
                      00340    
                      00341    
                      00342 
                      00343    
                      00344  HALF_FAR_CALL safepush
                          M  pagesel safepush       
006B   2???               M  call safepush
                      00345 
                      00346 
                      00347  
                      00348  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
006C   2???               M  call setbit
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00349 
                      00350  POP
006D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
006E   0384               M  decf FSR,f 
006F   1283 1703      00351  banksel CM1CON0
0071   0099           00352  movwf CM1CON0
                      00353  
                      00354 
                      00355 
0072   3007           00356  movlw C1ON
                      00357 
                      00358 
                      00359    
                      00360  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0073   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00361 
0074   1283 1703      00362    banksel CM2CON0
0076   081A           00363    movfw CM2CON0
                      00364    
                      00365    
                      00366 
                      00367    
                      00368  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0077   2???               M  call safepush
                      00369 
                      00370 
                      00371  
                      00372  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0078   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00373 
                      00374  POP
0079   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
007A   0384               M  decf FSR,f 
007B   1283 1703      00375  banksel CM2CON0
007D   009A           00376  movwf CM2CON0
                      00377  
                      00378 
                      00379 
007E   3001           00380  movlw TMR1CS
                      00381 
                      00382 
                      00383    
                      00384  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
007F   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00385 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00386 
0080   3006           00387  movlw TMR1GE
                      00388 
                      00389 
                      00390    
                      00391  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0081   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00392 
                      00393 
0082   3005           00394  movlw T1CKPS1
                      00395 
                      00396 
                      00397    
                      00398  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0083   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00399 
                      00400 
0084   3004           00401  movlw T1CKPS0
                      00402 
                      00403 
                      00404    
                      00405  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0085   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00406 
                      00407 
0086   3002           00408  movlw NOT_T1SYNC
                      00409 
                      00410 
                      00411    
                      00412  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0087   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00413 
                      00414 
0088   3003           00415  movlw T1OSCEN
                      00416 
                      00417 
                      00418    
                      00419  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0089   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00420 
008A   1283 1303      00421    banksel T1CON
008C   0810           00422    movfw T1CON
                      00423    
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00424    
                      00425 
                      00426    
                      00427  HALF_FAR_CALL safepush
                          M  pagesel safepush       
008D   2???               M  call safepush
                      00428 
                      00429 
                      00430  
                      00431  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
008E   2???               M  call clearbit
                      00432 
                      00433 
                      00434  
                      00435  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
008F   2???               M  call clearbit
                      00436 
                      00437 
                      00438  
                      00439  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
0090   2???               M  call clearbit
                      00440 
                      00441 
                      00442  
                      00443  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
0091   2???               M  call clearbit
                      00444 
                      00445 
                      00446  
                      00447  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
0092   2???               M  call clearbit
                      00448 
                      00449 
                      00450  
                      00451  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
0093   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00452 
                      00453  POP
0094   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0095   0384               M  decf FSR,f 
0096   1283 1303      00454  banksel T1CON
0098   0090           00455  movwf T1CON
                      00456  
                      00457 
                      00458 
0099   3000           00459  movlw TMR1IE
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00460 
                      00461 
                      00462    
                      00463  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
009A   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00464 
009B   1683 1303      00465    banksel PIE1
009D   080C           00466    movfw PIE1
                      00467    
                      00468    
                      00469 
                      00470    
                      00471  HALF_FAR_CALL safepush
                          M  pagesel safepush       
009E   2???               M  call safepush
                      00472 
                      00473 
                      00474  
                      00475  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
009F   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00476 
                      00477  POP
00A0   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A1   0384               M  decf FSR,f 
00A2   1683 1303      00478  banksel PIE1
00A4   008C           00479  movwf PIE1
                      00480  
                      00481 
                      00482 
00A5   3006           00483  movlw PEIE
                      00484 
                      00485 
                      00486    
                      00487  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
00A6   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00488 
00A7   1283 1303      00489    banksel INTCON
00A9   080B           00490    movfw INTCON
                      00491    
                      00492    
                      00493 
                      00494    
                      00495  HALF_FAR_CALL safepush
                          M  pagesel safepush       
00AA   2???               M  call safepush
                      00496 
                      00497 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00498  
                      00499  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
00AB   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00500 
                      00501  POP
00AC   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00AD   0384               M  decf FSR,f 
00AE   1283 1303      00502  banksel INTCON
00B0   008B           00503  movwf INTCON
                      00504  
                      00505 
                      00506 
00B1   3000           00507  movlw TMR1ON
                      00508 
                      00509 
                      00510    
                      00511  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
00B2   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00512 
00B3   1283 1303      00513    banksel T1CON
00B5   0810           00514    movfw T1CON
                      00515    
                      00516    
                      00517 
                      00518    
                      00519  HALF_FAR_CALL safepush
                          M  pagesel safepush       
00B6   2???               M  call safepush
                      00520 
                      00521 
                      00522  
                      00523  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
00B7   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00524 
                      00525  POP
00B8   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00B9   0384               M  decf FSR,f 
00BA   1283 1303      00526  banksel T1CON
00BC   0090           00527  movwf T1CON
                      00528  
                      00529 
                      00530 
00BD   3000           00531  movlw .0
                      00532 
                      00533    
                      00534  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00BE   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00535 
                      00536  POP
00BF   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00C0   0384               M  decf FSR,f 
00C1   1283 1303      00537  banksel TMR1H
00C3   008F           00538  movwf TMR1H
                      00539  
                      00540 
                      00541 
00C4   3000           00542  movlw .0
                      00543 
                      00544    
                      00545  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
00C5   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00546 
                      00547  POP
00C6   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00C7   0384               M  decf FSR,f 
00C8   1283 1303      00548  banksel TMR1L
00CA   008E           00549  movwf TMR1L
                      00550  
                      00551 
                      00552 
00CB   3007           00553  movlw GIE
                      00554 
                      00555 
                      00556    
                      00557  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
00CC   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00558 
00CD   1283 1303      00559    banksel INTCON
00CF   080B           00560    movfw INTCON
                      00561    
                      00562    
                      00563 
                      00564    
                      00565  HALF_FAR_CALL safepush
                          M  pagesel safepush       
00D0   2???               M  call safepush
                      00566 
                      00567 
                      00568  
                      00569  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
00D1   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00570 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00571  POP
00D2   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00D3   0384               M  decf FSR,f 
00D4   1283 1303      00572  banksel INTCON
00D6   008B           00573  movwf INTCON
                      00574  
                      00575 
                      00576 
00D7   3000           00577  movlw TMR1ON
                      00578 
                      00579 
                      00580    
                      00581  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
00D8   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00582 
00D9   1283 1303      00583    banksel T1CON
00DB   0810           00584    movfw T1CON
                      00585    
                      00586    
                      00587 
                      00588    
                      00589  HALF_FAR_CALL safepush
                          M  pagesel safepush       
00DC   2???               M  call safepush
                      00590 
                      00591 
                      00592  
                      00593  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
00DD   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00594 
                      00595  POP
00DE   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00DF   0384               M  decf FSR,f 
00E0   1283 1303      00596  banksel T1CON
00E2   0090           00597  movwf T1CON
                      00598  
                      00599 
                      00600 
00E3   3000           00601  movlw .0
                      00602 
                      00603    
                      00604  HALF_FAR_CALL safepush
                          M  pagesel safepush       
00E4   2???               M  call safepush
                      00605 
                      00606 
                      00607  
                      00608  FAR_CALL hlluserprog,abcs
                          M  pagesel abcs
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E5   2???               M  call abcs
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00609 
                      00610     
00E6                  00611 hllprogend:
00E6   2???           00612  goto hllprogend
                      00613  
                      00614 
                      00615 hllt450 CODE
0000                  00616 abcs:
0000   0804           00617  movf FSR,w
                      00618  
                      00619 
                      00620  
                      00621  FAR_CALL abcs ,kpush
                          M  pagesel kpush
0001   2???               M  call kpush
                          M  pagesel abcs      ;This one restores the caller's code page
                      00622 
                      00623 
0002   3041           00624  movlw .65
                      00625 
                      00626    
                      00627  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0003   2???               M  call safepush
                      00628 
                      00629 
                      00630  
                      00631  HALF_FAR_CALL build
                          M  pagesel build          
0004   2???               M  call build
                      00632 
                      00633 
                      00634  
                      00635  FAR_CALL abcs,pstr
                          M  pagesel pstr
0005   2???               M  call pstr
                          M  pagesel abcs      ;This one restores the caller's code page
                      00636 
                      00637  ;
                      00638  KDISCARD 
0006   03??               M  decf alt_fsr,f 
0007   2???           00639  goto abcs
                      00640 
                      00641  
                      00642 
                      00643 hllt453 CODE
0000                  00644 build:
0000   0804           00645  movf FSR,w
                      00646  
                      00647 
                      00648  
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00649  FAR_CALL build ,kpush
                          M  pagesel kpush
0001   2???               M  call kpush
                          M  pagesel build     ;This one restores the caller's code page
                      00650 
                      00651 
0002   3000           00652  movlw .0
                      00653 
                      00654    
                      00655  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0003   2???               M  call safepush
                      00656 
                      00657 
                      00658  
                      00659  FAR_CALL build,parm
                          M  pagesel parm
0004   2???               M  call parm
                          M  pagesel build     ;This one restores the caller's code page
                      00660 
                      00661 
0005   305A           00662  movlw .90
                      00663 
                      00664    
                      00665  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0006   2???               M  call safepush
                      00666 
                      00667 
                      00668  
                      00669  FAR_CALL build,eq
                          M  pagesel eq
0007   2???               M  call eq
                          M  pagesel build     ;This one restores the caller's code page
                      00670 
                      00671  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   3A00           00672  xorlw .0
000B   1903           00673  btfsc STATUS,Z
000C   2???           00674  goto hlllb51J1 
                      00675  
                      00676  
000D   2???           00677  goto hlllb51J2
                      00678  
                      00679 
000E                  00680 hlllb51J1:
                      00681 
                      00682 
000E   3000           00683  movlw .0
                      00684 
                      00685    
                      00686  HALF_FAR_CALL safepush
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M  pagesel safepush       
000F   2???               M  call safepush
                      00687 
                      00688 
                      00689  
                      00690  FAR_CALL build,parm
                          M  pagesel parm
0010   2???               M  call parm
                          M  pagesel build     ;This one restores the caller's code page
                      00691 
                      00692 
0011   3001           00693  movlw .1
                      00694 
                      00695    
                      00696  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0012   2???               M  call safepush
                      00697 
                      00698 
                      00699  
                      00700  FAR_CALL build,add
                          M  pagesel add
0013   2???               M  call add
                          M  pagesel build     ;This one restores the caller's code page
                      00701 
                      00702  ;
                      00703 
                      00704  KDISCARD 
0014   03??               M  decf alt_fsr,f 
0015   2???           00705  goto build
0016                  00706 hlllb51J2:
                      00707 
                      00708  KDISCARD 
0016   03??               M  decf alt_fsr,f 
0017   0008           00709  return 
                      00710 
                      00711  
                      00712 
                      00713 hllt456 CODE
0000                  00714 pstr:
0000   0804           00715  movf FSR,w
                      00716  
                      00717 
                      00718  
                      00719  HALF_FAR_CALL kpush
                          M  pagesel kpush          
0001   2???               M  call kpush
                      00720 
                      00721 
                      00722  
                      00723  FAR_CALL pstr,printch
                          M  pagesel printch
0002   2???               M  call printch
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M  pagesel pstr      ;This one restores the caller's code page
                      00724 
                      00725 
0003   3001           00726  movlw .1
                      00727 
                      00728    
                      00729  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0004   2???               M  call safepush
                      00730 
                      00731 
                      00732  
                      00733  FAR_CALL pstr,parm
                          M  pagesel parm
0005   2???               M  call parm
                          M  pagesel pstr      ;This one restores the caller's code page
                      00734 
                      00735 
0006   3000           00736  movlw .0
                      00737 
                      00738    
                      00739  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0007   2???               M  call safepush
                      00740 
                      00741 
                      00742  
                      00743  FAR_CALL pstr,eq
                          M  pagesel eq
0008   2???               M  call eq
                          M  pagesel pstr      ;This one restores the caller's code page
                      00744 
                      00745  POP
0009   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000A   0384               M  decf FSR,f 
000B   3A00           00746  xorlw .0
000C   1903           00747  btfsc STATUS,Z
000D   2???           00748  goto hlllb51J4 
                      00749  
                      00750  
000E   2???           00751  goto hlllb51J5
                      00752  
                      00753 
000F                  00754 hlllb51J4:
                      00755 
                      00756  ;
                      00757 
                      00758  KDISCARD 
000F   03??               M  decf alt_fsr,f 
0010   2???           00759  goto pstr
0011                  00760 hlllb51J5:
                      00761 
                      00762  KDISCARD 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011   03??               M  decf alt_fsr,f 
0012   0008           00763  return 
                      00764 
                      00765  
0013                  00766 hllprgen2:
0013   2???           00767  goto hllprgen2
                      00768  
                      00769 
                      00770 
                      00771 
                      00772 
                      00773 
                      00774  
                      00775 
                      00776 
                      00777 hlog1a CODE
                      00778 
                      00779 
                      00780 
                      00781 #define margp2 hllblss00
                      00782 
                      00783 
0000                  00784 clearbit:  
                      00785 #ifdef HLLMULTITASK
                      00786 #ifdef HLLGUARDhllblss 
0000   08??           00787  movf in_isr,f  
0001   1903           00788  btfsc STATUS,Z
                      00789  
                      00790 
                      00791 
0002   2???           00792  goto clearbit0
                      00793 
                      00794  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   ???? ????      00795  banksel margp2
0007   00??           00796  movwf margp2
                      00797  POP 
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   3A00           00798  xorlw .0
000B   1D03           00799  btfss STATUS,Z
000C   2???           00800  goto tff00h
                      00801  
000D   08??           00802  movfw margp2
000E   39FE           00803  andlw .255-.1
000F   2???           00804  goto tff99h
0010                  00805 tff00h: 
                      00806  
0010   3A01           00807  xorlw .1
0011   1D03           00808  btfss STATUS,Z
0012   2???           00809  goto tff01h
                      00810  
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013   08??           00811  movfw margp2
0014   39FD           00812  andlw .255-.2
0015   2???           00813  goto tff99h
0016                  00814 tff01h: 
0016   3A01           00815  xorlw .1
0017   3A02           00816  xorlw .2
0018   1D03           00817  btfss STATUS,Z
0019   2???           00818  goto tff02h
                      00819  
001A   08??           00820  movfw margp2
001B   39FB           00821  andlw .255-.4
001C   2???           00822  goto tff99h
001D                  00823 tff02h: 
001D   3A02           00824  xorlw .2
001E   3A03           00825  xorlw .3
001F   1D03           00826  btfss STATUS,Z
0020   2???           00827  goto tff03h
                      00828  
0021   08??           00829  movfw margp2
0022   39F7           00830  andlw .255-.8
0023   2???           00831  goto tff99h
0024                  00832 tff03h: 
0024   3A03           00833  xorlw .3
0025   3A04           00834  xorlw .4
0026   1D03           00835  btfss STATUS,Z
0027   2???           00836  goto tff04h
                      00837  
0028   08??           00838  movfw margp2
0029   39EF           00839  andlw .255-.16
002A   2???           00840  goto tff99h
002B                  00841 tff04h: 
002B   3A04           00842  xorlw .4
002C   3A05           00843  xorlw .5
002D   1D03           00844  btfss STATUS,Z
002E   2???           00845  goto tff05h
                      00846  
002F   08??           00847  movfw margp2
0030   39DF           00848  andlw .255-.32
0031   2???           00849  goto tff99h
0032                  00850 tff05h: 
0032   3A05           00851  xorlw .5
0033   3A06           00852  xorlw .6
0034   1D03           00853  btfss STATUS,Z
0035   2???           00854  goto tff07h
                      00855  
0036   08??           00856  movfw margp2
0037   39BF           00857  andlw .255-.64
0038   2???           00858  goto tff99h
0039                  00859 tff07h: 
                      00860  
0039   08??           00861  movfw margp2
003A   397F           00862  andlw .255-.128
003B                  00863 tff99h:  
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00864  PUSH
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003D   0008           00865  return
                      00866 
                      00867 
                      00868 
                      00869 
                      00870 #undefine margp2
                      00871 
                      00872 
                      00873 #define margp2 hllblss00+1
                      00874 
                      00875 
003E                  00876 clearbit0:
                      00877 #endif
                      00878 #endif
                      00879 
                      00880  POP
003E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003F   0384               M  decf FSR,f 
0040   ???? ????      00881  banksel margp2
0042   00??           00882  movwf margp2
                      00883  POP 
0043   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0044   0384               M  decf FSR,f 
0045   3A00           00884  xorlw .0
0046   1D03           00885  btfss STATUS,Z
0047   2???           00886  goto hllAAAAA
                      00887  
0048   08??           00888  movfw margp2
0049   39FE           00889  andlw .255-.1
004A   2???           00890  goto hllHAAAA
004B                  00891 hllAAAAA: 
                      00892  
004B   3A01           00893  xorlw .1
004C   1D03           00894  btfss STATUS,Z
004D   2???           00895  goto hllBAAAA
                      00896  
004E   08??           00897  movfw margp2
004F   39FD           00898  andlw .255-.2
0050   2???           00899  goto hllHAAAA
0051                  00900 hllBAAAA: 
0051   3A01           00901  xorlw .1
0052   3A02           00902  xorlw .2
0053   1D03           00903  btfss STATUS,Z
0054   2???           00904  goto hllCAAAA
                      00905  
0055   08??           00906  movfw margp2
0056   39FB           00907  andlw .255-.4
0057   2???           00908  goto hllHAAAA
0058                  00909 hllCAAAA: 
0058   3A02           00910  xorlw .2
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0059   3A03           00911  xorlw .3
005A   1D03           00912  btfss STATUS,Z
005B   2???           00913  goto hllDAAAA
                      00914  
005C   08??           00915  movfw margp2
005D   39F7           00916  andlw .255-.8
005E   2???           00917  goto hllHAAAA
005F                  00918 hllDAAAA: 
005F   3A03           00919  xorlw .3
0060   3A04           00920  xorlw .4
0061   1D03           00921  btfss STATUS,Z
0062   2???           00922  goto hllEAAAA
                      00923  
0063   08??           00924  movfw margp2
0064   39EF           00925  andlw .255-.16
0065   2???           00926  goto hllHAAAA
0066                  00927 hllEAAAA: 
0066   3A04           00928  xorlw .4
0067   3A05           00929  xorlw .5
0068   1D03           00930  btfss STATUS,Z
0069   2???           00931  goto hllFAAAA
                      00932  
006A   08??           00933  movfw margp2
006B   39DF           00934  andlw .255-.32
006C   2???           00935  goto hllHAAAA
006D                  00936 hllFAAAA: 
006D   3A05           00937  xorlw .5
006E   3A06           00938  xorlw .6
006F   1D03           00939  btfss STATUS,Z
0070   2???           00940  goto hllGAAAA
                      00941  
0071   08??           00942  movfw margp2
0072   39BF           00943  andlw .255-.64
0073   2???           00944  goto hllHAAAA
0074                  00945 hllGAAAA: 
                      00946  
0074   08??           00947  movfw margp2
0075   397F           00948  andlw .255-.128
0076                  00949 hllHAAAA:  
                      00950  PUSH
0076   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0077   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0078   0008           00951  return
                      00952 
                      00953 
                      00954 
                      00955 
                      00956 #undefine margp2
                      00957 
                      00958 
                      00959 
                      00960 
                      00961 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00962 
                      00963 
                      00964  
                      00965 
                      00966 
                      00967 
                      00968 ukrnl2 UDATA
0000                  00969 stack res HLOE_STACK_SIZE
                      00970  
                      00971 ukrnl3 UDATA 
0000                  00972 alt_stack res HLOE_STACK2_SIZE
                      00973  
                      00974 
                      00975 
                      00976 ukernl udata 
                      00977 
                      00978 
                      00979 
                      00980 
                      00981 
0000                  00982 hllblss00 res 1           
                      00983 #ifdef HLLMULTITASK
                      00984 #ifdef HLLGUARDhllblss
0001                  00985 hllblss00isr res 1      
                      00986 #endif
                      00987 #endif
                      00988 
0002                  00989 hllblss01 res 1    
                      00990 #ifdef HLLMULTITASK
                      00991 #ifdef HLLGUARDhllblss
0003                  00992 hllblss01isr res 1      
                      00993 #endif
                      00994 #endif
                      00995 
0004                  00996 hllblss02 res 1    
                      00997 #ifdef HLLMULTITASK
                      00998 #ifdef HLLGUARDhllblss
0005                  00999 hllblss02isr res 1      
                      01000 #endif
                      01001 #endif
                      01002   
                      01003 ukrshr udata_shr
                      01004 
                      01005 
0000                  01006 softstack0 res 1                
                      01007 #ifdef HLLMULTITASK
0001                  01008 softstack0isr res 1
                      01009 #endif
                      01010 
0002                  01011 softstack1 res 1                
                      01012 #ifdef HLLMULTITASK
0003                  01013 softstack1isr res 1
                      01014 #endif
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01015 
0004                  01016 softstack2 res 1                
                      01017 #ifdef HLLMULTITASK
0005                  01018 softstack2isr res 1
                      01019 #endif
                      01020 
0006                  01021 alt_fsr res 1
0007                  01022 W_Save res 1 
0008                  01023 STATUS_Save res 1
0009                  01024 FSR_Save res 1
000A                  01025 ALT_Save res 1
000B                  01026 in_isr res 1
                      01027 
                      01028 hllkrna00 CODE
                      01029 
                      01030  
                      01031 
                      01032 
                      01033 #define mterm hllblss00
                      01034 
                      01035 
0000                  01036 mul:  
                      01037 #ifdef HLLMULTITASK
                      01038 #ifdef HLLGUARDhllblss 
0000   08??           01039  movf in_isr,f  
0001   1903           01040  btfsc STATUS,Z
                      01041  
                      01042 
                      01043 
0002   2???           01044  goto mul0
                      01045 
                      01046  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   ???? ????      01047  banksel mterm 
0007   00??           01048  movwf mterm
0008   0103           01049  clrw 
0009   0700           01050  addwf HLINDF,w 
000A   03??           01051  decf mterm,f 
000B   1D03           01052  btfss STATUS,Z 
000C   2???           01053  goto $-3
000D   0080           01054  movwf HLINDF
000E   0008           01055  return
                      01056 
                      01057 
                      01058 
                      01059 #undefine mterm
                      01060 
                      01061 
                      01062 #define mterm hllblss00+1
                      01063 
                      01064 
000F                  01065 mul0:
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01066 #endif
                      01067 #endif
                      01068 
                      01069  POP
000F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0010   0384               M  decf FSR,f 
0011   ???? ????      01070  banksel mterm 
0013   00??           01071  movwf mterm
0014   0103           01072  clrw 
0015   0700           01073  addwf HLINDF,w 
0016   03??           01074  decf mterm,f 
0017   1D03           01075  btfss STATUS,Z 
0018   2???           01076  goto $-3
0019   0080           01077  movwf HLINDF
001A   0008           01078  return
                      01079 
                      01080 
                      01081 
                      01082 #undefine mterm
                      01083 hllkrna01 CODE
                      01084 
0000                  01085 add: 
                      01086  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0700           01087  addwf HLINDF,w
0003   0384           01088  decf HLFSR,f 
                      01089  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           01090  return
                      01091  
                      01092 hllkrna02 CODE 
                      01093 
0000                  01094 negti:  
0000   0980           01095  comf HLINDF,f
0001   0A80           01096  incf HLINDF,f
0002   0008           01097  return
                      01098  
                      01099 hllkrna03 CODE 
                      01100  
0000                  01101 printch:
                      01102  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      01103 #ifdef HLLMULTITASK 
                      01104  
0002   1283 1303      01105  banksel PIR1
0004   1E0C           01106  btfss PIR1,TXIF  
0005   2???           01107  goto $-1 
                      01108 #endif 
                      01109  
0006   1283 1303      01110  banksel TXREG
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   0099           01111  movwf TXREG  
                      01112  
0009   1283 1303      01113  banksel PIR1
000B   1E0C           01114  btfss PIR1,TXIF  
000C   2???           01115  goto $-1  
000D   0008           01116  return  
                      01117  
                      01118 
                      01119 hllkrna04 CODE
                      01120  
                      01121 
                      01122 
                      01123 #define mterm hllblss00
                      01124 
                      01125 
                      01126 #define mdiv hllblss01
                      01127 
                      01128 
                      01129 #define mquot hllblss02
                      01130 
                      01131 
0000                  01132 modu:  
                      01133 #ifdef HLLMULTITASK
                      01134 #ifdef HLLGUARDhllblss 
0000   08??           01135  movf in_isr,f  
0001   1903           01136  btfsc STATUS,Z
                      01137  
                      01138 
                      01139 
0002   2???           01140  goto modu0
                      01141 
0003   ???? ????      01142  banksel mquot 
0005   01??           01143  clrf mquot
                      01144  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           01145  movwf mdiv
                      01146  POP
0009   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000A   0384               M  decf FSR,f 
000B   00??           01147  movwf mterm
000C   08??           01148  movfw mdiv
000D   02??           01149  subwf mterm,f
000E   1C03           01150  btfss STATUS,C 
000F   2???           01151  goto $+3
0010   0A??           01152  incf mquot,f 
0011   2???           01153  goto $-4
0012   07??           01154  addwf mterm,w
                      01155  PUSH
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0015   0008           01156  return 
                      01157 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01158 
                      01159 
                      01160 #undefine mterm
                      01161 
                      01162 
                      01163 #undefine mdiv
                      01164 
                      01165 
                      01166 #undefine mquot
                      01167 
                      01168 
                      01169 #define mterm hllblss00+1
                      01170 
                      01171 
                      01172 #define mdiv hllblss01+1
                      01173 
                      01174 
                      01175 #define mquot hllblss02+1
                      01176 
                      01177 
0016                  01178 modu0:
                      01179 #endif
                      01180 #endif
                      01181 
0016   ???? ????      01182  banksel mquot 
0018   01??           01183  clrf mquot
                      01184  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   00??           01185  movwf mdiv
                      01186  POP
001C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001D   0384               M  decf FSR,f 
001E   00??           01187  movwf mterm
001F   08??           01188  movfw mdiv
0020   02??           01189  subwf mterm,f
0021   1C03           01190  btfss STATUS,C 
0022   2???           01191  goto $+3
0023   0A??           01192  incf mquot,f 
0024   2???           01193  goto $-4
0025   07??           01194  addwf mterm,w
                      01195  PUSH
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0028   0008           01196  return 
                      01197 
                      01198 
                      01199 
                      01200 #undefine mterm
                      01201 
                      01202 
                      01203 #undefine mdiv
                      01204 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01205 
                      01206 #undefine mquot
                      01207 hllkrna05 CODE
                      01208 
                      01209 
                      01210 
                      01211 #define mterm hllblss00
                      01212 
                      01213 
                      01214 #define mdiv hllblss01
                      01215 
                      01216 
                      01217 #define mquot hllblss02
                      01218 
                      01219 
0000                  01220 divu:  
                      01221 #ifdef HLLMULTITASK
                      01222 #ifdef HLLGUARDhllblss 
0000   08??           01223  movf in_isr,f  
0001   1903           01224  btfsc STATUS,Z
                      01225  
                      01226 
                      01227 
0002   2???           01228  goto divu0
                      01229 
0003   ???? ????      01230  banksel mquot 
0005   01??           01231  clrf mquot
                      01232  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           01233  movwf mdiv
                      01234  POP
0009   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000A   0384               M  decf FSR,f 
000B   00??           01235  movwf mterm
000C   08??           01236  movfw mdiv
000D   02??           01237  subwf mterm,f
000E   1C03           01238  btfss STATUS,C 
000F   2???           01239  goto $+3
0010   0A??           01240  incf mquot,f 
0011   2???           01241  goto $-4
0012   08??           01242  movfw mquot
                      01243  PUSH
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0015   0008           01244  return 
                      01245 
                      01246 
                      01247 
                      01248 #undefine mterm
                      01249 
                      01250 
                      01251 #undefine mdiv
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01252 
                      01253 
                      01254 #undefine mquot
                      01255 
                      01256 
                      01257 #define mterm hllblss00+1
                      01258 
                      01259 
                      01260 #define mdiv hllblss01+1
                      01261 
                      01262 
                      01263 #define mquot hllblss02+1
                      01264 
                      01265 
0016                  01266 divu0:
                      01267 #endif
                      01268 #endif
                      01269 
0016   ???? ????      01270  banksel mquot 
0018   01??           01271  clrf mquot
                      01272  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   00??           01273  movwf mdiv
                      01274  POP
001C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001D   0384               M  decf FSR,f 
001E   00??           01275  movwf mterm
001F   08??           01276  movfw mdiv
0020   02??           01277  subwf mterm,f
0021   1C03           01278  btfss STATUS,C 
0022   2???           01279  goto $+3
0023   0A??           01280  incf mquot,f 
0024   2???           01281  goto $-4
0025   08??           01282  movfw mquot
                      01283  PUSH
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0028   0008           01284  return 
                      01285 
                      01286 
                      01287 
                      01288 #undefine mterm
                      01289 
                      01290 
                      01291 #undefine mdiv
                      01292 
                      01293 
                      01294 #undefine mquot
                      01295 hllkrna06 CODE
                      01296 
                      01297  
                      01298  
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01299  
0000                  01300 getch:
0000   1283 1303      01301  banksel PIR1
0002                  01302 geth2: 
0002   1E8C           01303  btfss PIR1,RCIF
0003   2???           01304  goto geth2
0004   1283 1303      01305  banksel RCREG
0006   081A           01306  movf RCREG,w
                      01307  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           01308  return
                      01309  
                      01310 hllkrna07 CODE 
                      01311  
0000                  01312 eq: 
                      01313  POP 
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0600           01314  xorwf HLINDF,w
0003   3001           01315  movlw .1 
0004   1D03           01316  btfss STATUS,Z
0005   3000           01317  movlw .0 
0006   0384           01318  decf HLFSR,f 
                      01319  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           01320  return
                      01321  
                      01322  
                      01323  
                      01324 
                      01325 #define sstack0 softstack0 
                      01326 #define sstack1 softstack1 
                      01327 #define sstack2 softstack2 
                      01328 
                      01329 hllparmcore macro 
                      01330  movwf sstack2
                      01331  movfw HLFSR 
                      01332            
                      01333                    
                      01334  movwf sstack0
                      01335  movfw HLINDF
                      01336  
                      01337  subwf sstack2,w
                      01338  movwf HLFSR 
                      01339  movfw HLINDF 
                      01340  
                      01341  movwf sstack1
                      01342  
                      01343  movfw sstack0
                      01344  movwf HLFSR 
                      01345  clrf sstack0
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01346  movfw sstack1 
                      01347  movwf HLINDF
                      01348  
                      01349  movfw sstack2
                      01350  pagesel kpush
                      01351  goto kpush 
                      01352  endm
                      01353 
                      01354  
                      01355 hllkrna08 CODE  
0000                  01356 parm:
                      01357  KPOP 
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
                      01358  
                      01359 #ifdef HLLMULTITASK 
0020   08??           01360  movf in_isr,f 
0021   1D03           01361  btfss STATUS,Z
0022   2???           01362  goto parm4
                      01363  hllparmcore
0023   00??               M  movwf sstack2
0024   0804               M  movfw HLFSR 
                          M            
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M                    
0025   00??               M  movwf sstack0
0026   0800               M  movfw HLINDF
                          M  
0027   02??               M  subwf sstack2,w
0028   0084               M  movwf HLFSR 
0029   0800               M  movfw HLINDF 
                          M  
002A   00??               M  movwf sstack1
                          M  
002B   08??               M  movfw sstack0
002C   0084               M  movwf HLFSR 
002D   01??               M  clrf sstack0
002E   08??               M  movfw sstack1 
002F   0080               M  movwf HLINDF
                          M  
0030   08??               M  movfw sstack2
                          M  pagesel kpush
0031   2???               M  goto kpush 
                      01364 #undefine sstack0 
                      01365 #undefine sstack1
                      01366 #undefine sstack2 
                      01367 #define sstack0 softstack0+1
                      01368 #define sstack1 softstack1+1
                      01369 #define sstack2 softstack2+1
0032                  01370 parm4:
                      01371 #endif 
                      01372  hllparmcore
0032   00??               M  movwf sstack2
0033   0804               M  movfw HLFSR 
                          M            
                          M                    
0034   00??               M  movwf sstack0
0035   0800               M  movfw HLINDF
                          M  
0036   02??               M  subwf sstack2,w
0037   0084               M  movwf HLFSR 
0038   0800               M  movfw HLINDF 
                          M  
0039   00??               M  movwf sstack1
                          M  
003A   08??               M  movfw sstack0
003B   0084               M  movwf HLFSR 
003C   01??               M  clrf sstack0
003D   08??               M  movfw sstack1 
003E   0080               M  movwf HLINDF
                          M  
003F   08??               M  movfw sstack2
                          M  pagesel kpush
0040   2???               M  goto kpush 
                      01373 #undefine sstack0 
                      01374 #undefine sstack1
                      01375 #undefine sstack2 
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01376  
                      01377 hllkrna09 CODE  
0000                  01378 kpop: 
                      01379  KPOP
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
0020   0008           01380  return 
                      01381  
                      01382 hllkrna10 CODE   
0000                  01383 kpush: 
                      01384  KPUSH
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0E
0004   00??               M  movwf softstack1+1 ;softstack1 holds parm value being pushed
0005   0804               M  movfw FSR  
0006   00??               M  movwf softstack0+1  ;softstack0 holds FSR
0007   08??               M  movfw alt_fsr 
0008   0084               M  movwf FSR 
0009   08??               M  movfw softstack1+1
000A   0A??               M  incf alt_fsr,f 
000B   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C   0080               M  movwf INDF 
000D   08??               M  movfw softstack0+1
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1 
0010   2???               M  goto $+0D
0011   00??               M  movwf softstack1 ;softstack1 holds parm value being pushed
0012   0804               M  movfw FSR  
0013   00??               M  movwf softstack0  ;softstack0 holds FSR
0014   08??               M  movfw alt_fsr 
0015   0084               M  movwf FSR 
0016   08??               M  movfw softstack1
0017   0A??               M  incf alt_fsr,f 
0018   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
0019   0080               M  movwf INDF 
001A   08??               M  movfw softstack0
001B   0084               M  movwf FSR 
001C   01??               M  clrf softstack0
001D   ????               M  bankisel stack
001E   0008           01385  return
                      01386 
                      01387 hllkrna11 CODE   
0000                  01388 dispose:
                      01389  DISCARD
0000   0384               M  decf FSR,f 
0001   0008           01390  return 
                      01391  
                      01392  
                      01393 
                      01394 
                      01395 
                      01396 
                      01397 
                      01398 
                      01399 
                      01400 
                      01401 hllkrn444 CODE    
0000                  01402 safepush: 
                      01403  PUSH
0000   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0001   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01404  
                      01405  
                      01406  
0002   0804           01407  movf HLFSR,w
0003   3C??           01408  sublw stack  
0004   1903           01409  btfsc STATUS,Z
0005   2???           01410  goto kspox5 
0006   1803           01411  btfsc STATUS,C 
0007   2???           01412  goto sperr11 
0008                  01413 kspox5:
                      01414   
                      01415 
0008   0804           01416  movf HLFSR,w
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   3E01           01417  addlw .1
000A   3C??           01418  sublw (stack+HLOE_STACK_SIZE)  
000B   1C03           01419  btfss STATUS,C
000C   2???           01420  goto sperr11
000D   0800           01421  movf HLINDF,w
000E   0008           01422  return
000F                  01423 sperr11:
000F   138B           01424  BCF INTCON,GIE 
                      01425  DISCARD 
0010   0384               M  decf FSR,f 
0011                  01426 dmm445:
0011   3021           01427  movlw '!' 
                      01428  PUSH
0012   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0013   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01429  
                      01430  FAR_CALL safepush,printch
                          M  pagesel printch
0014   2???               M  call printch
                          M  pagesel safepush  ;This one restores the caller's code page
0015   2???           01431  goto dmm445
                      01432  
                      01433  
                      01434 
                      01435 
                      01436 
                      01437 
                      01438 
                      01439  
                      01440  
                      01441 
                      01442  
                      01443 hlog1b CODE
                      01444 
                      01445 
                      01446 #define margp2 hllblss00
                      01447 
                      01448 
0000                  01449 setbit:  
                      01450 #ifdef HLLMULTITASK
                      01451 #ifdef HLLGUARDhllblss 
0000   08??           01452  movf in_isr,f  
0001   1903           01453  btfsc STATUS,Z
                      01454  
                      01455 
                      01456 
0002   2???           01457  goto setbit0
                      01458 
                      01459  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   ???? ????      01460  banksel margp2
0007   00??           01461  movwf  margp2
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01462  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   3A00           01463  xorlw .0
000B   1D03           01464  btfss STATUS,Z
000C   2???           01465  goto tcf00h
                      01466  
000D   08??           01467  movfw  margp2
000E   3801           01468  iorlw .1
000F   2???           01469  goto tcf99h
0010                  01470 tcf00h: 
                      01471  
0010   3A01           01472  xorlw .1
0011   1D03           01473  btfss STATUS,Z
0012   2???           01474  goto tcf01h
                      01475  
0013   08??           01476  movfw  margp2
0014   3802           01477  iorlw .2
0015   2???           01478  goto tcf99h
0016                  01479 tcf01h: 
0016   3A01           01480  xorlw .1
0017   3A02           01481  xorlw .2
0018   1D03           01482  btfss STATUS,Z
0019   2???           01483  goto tcf02h
                      01484  
001A   08??           01485  movfw margp2
001B   3804           01486  iorlw .4
001C   2???           01487  goto tcf99h
001D                  01488 tcf02h: 
001D   3A02           01489  xorlw .2
001E   3A03           01490  xorlw .3
001F   1D03           01491  btfss STATUS,Z
0020   2???           01492  goto tcf03h
                      01493  
0021   08??           01494  movfw margp2
0022   3808           01495  iorlw .8
0023   2???           01496  goto tcf99h
0024                  01497 tcf03h: 
0024   3A03           01498  xorlw .3
0025   3A04           01499  xorlw .4
0026   1D03           01500  btfss STATUS,Z
0027   2???           01501  goto tcf04h
                      01502  
0028   08??           01503  movfw margp2
0029   3810           01504  iorlw .16
002A   2???           01505  goto tcf99h
002B                  01506 tcf04h: 
002B   3A04           01507  xorlw .4
002C   3A05           01508  xorlw .5
002D   1D03           01509  btfss STATUS,Z
002E   2???           01510  goto tcf05h
                      01511  
002F   08??           01512  movfw margp2
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030   3820           01513  iorlw .32
0031   2???           01514  goto tcf99h
0032                  01515 tcf05h: 
0032   3A05           01516  xorlw .5
0033   3A06           01517  xorlw .6
0034   1D03           01518  btfss STATUS,Z
0035   2???           01519  goto tcf07h
                      01520  
0036   08??           01521  movfw margp2
0037   3840           01522  iorlw .64
0038   2???           01523  goto tcf99h
0039                  01524 tcf07h: 
                      01525  
0039   08??           01526  movfw margp2
003A   3880           01527  iorlw .128 
003B                  01528 tcf99h:  
                      01529  PUSH 
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003D   0008           01530  return
                      01531 
                      01532 
                      01533 
                      01534 
                      01535 #undefine margp2
                      01536 
                      01537 
                      01538 #define margp2 hllblss00+1
                      01539 
                      01540 
003E                  01541 setbit0:
                      01542 #endif
                      01543 #endif
                      01544 
                      01545  POP
003E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003F   0384               M  decf FSR,f 
0040   ???? ????      01546  banksel margp2
0042   00??           01547  movwf  margp2
                      01548  POP
0043   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0044   0384               M  decf FSR,f 
0045   3A00           01549  xorlw .0
0046   1D03           01550  btfss STATUS,Z
0047   2???           01551  goto hllIAAAA
                      01552  
0048   08??           01553  movfw  margp2
0049   3801           01554  iorlw .1
004A   2???           01555  goto hllPAAAA
004B                  01556 hllIAAAA: 
                      01557  
004B   3A01           01558  xorlw .1
004C   1D03           01559  btfss STATUS,Z
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004D   2???           01560  goto hllJAAAA
                      01561  
004E   08??           01562  movfw  margp2
004F   3802           01563  iorlw .2
0050   2???           01564  goto hllPAAAA
0051                  01565 hllJAAAA: 
0051   3A01           01566  xorlw .1
0052   3A02           01567  xorlw .2
0053   1D03           01568  btfss STATUS,Z
0054   2???           01569  goto hllKAAAA
                      01570  
0055   08??           01571  movfw margp2
0056   3804           01572  iorlw .4
0057   2???           01573  goto hllPAAAA
0058                  01574 hllKAAAA: 
0058   3A02           01575  xorlw .2
0059   3A03           01576  xorlw .3
005A   1D03           01577  btfss STATUS,Z
005B   2???           01578  goto hllLAAAA
                      01579  
005C   08??           01580  movfw margp2
005D   3808           01581  iorlw .8
005E   2???           01582  goto hllPAAAA
005F                  01583 hllLAAAA: 
005F   3A03           01584  xorlw .3
0060   3A04           01585  xorlw .4
0061   1D03           01586  btfss STATUS,Z
0062   2???           01587  goto hllMAAAA
                      01588  
0063   08??           01589  movfw margp2
0064   3810           01590  iorlw .16
0065   2???           01591  goto hllPAAAA
0066                  01592 hllMAAAA: 
0066   3A04           01593  xorlw .4
0067   3A05           01594  xorlw .5
0068   1D03           01595  btfss STATUS,Z
0069   2???           01596  goto hllNAAAA
                      01597  
006A   08??           01598  movfw margp2
006B   3820           01599  iorlw .32
006C   2???           01600  goto hllPAAAA
006D                  01601 hllNAAAA: 
006D   3A05           01602  xorlw .5
006E   3A06           01603  xorlw .6
006F   1D03           01604  btfss STATUS,Z
0070   2???           01605  goto hllOAAAA
                      01606  
0071   08??           01607  movfw margp2
0072   3840           01608  iorlw .64
0073   2???           01609  goto hllPAAAA
0074                  01610 hllOAAAA: 
                      01611  
0074   08??           01612  movfw margp2
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0075   3880           01613  iorlw .128 
0076                  01614 hllPAAAA:  
                      01615  PUSH 
0076   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0077   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0078   0008           01616  return
                      01617 
                      01618 
                      01619 
                      01620 
                      01621 #undefine margp2
                      01622 
30C6                  01623  end
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALT_Save                          0000000A
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
COPY                              
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DISCARD                           
D_A                               00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ExitISR                           00000022
F                                 00000001
FAR_CALL                          
FERR                              00000002
FSR                               00000004
FSR_Save                          00000009
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HALF_FAR_CALL                     
HLFSR                             FSR
HLINDF                            INDF
HLLGUARDhllblss                   
HLLMULTITASK                      
HLOE_STACK2_SIZE                  .20
HLOE_STACK_SIZE                   .80
HLTABLE                           
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ISR                               00000004
KDISCARD                          
KPOP                              
KPUSH                             
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PC_Save                           00000002
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
POP                               
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PREEMPT                           
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PULSR                             00000002
PULSS                             00000003
PUSH                              
R                                 00000002
RABIE                             00000003
RABIF                             00000000
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RESUME                            
RP0                               00000005
RP1                               00000006
RX9                               00000006
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_Save                       00000008
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TRISA                             00000085
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

WPUA1                             00000001
WPUA2                             00000002
WPUA4                             00000004
WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_Save                            00000007
Z                                 00000002
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F687                          00000001
_hllkrna00_000C                   0000000C
_hllkrna00_0018                   00000018
_hllkrna03_0005                   00000005
_hllkrna03_000C                   0000000C
_hllkrna04_000F                   0000000F
_hllkrna04_0011                   00000011
_hllkrna04_0022                   00000022
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

_hllkrna04_0024                   00000024
_hllkrna05_000F                   0000000F
_hllkrna05_0011                   00000011
_hllkrna05_0022                   00000022
_hllkrna05_0024                   00000024
_hllkrna08_0003                   00000003
_hllkrna08_0011                   00000011
_hllkrna09_0003                   00000003
_hllkrna09_0011                   00000011
_hllkrna10_0003                   00000003
_hllkrna10_0010                   00000010
abcs                              00000000
add                               00000000
alt_fsr                           00000006
alt_stack                         00000000
build                             00000000
clearbit                          00000000
clearbit0                         0000003E
dispose                           00000000
divu                              00000000
divu0                             00000016
dmm445                            00000011
eq                                00000000
getch                             00000000
geth2                             00000002
hllAAAAA                          0000004B
hllBAAAA                          00000051
hllCAAAA                          00000058
hllDAAAA                          0000005F
hllEAAAA                          00000066
hllFAAAA                          0000006D
hllGAAAA                          00000074
hllHAAAA                          00000076
hllIAAAA                          0000004B
hllJAAAA                          00000051
hllKAAAA                          00000058
hllLAAAA                          0000005F
hllMAAAA                          00000066
hllNAAAA                          0000006D
hllOAAAA                          00000074
hllPAAAA                          00000076
hllblss00                         00000000
hllblss00isr                      00000001
hllblss01                         00000002
hllblss01isr                      00000003
hllblss02                         00000004
hllblss02isr                      00000005
hlllb51J1                         0000000E
hlllb51J2                         00000016
hlllb51J4                         0000000F
hlllb51J5                         00000011
hllnotisr49                       00000022
hllparmcore                       
MPASM  5.37                        TARGET.ASM   6-6-2012  19:11:21         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

hllprgen2                         00000013
hllprogend                        000000E6
hlluserprog                       00000000
hloego                            00000000
in_isr                            0000000B
kpop                              00000000
kpush                             00000000
kspox5                            00000008
modu                              00000000
modu0                             00000016
mul                               00000000
mul0                              0000000F
negti                             00000000
parm                              00000000
parm4                             00000032
pbase                             00000000
pbaseisr                          00000001
printch                           00000000
pstr                              00000000
safepush                          00000000
setbit                            00000000
setbit0                           0000003E
softstack0                        00000000
softstack0isr                     00000001
softstack1                        00000002
softstack1isr                     00000003
softstack2                        00000004
softstack2isr                     00000005
sperr11                           0000000F
stack                             00000000
tcf00h                            00000010
tcf01h                            00000016
tcf02h                            0000001D
tcf03h                            00000024
tcf04h                            0000002B
tcf05h                            00000032
tcf07h                            00000039
tcf99h                            0000003B
tff00h                            00000010
tff01h                            00000016
tff02h                            0000001D
tff03h                            00000024
tff04h                            0000002B
tff05h                            00000032
tff07h                            00000039
tff99h                            0000003B

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,   166 suppressed

