/
/ TODO
/  Doc KSTACK better
/  Add copytop to official docs / git
/  What are fastmodu etc.?
/  lh parms - wtf is it?
/  decparm - doc
/  doc new board w/ rs232 max support
/  make sure all projects still build esp. pwm robot on 16f690

calls andb,geu,utof,addf,printf,printu,mulf,divf,iszerof,notb,iszerof,writeeeprom,readeeprom,debugptru,ftou,add,printch,copyf,copytop,decparm,dispose,eq
/////////////////////////////////WORKS////
altstack is 80

event 1 is
/.printdf[10 1234567.89]
.printdf[10 3.141592654]
.printdf[10 180000.0]
;

insert clock
frost115200baud
insert slowtimer
insert starttimer

var prettym, prettye
d .printdf 3 0 is
.printch[' '] .printch[' '] .printch[' '] .printch[' ']

/////////////////// WORKS 5 ////////////////////////////
/Tracks what place in our decimal number we are building
1000000.0 > prettye > prettym

.divf[parmf(0) @prettym @prettye]
.copyf[]
.printch[.add[.ftou[] '0']]
.addf[parmf(0) .mulf[.utof[.ftou[.parm[-1] .parm[-2]]] .mulf[-1.0 @prettym @prettye]]]  /Remainder after 1000000s digit
.prettyloop[]


;

macro counter is .parm[6] end macro

d .prettyloop * is
/.debugptru[]  / EACH PRETTYLOOP CALL IS "LEAKING" A STACK POSITION AND ULTIMATELY IT IS CRASHING A (CLOSE TO CORRECT) PROGRAM
/.decparm[6]
/.printch['?']
/.printch['?']
/.printch['?']
/.printu[.parm[6]]
/.printch['$']
/.printch['$']
/.printch['$']
printdigretrest
if .notb[.parm[6]],, .decparm[6]
.prettyloop[]
,
;

macro printdigretrest is
.divf[@prettym @prettye 10.0] > prettye > prettym /0
if .eq[.parm[6] 4],.printch['.'],,

/.copyf[] /+2
.divf[.copyf[] @prettym @prettye] /+2

if .iszerof[.copyf[]],
.printch['0']  /+2 net
.dispose[] .dispose[]
,
/Non-zero next digit
.ftou[]            /-1
.copytop[]         /+1
.add['0']          /-1
.printch[]         /-1 ... +2 net


.utof[]          /+1
/.debugptru[]
.mulf[.mulf[-1.0 @prettym @prettye]]  / 0
/.debugptru[]
.addf[]     /-2

,

/stabilizes but not right
/.dispose[]
/.dispose[]
end macro
