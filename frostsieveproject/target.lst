MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 #include "hloe.inc"
                      00001 
                      00002 
                      00003 #define HLLGUARDhllblss
                      00004 
                      00005 
                      00006 #define HLOE_STACK_SIZE .80
                      00007 #define HLOE_STACK2_SIZE .20
                      00008 
                      00009 
                      00010 #include <p16F690.inc>
                      00001         LIST
                      00002 ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00607         LIST
                      00011 #include "../frostcompiler/kernel.inc"
                      00001 PUSH macro ;Push to the main stack for the programmer's parms and dyn. data;
                      00002  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
                      00003  movwf INDF ; code of any sort will not overwrite the data. 
                      00004  endm 
                      00005  
                      00006 POP macro ;Pop from main stack; "decf" is the de-allocator and thus happens last to 
                      00007  movfw INDF ; preserve the safety of this code under interruptible conditions. 
                      00008  decf FSR,f 
                      00009  endm
                      00010  
                      00011 DISCARD macro ;Remove items from the main stack and throw them away w/o affecting W
                      00012  decf FSR,f 
                      00013  endm
                      00014  
                      00015 KDISCARD macro ;Remove items from stack 2 and throw them away w/o affecting W
                      00016  decf alt_fsr,f 
                      00017  endm
                      00018 
                      00019 COPY macro ;Duplicate stack top
                      00020  movfw INDF
                      00021  incf FSR,f 
                      00022  movwf INDF 
                      00023  endm
                      00024 
                      00025 #define HLFSR FSR
                      00026  
                      00027 #define HLINDF INDF
                      00028 
                      00029   
                      00030 FAR_CALL macro caller_os,func_os ;Call destination residing within a different code page
                      00031  pagesel func_os
                      00032  call func_os
                      00033  pagesel caller_os ;This one restores the caller's code page
                      00034  endm
                      00035 
                      00036 ;Call destination residing within a different code page... does not restore the caller's
                      00037 ; code page after return, which may be OK (e.g. if the next operation is another 'Far'
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 ; function call). 
                      00039 HALF_FAR_CALL macro func_os 
                      00040  pagesel func_os        
                      00041  call func_os
                      00042  endm
                      00043  
                      00044 KPOP macro
                      00045  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00046  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00047  btfsc STATUS,Z
                      00048  goto $+0F
                      00049  movfw FSR 
                      00050  movwf softstack0+1 ;Save user stack ptr 
                      00051  movfw alt_fsr ;Get second stack ptr 
                      00052  movwf FSR 
                      00053  movfw INDF ;Dereference it 
                      00054  decf FSR,f ;Decrement it 
                      00055  movwf softstack1+1  ;Save popped value for ret urn 
                      00056  movfw FSR ;Save second stack ptr 
                      00057  movwf alt_fsr 
                      00058  movfw softstack0+1  ;Restore user stack ptr 
                      00059  movwf FSR 
                      00060  clrf softstack0+1
                      00061  movfw softstack1+1  ;Bring back popped value for ret urn 
                      00062  goto $+0E
                      00063  movfw FSR 
                      00064  movwf softstack0 ;Save user stack ptr 
                      00065  movfw alt_fsr ;Get second stack ptr 
                      00066  movwf FSR 
                      00067  movfw INDF ;Dereference it 
                      00068  decf FSR,f ;Decrement it 
                      00069  movwf softstack1  ;Save popped value for ret urn 
                      00070  movfw FSR ;Save second stack ptr 
                      00071  movwf alt_fsr 
                      00072  movfw softstack0  ;Restore user stack ptr 
                      00073  movwf FSR 
                      00074  clrf softstack0
                      00075  movfw softstack1  ;Bring back popped value for ret urn 
                      00076  bankisel stack
                      00077  endm 
                      00078 
                      00079 KPUSH macro
                      00080  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00081  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00082  btfsc STATUS,Z
                      00083  goto $+0E
                      00084  movwf softstack1+1 ;softstack1 holds parm value being pushed
                      00085  movfw FSR  
                      00086  movwf softstack0+1  ;softstack0 holds FSR
                      00087  movfw alt_fsr 
                      00088  movwf FSR 
                      00089  movfw softstack1+1
                      00090  incf alt_fsr,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00092  movwf INDF 
                      00093  movfw softstack0+1
                      00094  movwf FSR 
                      00095  clrf softstack0+1 
                      00096  goto $+0D
                      00097  movwf softstack1 ;softstack1 holds parm value being pushed
                      00098  movfw FSR  
                      00099  movwf softstack0  ;softstack0 holds FSR
                      00100  movfw alt_fsr 
                      00101  movwf FSR 
                      00102  movfw softstack1
                      00103  incf alt_fsr,f 
                      00104  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00105  movwf INDF 
                      00106  movfw softstack0
                      00107  movwf FSR 
                      00108  clrf softstack0
                      00109  bankisel stack
                      00110  endm
                      00111  
                      00112 ;These are simple shifts, similar to << or >> in C, not rotates. Newer PICs include
                      00113 ; a native shift instruction that shifts in zeroes like << and >>. Older devices 
                      00114 ; can only rotate bits through the C register, requiring an extra instruction to
                      00115 ; clear C in cases where a simple shift is needed.
                      00116 LSHIFT macro file_reg
                      00117  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
                      00118  rlf file_reg,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      00119  endm 
                      00120 
                      00121 RSHIFT macro file_reg
                      00122  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
                      00123  rrf file_reg,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      00124  endm 
                      00125  
                      00126 PREEMPT macro
                      00127 #ifdef HLLMULTITASK 
                      00128  movwf W_Save ; save context- save W in "W_save" file reg.
                      00129  ;From datasheet... save STATUS properly
                      00130  swapf STATUS,W 
                      00131  movwf STATUS_Save 
                      00132  movf FSR,w 
                      00133  movwf FSR_Save 
                      00134  movf PCLATH,w ; save status in "STATUS_Save" file reg.
                      00135  movwf PC_Save 
                      00136  movf alt_fsr,w 
                      00137  movwf ALT_Save
                      00138  incf in_isr,f
                      00139  pagesel ISR
                      00140  bankisel stack 
                      00141  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00142  movf softstack0,f        ; (coded to preserve constant interrupt latency)
                      00143  btfss STATUS,Z       
                      00144  movf softstack0,w  
                      00145  movwf FSR          
                      00146 #endif 
                      00147  endm
                      00148  
                      00149 RESUME macro
                      00150  
                      00151 #ifdef HLLMULTITASK 
                      00152  clrf in_isr
                      00153  movf ALT_Save,w
                      00154  movwf alt_fsr 
                      00155  movf PC_Save,w ; restore context (W and STATUS)
                      00156  movwf PCLATH
                      00157  movf FSR_Save,w 
                      00158  movwf FSR
                      00159  ;Per the datasheet...
                      00160  swapf STATUS_Save,W
                      00161  movwf STATUS ;Move W into Status reg
                      00162  swapf W_Save,F ;Swap W_TEMP
                      00163  swapf W_Save,W ;Swap W_TEMP into W
                      00164 #endif
                      00165 
                      00166  endm
                      00167  
                      00168 ; Table macro.. this followed by any series of RETLW calls
                      00169 ; transforms said call list into a function that takes an offset
                      00170 ; and returns that entry in the table (takes 1 byte, returns 1
                      00171 ; byte... this goes atop the HLL feature which allows generation 
                      00172 ; of tables. It can also go atop RETLW tables entered into assembly 
                      00173 ; files in a very basic fashion when doing assembly programming. In 
                      00174 ; either case, the overall result can be called exactly as if it were any 
                      00175 ; other HLOE function
                      00176 HLTABLE macro mmnme
                      00177 mmnme:
                      00178  movlw high mmnme#v(2) ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00179  movwf PCLATH ; and PAGESEL doesn't take care of all 5
                      00180  movlw low mmnme#v(2) ; Perform pointer arithmetic
                      00181  addwf INDF,w 
                      00182  decf FSR,f
                      00183  btfsc STATUS,C ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00184  incf PCLATH,f 
                      00185  movwf PCL 
                      00186 mmnme#v(2): 
                      00187  ;retlw K, retlw K, etc. go here
                      00188  endm
                      00189  
                      00003 
2007   33C4           00004  __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOR_ON & _IESO_OFF & _FC
                            MEN_OFF)
                      00005 
                      00006 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00007 
                      00008 
                      00009 Resetv code 0 
0000   138B           00010  bcf INTCON,GIE
0001   ????           00011  pagesel hloego
0002   2???           00012  goto hloego
                      00013  
                      00014 #ifdef HLLMULTITASK
                      00015 vectr code 4     ;Device specific
                      00016 ISR:
                      00017 
                      00018 
                      00019  PREEMPT
                      00020 #endif
                      00021 #ifdef HLLMULTITASK
                      00022 ExitISR:    
                      00023 
                      00024   RESUME
                      00025   
                      00026   
                      00027   retfie
                      00028 #endif
                      00029 
                      00030 mainvars udata_shr      
                      00031 #ifdef HLLMULTITASK
                      00032 pbase res .1                    ; Used for functions w/ numbered pass/return, to clean up parms/push arg
                            s
                      00033 pbaseisr res .1 
                      00034 #else
0000                  00035 pbase res .1
                      00036 #endif
                      00037 
0001                  00038 PC_Save res .1
                      00039 
                      00040 main code
0000                  00041 hloego:
                      00042 
                      00043  
0000   01??           00044   clrf in_isr
                      00045  
0001   30??           00046   movlw stack-1         ;Set up stack starting position based on literals det. by incremental linker
0002   0084           00047   movwf FSR 
0003   30??           00048   movlw alt_stack-1
0004   00??           00049   movwf alt_fsr 
                      00050   
                      00051   
0005   01??           00052   clrf softstack0
                      00053  
0006   ????           00054  bankisel stack
0007   ????           00055  pagesel hlluserprog
0008   2???           00056  goto hlluserprog
                      00057 hllupuser CODE
0000                  00058 hlluserprog: 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00059  
                      00060 
0000   3070           00061  movlw .112 
                      00062 
                      00063    
                      00064  FAR_CALL hlluserprog ,safepush
0001   ????               M  pagesel safepush
0002   2???               M  call safepush
0003   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00065 
0004   1683 1303      00066    banksel OSCCON
0006   080F           00067    movfw OSCCON
                      00068    
                      00069    
                      00070 
                      00071    
                      00072  HALF_FAR_CALL safepush
0007   ????               M  pagesel safepush       
0008   2???               M  call safepush
                      00073 
                      00074 
                      00075  
                      00076  FAR_CALL hlluserprog,oru
0009   ????               M  pagesel oru
000A   2???               M  call oru
000B   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00077 
                      00078  POP
000C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000D   0384               M  decf FSR,f 
000E   1683 1303      00079  banksel OSCCON
0010   008F           00080  movwf OSCCON
                      00081  
                      00082 
                      00083 
0011   3011           00084  movlw .17 
                      00085 
                      00086    
                      00087  FAR_CALL hlluserprog ,safepush
0012   ????               M  pagesel safepush
0013   2???               M  call safepush
0014   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00088 
                      00089  POP
0015   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0016   0384               M  decf FSR,f 
0017   1683 1303      00090  banksel SPBRG
0019   0099           00091  movwf SPBRG
                      00092  
                      00093 
                      00094 
001A   3000           00095  movlw .0 
                      00096 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097    
                      00098  FAR_CALL hlluserprog ,safepush
001B   ????               M  pagesel safepush
001C   2???               M  call safepush
001D   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00099 
                      00100  POP
001E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001F   0384               M  decf FSR,f 
0020   1683 1303      00101  banksel SPBRGH
0022   009A           00102  movwf SPBRGH
                      00103  
                      00104 
                      00105 
0023   3004           00106  movlw SYNC
                      00107 
                      00108 
                      00109    
                      00110  FAR_CALL hlluserprog ,safepush
0024   ????               M  pagesel safepush
0025   2???               M  call safepush
0026   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00111 
0027   1683 1303      00112    banksel TXSTA
0029   0818           00113    movfw TXSTA
                      00114    
                      00115    
                      00116 
                      00117    
                      00118  HALF_FAR_CALL safepush
002A   ????               M  pagesel safepush       
002B   2???               M  call safepush
                      00119 
                      00120 
                      00121  
                      00122  FAR_CALL hlluserprog,clearbit
002C   ????               M  pagesel clearbit
002D   2???               M  call clearbit
002E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00123 
                      00124  POP
002F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0030   0384               M  decf FSR,f 
0031   1683 1303      00125  banksel TXSTA
0033   0098           00126  movwf TXSTA
                      00127  
                      00128 
                      00129 
0034   3004           00130  movlw CREN
                      00131 
                      00132 
                      00133    
                      00134  FAR_CALL hlluserprog ,safepush
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0035   ????               M  pagesel safepush
0036   2???               M  call safepush
0037   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00135 
0038   1283 1303      00136    banksel RCSTA
003A   0818           00137    movfw RCSTA
                      00138    
                      00139    
                      00140 
                      00141    
                      00142  HALF_FAR_CALL safepush
003B   ????               M  pagesel safepush       
003C   2???               M  call safepush
                      00143 
                      00144 
                      00145  
                      00146  FAR_CALL hlluserprog,clearbit
003D   ????               M  pagesel clearbit
003E   2???               M  call clearbit
003F   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00147 
                      00148  POP
0040   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0041   0384               M  decf FSR,f 
0042   1283 1303      00149  banksel RCSTA
0044   0098           00150  movwf RCSTA
                      00151  
                      00152 
                      00153 
0045   3004           00154  movlw CREN
                      00155 
                      00156 
                      00157    
                      00158  FAR_CALL hlluserprog ,safepush
0046   ????               M  pagesel safepush
0047   2???               M  call safepush
0048   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00159 
0049   1283 1303      00160    banksel RCSTA
004B   0818           00161    movfw RCSTA
                      00162    
                      00163    
                      00164 
                      00165    
                      00166  HALF_FAR_CALL safepush
004C   ????               M  pagesel safepush       
004D   2???               M  call safepush
                      00167 
                      00168 
                      00169  
                      00170  FAR_CALL hlluserprog,setbit
004E   ????               M  pagesel setbit
004F   2???               M  call setbit
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0050   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00171 
                      00172  POP
0051   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0052   0384               M  decf FSR,f 
0053   1283 1303      00173  banksel RCSTA
0055   0098           00174  movwf RCSTA
                      00175  
                      00176 
                      00177 
0056   3007           00178  movlw SPEN
                      00179 
                      00180 
                      00181    
                      00182  FAR_CALL hlluserprog ,safepush
0057   ????               M  pagesel safepush
0058   2???               M  call safepush
0059   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00183 
005A   1283 1303      00184    banksel RCSTA
005C   0818           00185    movfw RCSTA
                      00186    
                      00187    
                      00188 
                      00189    
                      00190  HALF_FAR_CALL safepush
005D   ????               M  pagesel safepush       
005E   2???               M  call safepush
                      00191 
                      00192 
                      00193  
                      00194  FAR_CALL hlluserprog,setbit
005F   ????               M  pagesel setbit
0060   2???               M  call setbit
0061   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00195 
                      00196  POP
0062   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0063   0384               M  decf FSR,f 
0064   1283 1303      00197  banksel RCSTA
0066   0098           00198  movwf RCSTA
                      00199  
                      00200 
                      00201 
0067   3005           00202  movlw TXEN
                      00203 
                      00204 
                      00205    
                      00206  FAR_CALL hlluserprog ,safepush
0068   ????               M  pagesel safepush
0069   2???               M  call safepush
006A   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00207 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00208 
006B   3006           00209  movlw TX9
                      00210 
                      00211 
                      00212    
                      00213  FAR_CALL hlluserprog ,safepush
006C   ????               M  pagesel safepush
006D   2???               M  call safepush
006E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00214 
                      00215 
006F   3002           00216  movlw BRGH
                      00217 
                      00218 
                      00219    
                      00220  FAR_CALL hlluserprog ,safepush
0070   ????               M  pagesel safepush
0071   2???               M  call safepush
0072   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00221 
0073   1683 1303      00222    banksel TXSTA
0075   0818           00223    movfw TXSTA
                      00224    
                      00225    
                      00226 
                      00227    
                      00228  HALF_FAR_CALL safepush
0076   ????               M  pagesel safepush       
0077   2???               M  call safepush
                      00229 
                      00230 
                      00231  
                      00232  HALF_FAR_CALL setbit
0078   ????               M  pagesel setbit         
0079   2???               M  call setbit
                      00233 
                      00234 
                      00235  
                      00236  HALF_FAR_CALL clearbit
007A   ????               M  pagesel clearbit       
007B   2???               M  call clearbit
                      00237 
                      00238 
                      00239  
                      00240  FAR_CALL hlluserprog,setbit
007C   ????               M  pagesel setbit
007D   2???               M  call setbit
007E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00241 
                      00242  POP
007F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0080   0384               M  decf FSR,f 
0081   1683 1303      00243  banksel TXSTA
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0083   0098           00244  movwf TXSTA
                      00245  
                      00246 
                      00247 
0084   3003           00248  movlw BRG16
                      00249 
                      00250 
                      00251    
                      00252  FAR_CALL hlluserprog ,safepush
0085   ????               M  pagesel safepush
0086   2???               M  call safepush
0087   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00253 
                      00254 
0088   3004           00255  movlw SCKP
                      00256 
                      00257 
                      00258    
                      00259  FAR_CALL hlluserprog ,safepush
0089   ????               M  pagesel safepush
008A   2???               M  call safepush
008B   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00260 
008C   1683 1303      00261    banksel BAUDCTL
008E   081B           00262    movfw BAUDCTL
                      00263    
                      00264    
                      00265 
                      00266    
                      00267  HALF_FAR_CALL safepush
008F   ????               M  pagesel safepush       
0090   2???               M  call safepush
                      00268 
                      00269 
                      00270  
                      00271  HALF_FAR_CALL setbit
0091   ????               M  pagesel setbit         
0092   2???               M  call setbit
                      00272 
                      00273 
                      00274  
                      00275  FAR_CALL hlluserprog,setbit
0093   ????               M  pagesel setbit
0094   2???               M  call setbit
0095   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00276 
                      00277  POP
0096   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0097   0384               M  decf FSR,f 
0098   1683 1303      00278  banksel BAUDCTL
009A   009B           00279  movwf BAUDCTL
                      00280  
                      00281 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00282 
009B   3000           00283  movlw .0 
                      00284 
                      00285    
                      00286  FAR_CALL hlluserprog ,safepush
009C   ????               M  pagesel safepush
009D   2???               M  call safepush
009E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00287 
                      00288  POP
009F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A0   0384               M  decf FSR,f 
00A1   1283 1703      00289  banksel ANSELH
00A3   009F           00290  movwf ANSELH
                      00291  
                      00292 
                      00293 
00A4   3000           00294  movlw .0 
                      00295 
                      00296    
                      00297  FAR_CALL hlluserprog ,safepush
00A5   ????               M  pagesel safepush
00A6   2???               M  call safepush
00A7   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00298 
                      00299  POP
00A8   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A9   0384               M  decf FSR,f 
00AA   1283 1703      00300  banksel ANSEL
00AC   009E           00301  movwf ANSEL
                      00302  
                      00303 
                      00304 
00AD   3005           00305  movlw RCIE
                      00306 
                      00307 
                      00308    
                      00309  FAR_CALL hlluserprog ,safepush
00AE   ????               M  pagesel safepush
00AF   2???               M  call safepush
00B0   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00310 
                      00311 
00B1   3004           00312  movlw TXIE
                      00313 
                      00314 
                      00315    
                      00316  FAR_CALL hlluserprog ,safepush
00B2   ????               M  pagesel safepush
00B3   2???               M  call safepush
00B4   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00317 
00B5   1683 1303      00318    banksel PIE1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B7   080C           00319    movfw PIE1
                      00320    
                      00321    
                      00322 
                      00323    
                      00324  HALF_FAR_CALL safepush
00B8   ????               M  pagesel safepush       
00B9   2???               M  call safepush
                      00325 
                      00326 
                      00327  
                      00328  HALF_FAR_CALL clearbit
00BA   ????               M  pagesel clearbit       
00BB   2???               M  call clearbit
                      00329 
                      00330 
                      00331  
                      00332  FAR_CALL hlluserprog,clearbit
00BC   ????               M  pagesel clearbit
00BD   2???               M  call clearbit
00BE   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00333 
                      00334  POP
00BF   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00C0   0384               M  decf FSR,f 
00C1   1683 1303      00335  banksel PIE1
00C3   008C           00336  movwf PIE1
                      00337  
                      00338 
                      00339 
00C4   300D           00340  movlw .13
                      00341 
                      00342    
                      00343  HALF_FAR_CALL safepush
00C5   ????               M  pagesel safepush       
00C6   2???               M  call safepush
                      00344 
                      00345 
                      00346  
                      00347  FAR_CALL hlluserprog,printch
00C7   ????               M  pagesel printch
00C8   2???               M  call printch
00C9   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00348 
                      00349 
00CA   3002           00350  movlw .2
                      00351 
                      00352    
                      00353  HALF_FAR_CALL safepush
00CB   ????               M  pagesel safepush       
00CC   2???               M  call safepush
                      00354 
                      00355 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00356  
                      00357  FAR_CALL hlluserprog,maing
00CD   ????               M  pagesel maing
00CE   2???               M  call maing
00CF   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00358 
                      00359     
00D0                  00360 hllprogend:
00D0   2???           00361  goto hllprogend
                      00362  
                      00363 
                      00364 hllt454 CODE
0000                  00365 maing:
0000   0804           00366  movf FSR,w
                      00367  
                      00368 
                      00369  
                      00370  FAR_CALL maing ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel maing     ;This one restores the caller's code page
                      00371 
                      00372 
0004   3000           00373  movlw .0
                      00374 
                      00375    
                      00376  HALF_FAR_CALL safepush
0005   ????               M  pagesel safepush       
0006   2???               M  call safepush
                      00377 
                      00378 
                      00379  
                      00380  FAR_CALL maing,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel maing     ;This one restores the caller's code page
                      00381 
                      00382 
000A   30FF           00383  movlw .255
                      00384 
                      00385    
                      00386  HALF_FAR_CALL safepush
000B   ????               M  pagesel safepush       
000C   2???               M  call safepush
                      00387 
                      00388 
                      00389  
                      00390  HALF_FAR_CALL geu
000D   ????               M  pagesel geu            
000E   2???               M  call geu
                      00391 
                      00392 
                      00393  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00394  FAR_CALL maing,notb
000F   ????               M  pagesel notb
0010   2???               M  call notb
0011   ????               M  pagesel maing     ;This one restores the caller's code page
                      00395 
                      00396  POP
0012   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0013   0384               M  decf FSR,f 
0014   3A00           00397  xorlw .0
0015   1903           00398  btfsc STATUS,Z
0016   2???           00399  goto hlllb51J2 
                      00400  
                      00401 
0017   3000           00402  movlw .0
                      00403 
                      00404    
                      00405  HALF_FAR_CALL safepush
0018   ????               M  pagesel safepush       
0019   2???               M  call safepush
                      00406 
                      00407 
                      00408  
                      00409  HALF_FAR_CALL parm
001A   ????               M  pagesel parm           
001B   2???               M  call parm
                      00410 
                      00411 
                      00412  
                      00413  FAR_CALL maing,isprime
001C   ????               M  pagesel isprime
001D   2???               M  call isprime
001E   ????               M  pagesel maing     ;This one restores the caller's code page
                      00414 
                      00415  POP
001F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0020   0384               M  decf FSR,f 
0021   3A00           00416  xorlw .0
0022   1903           00417  btfsc STATUS,Z
0023   2???           00418  goto hlllb51J0 
                      00419  
                      00420 
0024   3000           00421  movlw .0
                      00422 
                      00423    
                      00424  HALF_FAR_CALL safepush
0025   ????               M  pagesel safepush       
0026   2???               M  call safepush
                      00425 
                      00426 
                      00427  
                      00428  HALF_FAR_CALL parm
0027   ????               M  pagesel parm           
0028   2???               M  call parm
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00429 
                      00430 
                      00431  
                      00432  FAR_CALL maing,printu
0029   ????               M  pagesel printu
002A   2???               M  call printu
002B   ????               M  pagesel maing     ;This one restores the caller's code page
                      00433 
                      00434 
002C   300D           00435  movlw .13
                      00436 
                      00437    
                      00438  HALF_FAR_CALL safepush
002D   ????               M  pagesel safepush       
002E   2???               M  call safepush
                      00439 
                      00440 
                      00441  
                      00442  FAR_CALL maing,printch
002F   ????               M  pagesel printch
0030   2???               M  call printch
0031   ????               M  pagesel maing     ;This one restores the caller's code page
                      00443 
                      00444 
0032   300A           00445  movlw .10
                      00446 
                      00447    
                      00448  HALF_FAR_CALL safepush
0033   ????               M  pagesel safepush       
0034   2???               M  call safepush
                      00449 
                      00450 
                      00451  
                      00452  FAR_CALL maing,printch
0035   ????               M  pagesel printch
0036   2???               M  call printch
0037   ????               M  pagesel maing     ;This one restores the caller's code page
                      00453 
                      00454  
0038   2???           00455  goto hlllb51J1
                      00456  
                      00457 
0039                  00458 hlllb51J0:
                      00459 
                      00460 
0039                  00461 hlllb51J1:
                      00462 
                      00463 
0039   3001           00464  movlw .1
                      00465 
                      00466    
                      00467  HALF_FAR_CALL safepush
003A   ????               M  pagesel safepush       
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003B   2???               M  call safepush
                      00468 
                      00469 
                      00470  
                      00471  FAR_CALL maing,add
003C   ????               M  pagesel add
003D   2???               M  call add
003E   ????               M  pagesel maing     ;This one restores the caller's code page
                      00472 
                      00473  ;
                      00474 
                      00475 
                      00476  KDISCARD 
003F   03??               M  decf alt_fsr,f 
0040   2???           00477  goto maing
0041                  00478 hlllb51J2:
0041                  00479 hlllb51J3:
                      00480 
                      00481  KDISCARD 
0041   03??               M  decf alt_fsr,f 
0042   0008           00482  return 
                      00483 
                      00484  
                      00485 
                      00486 hllt455 CODE
0000                  00487 isprime:
0000   0804           00488  movf FSR,w
                      00489  
                      00490 
                      00491  
                      00492  FAR_CALL isprime ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel isprime   ;This one restores the caller's code page
                      00493 
                      00494 
0004   3000           00495  movlw .0
                      00496 
                      00497    
                      00498  HALF_FAR_CALL safepush
0005   ????               M  pagesel safepush       
0006   2???               M  call safepush
                      00499 
                      00500 
                      00501  
                      00502  HALF_FAR_CALL parm
0007   ????               M  pagesel parm           
0008   2???               M  call parm
                      00503 
                      00504 
                      00505  
                      00506  FAR_CALL isprime,sqrt
0009   ????               M  pagesel sqrt
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   2???               M  call sqrt
000B   ????               M  pagesel isprime   ;This one restores the caller's code page
                      00507 
                      00508 
000C   3000           00509  movlw .0
                      00510 
                      00511    
                      00512  HALF_FAR_CALL safepush
000D   ????               M  pagesel safepush       
000E   2???               M  call safepush
                      00513 
                      00514 
                      00515  
                      00516  FAR_CALL isprime,parm
000F   ????               M  pagesel parm
0010   2???               M  call parm
0011   ????               M  pagesel isprime   ;This one restores the caller's code page
                      00517 
                      00518 
0012   3002           00519  movlw .2  
                      00520  
                      00521 
                      00522    
                      00523  HALF_FAR_CALL safepush
0013   ????               M  pagesel safepush       
0014   2???               M  call safepush
                      00524 
                      00525 
                      00526  
                      00527  HALF_FAR_CALL isprimeinner
0015   ????               M  pagesel isprimeinner   
0016   2???               M  call isprimeinner
                      00528 
                      00529 
                      00530  
                      00531  FAR_CALL isprime,kpop
0017   ????               M  pagesel kpop
0018   2???               M  call kpop
0019   ????               M  pagesel isprime   ;This one restores the caller's code page
                      00532  
                      00533 #ifdef HLLMULTITASK 
                      00534  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00535  btfsc STATUS,Z
                      00536  goto $+3
                      00537  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
                      00538  goto $+2      ; is because isr execution is preemptive, and returns only at the 
                      00539  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      00540 #else          ; thread, and speeding up isr execution helps this problem. In most of
001A   00??           00541  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      00542 #endif 
                      00543 
                      00544 
                      00545  POP
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001C   0384               M  decf FSR,f 
                      00546  
                      00547  FAR_CALL isprime ,kpush
001D   ????               M  pagesel kpush
001E   2???               M  call kpush
001F   ????               M  pagesel isprime   ;This one restores the caller's code page
                      00548  
                      00549 #ifdef HLLMULTITASK 
                      00550  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00551  btfsc STATUS,Z
                      00552  goto $+3
                      00553  movf pbase+1,w                 ;in_isr
                      00554  goto $+2
                      00555  movf pbase,w   ;not in_isr
                      00556 #else
0020   08??           00557  movf pbase,w   
                      00558 #endif  
                      00559 
                      00560  
                      00561 ;LOAD POINTER
0021   0084           00562  movwf FSR
                      00563  
                      00564 
                      00565  DISCARD
0022   0384               M  decf FSR,f 
                      00566 
                      00567 
                      00568  
                      00569  HALF_FAR_CALL kpop
0023   ????               M  pagesel kpop           
0024   2???               M  call kpop
                      00570 
                      00571 
                      00572  
                      00573  FAR_CALL isprime ,safepush
0025   ????               M  pagesel safepush
0026   2???               M  call safepush
0027   ????               M  pagesel isprime   ;This one restores the caller's code page
                      00574  
                      00575 
0028   0008           00576  return
                      00577  
                      00578 
                      00579 hllt4510 CODE
0000                  00580 isprimeinner:
0000   0804           00581  movf FSR,w
                      00582  
                      00583 
                      00584  
                      00585  FAR_CALL isprimeinner ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00586 
                      00587 
0004   3000           00588  movlw .0
                      00589 
                      00590    
                      00591  HALF_FAR_CALL safepush
0005   ????               M  pagesel safepush       
0006   2???               M  call safepush
                      00592 
                      00593 
                      00594  
                      00595  FAR_CALL isprimeinner,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00596 
                      00597 
000A   3001           00598  movlw .1 
                      00599 
                      00600    
                      00601  FAR_CALL isprimeinner ,safepush
000B   ????               M  pagesel safepush
000C   2???               M  call safepush
000D   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00602 
                      00603 
000E   3002           00604  movlw .2
                      00605 
                      00606    
                      00607  HALF_FAR_CALL safepush
000F   ????               M  pagesel safepush       
0010   2???               M  call safepush
                      00608 
                      00609 
                      00610  
                      00611  HALF_FAR_CALL parm
0011   ????               M  pagesel parm           
0012   2???               M  call parm
                      00612 
                      00613 
                      00614  
                      00615  HALF_FAR_CALL add
0013   ????               M  pagesel add            
0014   2???               M  call add
                      00616 
                      00617 
                      00618  
                      00619  FAR_CALL isprimeinner,eq
0015   ????               M  pagesel eq
0016   2???               M  call eq
0017   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00620 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00621  POP
0018   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0019   0384               M  decf FSR,f 
001A   3A00           00622  xorlw .0
001B   1903           00623  btfsc STATUS,Z
001C   2???           00624  goto hlllb51J8 
                      00625  
                      00626 
001D   3001           00627  movlw .1
                      00628 
                      00629    
                      00630  FAR_CALL isprimeinner ,safepush
001E   ????               M  pagesel safepush
001F   2???               M  call safepush
0020   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00631 
                      00632  
0021   2???           00633  goto hlllb51J9
                      00634  
                      00635 
0022                  00636 hlllb51J8:
                      00637 
                      00638 
0022   3001           00639  movlw .1
                      00640 
                      00641    
                      00642  HALF_FAR_CALL safepush
0023   ????               M  pagesel safepush       
0024   2???               M  call safepush
                      00643 
                      00644 
                      00645  
                      00646  FAR_CALL isprimeinner,parm
0025   ????               M  pagesel parm
0026   2???               M  call parm
0027   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00647 
                      00648 
0028   3000           00649  movlw .0
                      00650 
                      00651    
                      00652  HALF_FAR_CALL safepush
0029   ????               M  pagesel safepush       
002A   2???               M  call safepush
                      00653 
                      00654 
                      00655  
                      00656  HALF_FAR_CALL parm
002B   ????               M  pagesel parm           
002C   2???               M  call parm
                      00657 
                      00658 
                      00659  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00660  FAR_CALL isprimeinner,divis
002D   ????               M  pagesel divis
002E   2???               M  call divis
002F   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00661 
                      00662  POP
0030   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0031   0384               M  decf FSR,f 
0032   3A00           00663  xorlw .0
0033   1903           00664  btfsc STATUS,Z
0034   2???           00665  goto hlllb51J6 
                      00666  
                      00667 
0035   3000           00668  movlw .0
                      00669 
                      00670    
                      00671  FAR_CALL isprimeinner ,safepush
0036   ????               M  pagesel safepush
0037   2???               M  call safepush
0038   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00672 
                      00673  
0039   2???           00674  goto hlllb51J7
                      00675  
                      00676 
003A                  00677 hlllb51J6:
                      00678 
                      00679 
003A   3001           00680  movlw .1
                      00681 
                      00682    
                      00683  HALF_FAR_CALL safepush
003B   ????               M  pagesel safepush       
003C   2???               M  call safepush
                      00684 
                      00685 
                      00686  
                      00687  FAR_CALL isprimeinner,add
003D   ????               M  pagesel add
003E   2???               M  call add
003F   ????               M  pagesel isprimeinner ;This one restores the caller's code page
                      00688 
                      00689  ;
                      00690 
                      00691 
                      00692  KDISCARD 
0040   03??               M  decf alt_fsr,f 
0041   2???           00693  goto isprimeinner
0042                  00694 hlllb51J7:
0042                  00695 hlllb51J9:
                      00696 
                      00697  KDISCARD 
0042   03??               M  decf alt_fsr,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   0008           00698  return 
                      00699 
                      00700  
                      00701 
                      00702 hllt4513 CODE
0000                  00703 divis:
0000   0804           00704  movf FSR,w
                      00705  
                      00706 
                      00707  
                      00708  FAR_CALL divis ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel divis     ;This one restores the caller's code page
                      00709 
                      00710 
0004   3001           00711  movlw .1
                      00712 
                      00713    
                      00714  HALF_FAR_CALL safepush
0005   ????               M  pagesel safepush       
0006   2???               M  call safepush
                      00715 
                      00716 
                      00717  
                      00718  FAR_CALL divis,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel divis     ;This one restores the caller's code page
                      00719 
                      00720 
000A   3000           00721  movlw .0
                      00722 
                      00723    
                      00724  HALF_FAR_CALL safepush
000B   ????               M  pagesel safepush       
000C   2???               M  call safepush
                      00725 
                      00726 
                      00727  
                      00728  HALF_FAR_CALL parm
000D   ????               M  pagesel parm           
000E   2???               M  call parm
                      00729 
                      00730 
                      00731  
                      00732  FAR_CALL divis,modu
000F   ????               M  pagesel modu
0010   2???               M  call modu
0011   ????               M  pagesel divis     ;This one restores the caller's code page
                      00733 
                      00734  POP
0012   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013   0384               M  decf FSR,f 
0014   3A00           00735  xorlw .0
0015   1903           00736  btfsc STATUS,Z
0016   2???           00737  goto hlllb51J11 
                      00738  
                      00739 
0017   3000           00740  movlw .0
                      00741 
                      00742    
                      00743  FAR_CALL divis ,safepush
0018   ????               M  pagesel safepush
0019   2???               M  call safepush
001A   ????               M  pagesel divis     ;This one restores the caller's code page
                      00744 
                      00745  
001B   2???           00746  goto hlllb51J12
                      00747  
                      00748 
001C                  00749 hlllb51J11:
                      00750 
                      00751 
001C   3001           00752  movlw .1
                      00753 
                      00754    
                      00755  FAR_CALL divis ,safepush
001D   ????               M  pagesel safepush
001E   2???               M  call safepush
001F   ????               M  pagesel divis     ;This one restores the caller's code page
                      00756 
                      00757 
0020                  00758 hlllb51J12:
                      00759 
                      00760 
                      00761  
                      00762  FAR_CALL divis,kpop
0020   ????               M  pagesel kpop
0021   2???               M  call kpop
0022   ????               M  pagesel divis     ;This one restores the caller's code page
                      00763  
                      00764 #ifdef HLLMULTITASK 
                      00765  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00766  btfsc STATUS,Z
                      00767  goto $+3
                      00768  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
                      00769  goto $+2      ; is because isr execution is preemptive, and returns only at the 
                      00770  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      00771 #else          ; thread, and speeding up isr execution helps this problem. In most of
0023   00??           00772  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      00773 #endif 
                      00774 
                      00775 
                      00776  POP
0024   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   0384               M  decf FSR,f 
                      00777  
                      00778  FAR_CALL divis ,kpush
0026   ????               M  pagesel kpush
0027   2???               M  call kpush
0028   ????               M  pagesel divis     ;This one restores the caller's code page
                      00779  
                      00780 #ifdef HLLMULTITASK 
                      00781  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00782  btfsc STATUS,Z
                      00783  goto $+3
                      00784  movf pbase+1,w                 ;in_isr
                      00785  goto $+2
                      00786  movf pbase,w   ;not in_isr
                      00787 #else
0029   08??           00788  movf pbase,w   
                      00789 #endif  
                      00790 
                      00791  
                      00792 ;LOAD POINTER
002A   0084           00793  movwf FSR
                      00794  
                      00795 
                      00796  DISCARD
002B   0384               M  decf FSR,f 
                      00797 
                      00798 
                      00799  DISCARD
002C   0384               M  decf FSR,f 
                      00800 
                      00801 
                      00802  
                      00803  HALF_FAR_CALL kpop
002D   ????               M  pagesel kpop           
002E   2???               M  call kpop
                      00804 
                      00805 
                      00806  
                      00807  FAR_CALL divis ,safepush
002F   ????               M  pagesel safepush
0030   2???               M  call safepush
0031   ????               M  pagesel divis     ;This one restores the caller's code page
                      00808  
                      00809 
0032   0008           00810  return
                      00811  
                      00812 
                      00813 hllt4514 CODE
0000                  00814 sqrt:
0000   0804           00815  movf FSR,w
                      00816  
                      00817 
                      00818  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00819  FAR_CALL sqrt ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00820 
                      00821 
0004   3000           00822  movlw .0
                      00823  
                      00824 
                      00825 
                      00826 
                      00827    
                      00828  FAR_CALL sqrt ,safepush
0005   ????               M  pagesel safepush
0006   2???               M  call safepush
0007   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00829 
                      00830 
0008   30FF           00831  movlw .255
                      00832  
                      00833 
                      00834 
                      00835    
                      00836  FAR_CALL sqrt ,safepush
0009   ????               M  pagesel safepush
000A   2???               M  call safepush
000B   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00837 
                      00838 
000C   3000           00839  movlw .0
                      00840  
                      00841 
                      00842 
                      00843 
                      00844    
                      00845  FAR_CALL sqrt ,safepush
000D   ????               M  pagesel safepush
000E   2???               M  call safepush
000F   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00846 
                      00847 
0010   30FF           00848  movlw .255
                      00849  
                      00850 
                      00851 
                      00852    
                      00853  FAR_CALL sqrt ,safepush
0011   ????               M  pagesel safepush
0012   2???               M  call safepush
0013   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00854 
                      00855 
0014   3000           00856  movlw .0
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00857 
                      00858    
                      00859  HALF_FAR_CALL safepush
0015   ????               M  pagesel safepush       
0016   2???               M  call safepush
                      00860 
                      00861 
                      00862  
                      00863  HALF_FAR_CALL parm
0017   ????               M  pagesel parm           
0018   2???               M  call parm
                      00864 
                      00865 
                      00866  
                      00867  HALF_FAR_CALL utof
0019   ????               M  pagesel utof           
001A   2???               M  call utof
                      00868 
                      00869 
                      00870  
                      00871  HALF_FAR_CALL logf
001B   ????               M  pagesel logf           
001C   2???               M  call logf
                      00872 
                      00873 
                      00874  
                      00875  HALF_FAR_CALL mulf
001D   ????               M  pagesel mulf           
001E   2???               M  call mulf
                      00876 
                      00877 
                      00878  
                      00879  HALF_FAR_CALL powf
001F   ????               M  pagesel powf           
0020   2???               M  call powf
                      00880 
                      00881 
                      00882  
                      00883  HALF_FAR_CALL nextf
0021   ????               M  pagesel nextf          
0022   2???               M  call nextf
                      00884 
                      00885 
                      00886  
                      00887  HALF_FAR_CALL addf
0023   ????               M  pagesel addf           
0024   2???               M  call addf
                      00888 
                      00889 
                      00890  
                      00891  HALF_FAR_CALL ftou
0025   ????               M  pagesel ftou           
0026   2???               M  call ftou
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00892 
                      00893 
                      00894  
                      00895  FAR_CALL sqrt,kpop
0027   ????               M  pagesel kpop
0028   2???               M  call kpop
0029   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00896  
                      00897 #ifdef HLLMULTITASK 
                      00898  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00899  btfsc STATUS,Z
                      00900  goto $+3
                      00901  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
                      00902  goto $+2      ; is because isr execution is preemptive, and returns only at the 
                      00903  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      00904 #else          ; thread, and speeding up isr execution helps this problem. In most of
002A   00??           00905  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      00906 #endif 
                      00907 
                      00908 
                      00909  POP
002B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
002C   0384               M  decf FSR,f 
                      00910  
                      00911  FAR_CALL sqrt ,kpush
002D   ????               M  pagesel kpush
002E   2???               M  call kpush
002F   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00912  
                      00913 #ifdef HLLMULTITASK 
                      00914  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00915  btfsc STATUS,Z
                      00916  goto $+3
                      00917  movf pbase+1,w                 ;in_isr
                      00918  goto $+2
                      00919  movf pbase,w   ;not in_isr
                      00920 #else
0030   08??           00921  movf pbase,w   
                      00922 #endif  
                      00923 
                      00924  
                      00925 ;LOAD POINTER
0031   0084           00926  movwf FSR
                      00927  
                      00928 
                      00929  DISCARD
0032   0384               M  decf FSR,f 
                      00930 
                      00931 
                      00932  
                      00933  HALF_FAR_CALL kpop
0033   ????               M  pagesel kpop           
0034   2???               M  call kpop
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00934 
                      00935 
                      00936  
                      00937  FAR_CALL sqrt ,safepush
0035   ????               M  pagesel safepush
0036   2???               M  call safepush
0037   ????               M  pagesel sqrt      ;This one restores the caller's code page
                      00938  
                      00939 
0038   0008           00940  return
                      00941  
0039                  00942 hllprgen2:
0039   2???           00943  goto hllprgen2
                      00944  
                      00945 
                      00946 
                      00947 
                      00948 
                      00949 
                      00950  
                      00951  
                      00952 
                      00953  
                      00954 
                      00955 
                      00956 ansiadt udata
0000                  00957 aart00 RES .1
                      00958 #ifdef HLLMULTITASK
                      00959 #ifdef HLLGUARDaart
                      00960 aart00isr RES .1
                      00961 #endif 
                      00962 #endif 
0001                  00963 aart01 RES .1
                      00964 #ifdef HLLMULTITASK
                      00965 #ifdef HLLGUARDaart
                      00966 aart01isr RES .1
                      00967 #endif 
                      00968 #endif 
0002                  00969 aart02 RES .1
                      00970 #ifdef HLLMULTITASK
                      00971 #ifdef HLLGUARDaart
                      00972 aart02isr RES .1
                      00973 #endif 
                      00974 #endif 
                      00975 
                      00976  
                      00977 ansiara CODE
                      00978 
                      00979 ansiadu udata
0000                  00980 aartpr00 RES .1
                      00981 #ifdef HLLMULTITASK
                      00982 #ifdef HLLGUARDaartpr
                      00983 aart00prisr RES .1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00984 #endif 
                      00985 #endif 
                      00986 
                      00987 cprntuc CODE
                      00988 
                      00989 
                      00990 
                      00991 #define margpi aartpr00
                      00992 
                      00993 
0000                  00994 printu:  
                      00995 #ifdef HLLMULTITASK
                      00996 #ifdef HLLGUARDaartpr 
                      00997  movf in_isr,f  
                      00998  btfsc STATUS,Z
                      00999  
                      01000 
                      01001 
                      01002  goto printu0
                      01003 
                      01004  POP
                      01005  banksel margpi
                      01006  movwf margpi
                      01007  PUSH
                      01008  movlw .100 
                      01009  PUSH
                      01010  
                      01011  FAR_CALL printu,divu
                      01012  POP
                      01013  addlw '0' 
                      01014  PUSH
                      01015  
                      01016  FAR_CALL printu,printch
                      01017  banksel margpi 
                      01018  movfw margpi
                      01019  PUSH
                      01020  movlw .100 
                      01021  PUSH
                      01022  
                      01023  FAR_CALL printu,modu
                      01024  movlw .10
                      01025  PUSH
                      01026  
                      01027  FAR_CALL printu,divu
                      01028  POP
                      01029  addlw '0' 
                      01030  PUSH
                      01031  
                      01032  FAR_CALL printu,printch
                      01033  banksel margpi
                      01034  movfw margpi
                      01035  PUSH
                      01036  movlw .10 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01037  PUSH
                      01038  
                      01039  FAR_CALL printu,modu
                      01040  POP
                      01041  addlw '0' 
                      01042  PUSH
                      01043  
                      01044  FAR_CALL printu,printch  
                      01045  return
                      01046 
                      01047 
                      01048 
                      01049 #undefine margpi
                      01050 
                      01051 
                      01052 #define margpi aartpr00+1
                      01053 
                      01054 
                      01055 printu0:
                      01056 #endif
                      01057 #endif
                      01058 
                      01059  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      01060  banksel margpi
0004   00??           01061  movwf margpi
                      01062  PUSH
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0007   3064           01063  movlw .100 
                      01064  PUSH
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01065  
                      01066  FAR_CALL printu,divu
000A   ????               M  pagesel divu
000B   2???               M  call divu
000C   ????               M  pagesel printu    ;This one restores the caller's code page
                      01067  POP
000D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000E   0384               M  decf FSR,f 
000F   3E30           01068  addlw '0' 
                      01069  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01070  
                      01071  FAR_CALL printu,printch
0012   ????               M  pagesel printch
0013   2???               M  call printch
0014   ????               M  pagesel printu    ;This one restores the caller's code page
0015   ???? ????      01072  banksel margpi 
0017   08??           01073  movfw margpi
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01074  PUSH
0018   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0019   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
001A   3064           01075  movlw .100 
                      01076  PUSH
001B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01077  
                      01078  FAR_CALL printu,modu
001D   ????               M  pagesel modu
001E   2???               M  call modu
001F   ????               M  pagesel printu    ;This one restores the caller's code page
0020   300A           01079  movlw .10
                      01080  PUSH
0021   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0022   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01081  
                      01082  FAR_CALL printu,divu
0023   ????               M  pagesel divu
0024   2???               M  call divu
0025   ????               M  pagesel printu    ;This one restores the caller's code page
                      01083  POP
0026   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0027   0384               M  decf FSR,f 
0028   3E30           01084  addlw '0' 
                      01085  PUSH
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01086  
                      01087  FAR_CALL printu,printch
002B   ????               M  pagesel printch
002C   2???               M  call printch
002D   ????               M  pagesel printu    ;This one restores the caller's code page
002E   ???? ????      01088  banksel margpi
0030   08??           01089  movfw margpi
                      01090  PUSH
0031   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0032   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0033   300A           01091  movlw .10 
                      01092  PUSH
0034   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0035   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01093  
                      01094  FAR_CALL printu,modu
0036   ????               M  pagesel modu
0037   2???               M  call modu
0038   ????               M  pagesel printu    ;This one restores the caller's code page
                      01095  POP
0039   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003A   0384               M  decf FSR,f 
003B   3E30           01096  addlw '0' 
                      01097  PUSH
003C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01098  
                      01099  FAR_CALL printu,printch  
003E   ????               M  pagesel printch
003F   2???               M  call printch
0040   ????               M  pagesel printu    ;This one restores the caller's code page
0041   0008           01100  return
                      01101 
                      01102 
                      01103 
                      01104 #undefine margpi
                      01105 
                      01106 
                      01107 
                      01108 
                      01109 
                      01110 
                      01111  
                      01112 
                      01113 
                      01114 hlog1a CODE
                      01115 
                      01116 
                      01117 
                      01118 #define margp2 hllblss00
                      01119 
                      01120 
0000                  01121 clearbit:  
                      01122 #ifdef HLLMULTITASK
                      01123 #ifdef HLLGUARDhllblss 
                      01124  movf in_isr,f  
                      01125  btfsc STATUS,Z
                      01126  
                      01127 
                      01128 
                      01129  goto clearbit0
                      01130 
                      01131  POP
                      01132  banksel margp2
                      01133  movwf margp2
                      01134  POP 
                      01135  xorlw .0
                      01136  btfss STATUS,Z
                      01137  goto tff00h
                      01138  
                      01139  movfw margp2
                      01140  andlw .255-.1
                      01141  goto tff99h
                      01142 tff00h: 
                      01143  
                      01144  xorlw .1
                      01145  btfss STATUS,Z
                      01146  goto tff01h
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01147  
                      01148  movfw margp2
                      01149  andlw .255-.2
                      01150  goto tff99h
                      01151 tff01h: 
                      01152  xorlw .1
                      01153  xorlw .2
                      01154  btfss STATUS,Z
                      01155  goto tff02h
                      01156  
                      01157  movfw margp2
                      01158  andlw .255-.4
                      01159  goto tff99h
                      01160 tff02h: 
                      01161  xorlw .2
                      01162  xorlw .3
                      01163  btfss STATUS,Z
                      01164  goto tff03h
                      01165  
                      01166  movfw margp2
                      01167  andlw .255-.8
                      01168  goto tff99h
                      01169 tff03h: 
                      01170  xorlw .3
                      01171  xorlw .4
                      01172  btfss STATUS,Z
                      01173  goto tff04h
                      01174  
                      01175  movfw margp2
                      01176  andlw .255-.16
                      01177  goto tff99h
                      01178 tff04h: 
                      01179  xorlw .4
                      01180  xorlw .5
                      01181  btfss STATUS,Z
                      01182  goto tff05h
                      01183  
                      01184  movfw margp2
                      01185  andlw .255-.32
                      01186  goto tff99h
                      01187 tff05h: 
                      01188  xorlw .5
                      01189  xorlw .6
                      01190  btfss STATUS,Z
                      01191  goto tff07h
                      01192  
                      01193  movfw margp2
                      01194  andlw .255-.64
                      01195  goto tff99h
                      01196 tff07h: 
                      01197  
                      01198  movfw margp2
                      01199  andlw .255-.128
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01200 tff99h:  
                      01201  PUSH
                      01202  return
                      01203 
                      01204 
                      01205 
                      01206 
                      01207 #undefine margp2
                      01208 
                      01209 
                      01210 #define margp2 hllblss00+1
                      01211 
                      01212 
                      01213 clearbit0:
                      01214 #endif
                      01215 #endif
                      01216 
                      01217  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      01218  banksel margp2
0004   00??           01219  movwf margp2
                      01220  POP 
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   3A00           01221  xorlw .0
0008   1D03           01222  btfss STATUS,Z
0009   2???           01223  goto hllAAAAA
                      01224  
000A   08??           01225  movfw margp2
000B   39FE           01226  andlw .255-.1
000C   2???           01227  goto hllHAAAA
000D                  01228 hllAAAAA: 
                      01229  
000D   3A01           01230  xorlw .1
000E   1D03           01231  btfss STATUS,Z
000F   2???           01232  goto hllBAAAA
                      01233  
0010   08??           01234  movfw margp2
0011   39FD           01235  andlw .255-.2
0012   2???           01236  goto hllHAAAA
0013                  01237 hllBAAAA: 
0013   3A01           01238  xorlw .1
0014   3A02           01239  xorlw .2
0015   1D03           01240  btfss STATUS,Z
0016   2???           01241  goto hllCAAAA
                      01242  
0017   08??           01243  movfw margp2
0018   39FB           01244  andlw .255-.4
0019   2???           01245  goto hllHAAAA
001A                  01246 hllCAAAA: 
001A   3A02           01247  xorlw .2
001B   3A03           01248  xorlw .3
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C   1D03           01249  btfss STATUS,Z
001D   2???           01250  goto hllDAAAA
                      01251  
001E   08??           01252  movfw margp2
001F   39F7           01253  andlw .255-.8
0020   2???           01254  goto hllHAAAA
0021                  01255 hllDAAAA: 
0021   3A03           01256  xorlw .3
0022   3A04           01257  xorlw .4
0023   1D03           01258  btfss STATUS,Z
0024   2???           01259  goto hllEAAAA
                      01260  
0025   08??           01261  movfw margp2
0026   39EF           01262  andlw .255-.16
0027   2???           01263  goto hllHAAAA
0028                  01264 hllEAAAA: 
0028   3A04           01265  xorlw .4
0029   3A05           01266  xorlw .5
002A   1D03           01267  btfss STATUS,Z
002B   2???           01268  goto hllFAAAA
                      01269  
002C   08??           01270  movfw margp2
002D   39DF           01271  andlw .255-.32
002E   2???           01272  goto hllHAAAA
002F                  01273 hllFAAAA: 
002F   3A05           01274  xorlw .5
0030   3A06           01275  xorlw .6
0031   1D03           01276  btfss STATUS,Z
0032   2???           01277  goto hllGAAAA
                      01278  
0033   08??           01279  movfw margp2
0034   39BF           01280  andlw .255-.64
0035   2???           01281  goto hllHAAAA
0036                  01282 hllGAAAA: 
                      01283  
0036   08??           01284  movfw margp2
0037   397F           01285  andlw .255-.128
0038                  01286 hllHAAAA:  
                      01287  PUSH
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003A   0008           01288  return
                      01289 
                      01290 
                      01291 
                      01292 
                      01293 #undefine margp2
                      01294 
                      01295 
                      01296 
                      01297 
                      01298  
                      01299  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01300 
                      01301 hllcmppic CODE
                      01302 
                      01303 
                      01304 
                      01305 #define mkarg1 hllblss00
                      01306 
                      01307 
0000                  01308 geu:  
                      01309 #ifdef HLLMULTITASK
                      01310 #ifdef HLLGUARDhllblss 
                      01311  movf in_isr,f  
                      01312  btfsc STATUS,Z
                      01313  
                      01314 
                      01315 
                      01316  goto geu0
                      01317 
                      01318 
                      01319  POP
                      01320  banksel mkarg1
                      01321  movwf mkarg1    
                      01322  POP
                      01323  subwf mkarg1,w
                      01324  btfsc STATUS,Z
                      01325  goto mxhbl
                      01326  btfsc STATUS,C
                      01327  goto mxhbm
                      01328 mxhbl:
                      01329  movlw .1
                      01330  PUSH
                      01331  
                      01332  return
                      01333 mxhbm:
                      01334  movlw .0
                      01335  PUSH
                      01336  
                      01337  return
                      01338 
                      01339 
                      01340 
                      01341 #undefine mkarg1
                      01342 
                      01343 
                      01344 #define mkarg1 hllblss00+1
                      01345 
                      01346 
                      01347 geu0:
                      01348 #endif
                      01349 #endif
                      01350 
                      01351 
                      01352  POP
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      01353  banksel mkarg1
0004   00??           01354  movwf mkarg1    
                      01355  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   02??           01356  subwf mkarg1,w
0008   1903           01357  btfsc STATUS,Z
0009   2???           01358  goto hllIAAAA
000A   1803           01359  btfsc STATUS,C
000B   2???           01360  goto hllJAAAA
000C                  01361 hllIAAAA:
000C   3001           01362  movlw .1
                      01363  PUSH
000D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01364  
000F   0008           01365  return
0010                  01366 hllJAAAA:
0010   3000           01367  movlw .0
                      01368  PUSH
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01369  
0013   0008           01370  return
                      01371 
                      01372 
                      01373 
                      01374 #undefine mkarg1
                      01375 
                      01376 
                      01377 
                      01378 
                      01379 
                      01380 
                      01381 
                      01382  
                      01383 
                      01384 
                      01385 
                      01386 ukrnl2 UDATA
0000                  01387 stack res HLOE_STACK_SIZE
                      01388  
                      01389 ukrnl3 UDATA 
0000                  01390 alt_stack res HLOE_STACK2_SIZE
                      01391  
                      01392 
                      01393 
                      01394 ukernl udata 
                      01395 
                      01396 
                      01397 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01398 
                      01399 
0000                  01400 hllblss00 res 1           
                      01401 #ifdef HLLMULTITASK
                      01402 #ifdef HLLGUARDhllblss
                      01403 hllblss00isr res 1      
                      01404 #endif
                      01405 #endif
                      01406 
0001                  01407 hllblss01 res 1    
                      01408 #ifdef HLLMULTITASK
                      01409 #ifdef HLLGUARDhllblss
                      01410 hllblss01isr res 1      
                      01411 #endif
                      01412 #endif
                      01413 
0002                  01414 hllblss02 res 1    
                      01415 #ifdef HLLMULTITASK
                      01416 #ifdef HLLGUARDhllblss
                      01417 hllblss02isr res 1      
                      01418 #endif
                      01419 #endif
                      01420   
                      01421 ukrshr udata_shr
                      01422 
                      01423 
0000                  01424 softstack0 res 1                
                      01425 #ifdef HLLMULTITASK
                      01426 softstack0isr res 1
                      01427 #endif
                      01428 
0001                  01429 softstack1 res 1                
                      01430 #ifdef HLLMULTITASK
                      01431 softstack1isr res 1
                      01432 #endif
                      01433 
0002                  01434 softstack2 res 1                
                      01435 #ifdef HLLMULTITASK
                      01436 softstack2isr res 1
                      01437 #endif
                      01438 
0003                  01439 alt_fsr res 1
0004                  01440 W_Save res 1 
0005                  01441 STATUS_Save res 1
0006                  01442 FSR_Save res 1
0007                  01443 ALT_Save res 1
0008                  01444 in_isr res 1
                      01445 
                      01446 hllkrna00 CODE
                      01447 
                      01448  
                      01449 
                      01450 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01451 #define mterm hllblss00
                      01452 
                      01453 
0000                  01454 mul:  
                      01455 #ifdef HLLMULTITASK
                      01456 #ifdef HLLGUARDhllblss 
                      01457  movf in_isr,f  
                      01458  btfsc STATUS,Z
                      01459  
                      01460 
                      01461 
                      01462  goto mul0
                      01463 
                      01464  POP
                      01465  banksel mterm 
                      01466  movwf mterm
                      01467  clrw 
                      01468  addwf HLINDF,w 
                      01469  decf mterm,f 
                      01470  btfss STATUS,Z 
                      01471  goto $-3
                      01472  movwf HLINDF
                      01473  return
                      01474 
                      01475 
                      01476 
                      01477 #undefine mterm
                      01478 
                      01479 
                      01480 #define mterm hllblss00+1
                      01481 
                      01482 
                      01483 mul0:
                      01484 #endif
                      01485 #endif
                      01486 
                      01487  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      01488  banksel mterm 
0004   00??           01489  movwf mterm
0005   0103           01490  clrw 
0006   0700           01491  addwf HLINDF,w 
0007   03??           01492  decf mterm,f 
0008   1D03           01493  btfss STATUS,Z 
0009   2???           01494  goto $-3
000A   0080           01495  movwf HLINDF
000B   0008           01496  return
                      01497 
                      01498 
                      01499 
                      01500 #undefine mterm
                      01501 hllkrna01 CODE
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01502 
0000                  01503 add: 
                      01504  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0700           01505  addwf HLINDF,w
0003   0384           01506  decf HLFSR,f 
                      01507  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           01508  return
                      01509  
                      01510 hllkrna02 CODE 
                      01511 
0000                  01512 negti:  
0000   0980           01513  comf HLINDF,f
0001   0A80           01514  incf HLINDF,f
0002   0008           01515  return
                      01516  
                      01517 hllkrna03 CODE 
                      01518  
0000                  01519 printch:
                      01520  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      01521 #ifdef HLLMULTITASK 
                      01522  
                      01523  banksel PIR1
                      01524  btfss PIR1,TXIF  
                      01525  goto $-1 
                      01526 #endif 
                      01527  
0002   1283 1303      01528  banksel TXREG
0004   0099           01529  movwf TXREG  
                      01530  
0005   1283 1303      01531  banksel PIR1
0007   1E0C           01532  btfss PIR1,TXIF  
0008   2???           01533  goto $-1  
0009   0008           01534  return  
                      01535 
                      01536 
                      01537 
                      01538 
                      01539 hllkrna04 CODE
                      01540  
                      01541 
                      01542 
                      01543 #define mterm hllblss00
                      01544 
                      01545 
                      01546 #define mdiv hllblss01
                      01547 
                      01548 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01549 #define mquot hllblss02
                      01550 
                      01551 
0000                  01552 modu:  
                      01553 #ifdef HLLMULTITASK
                      01554 #ifdef HLLGUARDhllblss 
                      01555  movf in_isr,f  
                      01556  btfsc STATUS,Z
                      01557  
                      01558 
                      01559 
                      01560  goto modu0
                      01561 
                      01562  banksel mquot 
                      01563  clrf mquot
                      01564  POP
                      01565  movwf mdiv
                      01566  POP
                      01567  movwf mterm
                      01568  movfw mdiv
                      01569  subwf mterm,f
                      01570  btfss STATUS,C 
                      01571  goto $+3
                      01572  incf mquot,f 
                      01573  goto $-4
                      01574  addwf mterm,w
                      01575  PUSH
                      01576  return 
                      01577 
                      01578 
                      01579 
                      01580 #undefine mterm
                      01581 
                      01582 
                      01583 #undefine mdiv
                      01584 
                      01585 
                      01586 #undefine mquot
                      01587 
                      01588 
                      01589 #define mterm hllblss00+1
                      01590 
                      01591 
                      01592 #define mdiv hllblss01+1
                      01593 
                      01594 
                      01595 #define mquot hllblss02+1
                      01596 
                      01597 
                      01598 modu0:
                      01599 #endif
                      01600 #endif
                      01601 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000   ???? ????      01602  banksel mquot 
0002   01??           01603  clrf mquot
                      01604  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   00??           01605  movwf mdiv
                      01606  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           01607  movwf mterm
0009   08??           01608  movfw mdiv
000A   02??           01609  subwf mterm,f
000B   1C03           01610  btfss STATUS,C 
000C   2???           01611  goto $+3
000D   0A??           01612  incf mquot,f 
000E   2???           01613  goto $-4
000F   07??           01614  addwf mterm,w
                      01615  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0012   0008           01616  return 
                      01617 
                      01618 
                      01619 
                      01620 #undefine mterm
                      01621 
                      01622 
                      01623 #undefine mdiv
                      01624 
                      01625 
                      01626 #undefine mquot
                      01627 hllkrna05 CODE
                      01628 
                      01629 
                      01630 
                      01631 #define mterm hllblss00
                      01632 
                      01633 
                      01634 #define mdiv hllblss01
                      01635 
                      01636 
                      01637 #define mquot hllblss02
                      01638 
                      01639 
0000                  01640 divu:  
                      01641 #ifdef HLLMULTITASK
                      01642 #ifdef HLLGUARDhllblss 
                      01643  movf in_isr,f  
                      01644  btfsc STATUS,Z
                      01645  
                      01646 
                      01647 
                      01648  goto divu0
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01649 
                      01650  banksel mquot 
                      01651  clrf mquot
                      01652  POP
                      01653  movwf mdiv
                      01654  POP
                      01655  movwf mterm
                      01656  movfw mdiv
                      01657  subwf mterm,f
                      01658  btfss STATUS,C 
                      01659  goto $+3
                      01660  incf mquot,f 
                      01661  goto $-4
                      01662  movfw mquot
                      01663  PUSH
                      01664  return 
                      01665 
                      01666 
                      01667 
                      01668 #undefine mterm
                      01669 
                      01670 
                      01671 #undefine mdiv
                      01672 
                      01673 
                      01674 #undefine mquot
                      01675 
                      01676 
                      01677 #define mterm hllblss00+1
                      01678 
                      01679 
                      01680 #define mdiv hllblss01+1
                      01681 
                      01682 
                      01683 #define mquot hllblss02+1
                      01684 
                      01685 
                      01686 divu0:
                      01687 #endif
                      01688 #endif
                      01689 
0000   ???? ????      01690  banksel mquot 
0002   01??           01691  clrf mquot
                      01692  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   00??           01693  movwf mdiv
                      01694  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           01695  movwf mterm
0009   08??           01696  movfw mdiv
000A   02??           01697  subwf mterm,f
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   1C03           01698  btfss STATUS,C 
000C   2???           01699  goto $+3
000D   0A??           01700  incf mquot,f 
000E   2???           01701  goto $-4
000F   08??           01702  movfw mquot
                      01703  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0012   0008           01704  return 
                      01705 
                      01706 
                      01707 
                      01708 #undefine mterm
                      01709 
                      01710 
                      01711 #undefine mdiv
                      01712 
                      01713 
                      01714 #undefine mquot
                      01715 hllkrna06 CODE
                      01716 
                      01717  
                      01718  
                      01719  
0000                  01720 getch:
0000   1283 1303      01721  banksel PIR1
0002                  01722 geth2: 
0002   1E8C           01723  btfss PIR1,RCIF
0003   2???           01724  goto geth2
0004   1283 1303      01725  banksel RCREG
0006   081A           01726  movf RCREG,w
                      01727  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           01728  return
                      01729  
                      01730 hllkrna07 CODE 
                      01731  
0000                  01732 eq: 
                      01733  POP 
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0600           01734  xorwf HLINDF,w
0003   3001           01735  movlw .1 
0004   1D03           01736  btfss STATUS,Z
0005   3000           01737  movlw .0 
0006   0384           01738  decf HLFSR,f 
                      01739  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           01740  return
                      01741  
                      01742  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01743  
                      01744 
                      01745 #define sstack0 softstack0 
                      01746 #define sstack1 softstack1 
                      01747 #define sstack2 softstack2 
                      01748 
                      01749 hllparmcore macro 
                      01750  movwf sstack2
                      01751  movfw HLFSR 
                      01752            
                      01753                    
                      01754  movwf sstack0
                      01755  movfw HLINDF
                      01756  
                      01757  subwf sstack2,w
                      01758  movwf HLFSR 
                      01759  movfw HLINDF 
                      01760  
                      01761  movwf sstack1
                      01762  
                      01763  movfw sstack0
                      01764  movwf HLFSR 
                      01765  clrf sstack0
                      01766  movfw sstack1 
                      01767  movwf HLINDF
                      01768  
                      01769  movfw sstack2
                      01770  pagesel kpush
                      01771  goto kpush 
                      01772  endm
                      01773 
                      01774  
                      01775 hllkrna08 CODE  
0000                  01776 parm:
                      01777  KPOP 
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
                      01778  
                      01779 #ifdef HLLMULTITASK 
                      01780  movf in_isr,f 
                      01781  btfss STATUS,Z
                      01782  goto parm4
                      01783  hllparmcore
                      01784 #undefine sstack0 
                      01785 #undefine sstack1
                      01786 #undefine sstack2 
                      01787 #define sstack0 softstack0+1
                      01788 #define sstack1 softstack1+1
                      01789 #define sstack2 softstack2+1
                      01790 parm4:
                      01791 #endif 
                      01792  hllparmcore
0020   00??               M  movwf sstack2
0021   0804               M  movfw HLFSR 
                          M            
                          M                    
0022   00??               M  movwf sstack0
0023   0800               M  movfw HLINDF
                          M  
0024   02??               M  subwf sstack2,w
0025   0084               M  movwf HLFSR 
0026   0800               M  movfw HLINDF 
                          M  
0027   00??               M  movwf sstack1
                          M  
0028   08??               M  movfw sstack0
0029   0084               M  movwf HLFSR 
002A   01??               M  clrf sstack0
002B   08??               M  movfw sstack1 
002C   0080               M  movwf HLINDF
                          M  
002D   08??               M  movfw sstack2
002E   ????               M  pagesel kpush
002F   2???               M  goto kpush 
                      01793 #undefine sstack0 
                      01794 #undefine sstack1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01795 #undefine sstack2 
                      01796  
                      01797 hllkrna09 CODE  
0000                  01798 kpop: 
                      01799  KPOP
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
0020   0008           01800  return 
                      01801  
                      01802 hllkrna10 CODE   
0000                  01803 kpush: 
                      01804  KPUSH
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0E
0004   00??               M  movwf softstack1+1 ;softstack1 holds parm value being pushed
0005   0804               M  movfw FSR  
0006   00??               M  movwf softstack0+1  ;softstack0 holds FSR
0007   08??               M  movfw alt_fsr 
0008   0084               M  movwf FSR 
0009   08??               M  movfw softstack1+1
000A   0A??               M  incf alt_fsr,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
000C   0080               M  movwf INDF 
000D   08??               M  movfw softstack0+1
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1 
0010   2???               M  goto $+0D
0011   00??               M  movwf softstack1 ;softstack1 holds parm value being pushed
0012   0804               M  movfw FSR  
0013   00??               M  movwf softstack0  ;softstack0 holds FSR
0014   08??               M  movfw alt_fsr 
0015   0084               M  movwf FSR 
0016   08??               M  movfw softstack1
0017   0A??               M  incf alt_fsr,f 
0018   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
0019   0080               M  movwf INDF 
001A   08??               M  movfw softstack0
001B   0084               M  movwf FSR 
001C   01??               M  clrf softstack0
001D   ????               M  bankisel stack
001E   0008           01805  return
                      01806 
                      01807 hllkrna11 CODE   
0000                  01808 dispose:
                      01809  DISCARD
0000   0384               M  decf FSR,f 
0001   0008           01810  return 
                      01811  
                      01812  
                      01813 
                      01814 
                      01815 
                      01816 
                      01817 
                      01818 
                      01819  
                      01820  
                      01821 hlog1f CODE
                      01822 
0000                  01823 notb: 
0000   0880           01824  movf HLINDF,f
0001   1903           01825  btfsc STATUS,Z
0002   2???           01826  goto nbnb
0003   0180           01827  clrf HLINDF
0004   2???           01828  goto ncnc
0005                  01829 nbnb: 
0005   1400           01830  bsf HLINDF,0 
0006                  01831 ncnc:
0006   0008           01832  return
                      01833  
                      01834 
                      01835 
                      01836 
                      01837 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01838 
                      01839 
                      01840 
                      01841  
                      01842  
                      01843 
                      01844  
                      01845 hlog1d CODE
                      01846 
0000                  01847 oru: 
                      01848  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0400           01849  iorwf HLINDF,w
0003   0384           01850  decf HLFSR,f 
                      01851  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           01852  return
                      01853 
                      01854  
                      01855 
                      01856 
                      01857 
                      01858 
                      01859 
                      01860 
                      01861 
                      01862 
                      01863 hllkrn444 CODE    
0000                  01864 safepush: 
                      01865  PUSH
0000   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0001   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01866  
                      01867  
                      01868  
0002   0804           01869  movf HLFSR,w
0003   3C??           01870  sublw stack  
0004   1903           01871  btfsc STATUS,Z
0005   2???           01872  goto kspox5 
0006   1803           01873  btfsc STATUS,C 
0007   2???           01874  goto sperr11 
0008                  01875 kspox5:
                      01876   
                      01877 
0008   0804           01878  movf HLFSR,w
0009   3E01           01879  addlw .1
000A   3C??           01880  sublw (stack+HLOE_STACK_SIZE)  
000B   1C03           01881  btfss STATUS,C
000C   2???           01882  goto sperr11
000D   0800           01883  movf HLINDF,w
000E   0008           01884  return
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F                  01885 sperr11:
000F   138B           01886  BCF INTCON,GIE 
                      01887  DISCARD 
0010   0384               M  decf FSR,f 
0011                  01888 dmm445:
0011   3021           01889  movlw '!' 
                      01890  PUSH
0012   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0013   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01891  
                      01892  FAR_CALL safepush,printch
0014   ????               M  pagesel printch
0015   2???               M  call printch
0016   ????               M  pagesel safepush  ;This one restores the caller's code page
0017   2???           01893  goto dmm445
                      01894  
                      01895  
                      01896 
                      01897 
                      01898 
                      01899 
                      01900 
                      01901  
                      01902  
                      01903 
                      01904  
                      01905 hlog1b CODE
                      01906 
                      01907 
                      01908 #define margp2 hllblss00
                      01909 
                      01910 
0000                  01911 setbit:  
                      01912 #ifdef HLLMULTITASK
                      01913 #ifdef HLLGUARDhllblss 
                      01914  movf in_isr,f  
                      01915  btfsc STATUS,Z
                      01916  
                      01917 
                      01918 
                      01919  goto setbit0
                      01920 
                      01921  POP
                      01922  banksel margp2
                      01923  movwf  margp2
                      01924  POP
                      01925  xorlw .0
                      01926  btfss STATUS,Z
                      01927  goto tcf00h
                      01928  
                      01929  movfw  margp2
                      01930  iorlw .1
                      01931  goto tcf99h
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01932 tcf00h: 
                      01933  
                      01934  xorlw .1
                      01935  btfss STATUS,Z
                      01936  goto tcf01h
                      01937  
                      01938  movfw  margp2
                      01939  iorlw .2
                      01940  goto tcf99h
                      01941 tcf01h: 
                      01942  xorlw .1
                      01943  xorlw .2
                      01944  btfss STATUS,Z
                      01945  goto tcf02h
                      01946  
                      01947  movfw margp2
                      01948  iorlw .4
                      01949  goto tcf99h
                      01950 tcf02h: 
                      01951  xorlw .2
                      01952  xorlw .3
                      01953  btfss STATUS,Z
                      01954  goto tcf03h
                      01955  
                      01956  movfw margp2
                      01957  iorlw .8
                      01958  goto tcf99h
                      01959 tcf03h: 
                      01960  xorlw .3
                      01961  xorlw .4
                      01962  btfss STATUS,Z
                      01963  goto tcf04h
                      01964  
                      01965  movfw margp2
                      01966  iorlw .16
                      01967  goto tcf99h
                      01968 tcf04h: 
                      01969  xorlw .4
                      01970  xorlw .5
                      01971  btfss STATUS,Z
                      01972  goto tcf05h
                      01973  
                      01974  movfw margp2
                      01975  iorlw .32
                      01976  goto tcf99h
                      01977 tcf05h: 
                      01978  xorlw .5
                      01979  xorlw .6
                      01980  btfss STATUS,Z
                      01981  goto tcf07h
                      01982  
                      01983  movfw margp2
                      01984  iorlw .64
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01985  goto tcf99h
                      01986 tcf07h: 
                      01987  
                      01988  movfw margp2
                      01989  iorlw .128 
                      01990 tcf99h:  
                      01991  PUSH 
                      01992  return
                      01993 
                      01994 
                      01995 
                      01996 
                      01997 #undefine margp2
                      01998 
                      01999 
                      02000 #define margp2 hllblss00+1
                      02001 
                      02002 
                      02003 setbit0:
                      02004 #endif
                      02005 #endif
                      02006 
                      02007  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      02008  banksel margp2
0004   00??           02009  movwf  margp2
                      02010  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   3A00           02011  xorlw .0
0008   1D03           02012  btfss STATUS,Z
0009   2???           02013  goto hllLAAAA
                      02014  
000A   08??           02015  movfw  margp2
000B   3801           02016  iorlw .1
000C   2???           02017  goto hllSAAAA
000D                  02018 hllLAAAA: 
                      02019  
000D   3A01           02020  xorlw .1
000E   1D03           02021  btfss STATUS,Z
000F   2???           02022  goto hllMAAAA
                      02023  
0010   08??           02024  movfw  margp2
0011   3802           02025  iorlw .2
0012   2???           02026  goto hllSAAAA
0013                  02027 hllMAAAA: 
0013   3A01           02028  xorlw .1
0014   3A02           02029  xorlw .2
0015   1D03           02030  btfss STATUS,Z
0016   2???           02031  goto hllNAAAA
                      02032  
0017   08??           02033  movfw margp2
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0018   3804           02034  iorlw .4
0019   2???           02035  goto hllSAAAA
001A                  02036 hllNAAAA: 
001A   3A02           02037  xorlw .2
001B   3A03           02038  xorlw .3
001C   1D03           02039  btfss STATUS,Z
001D   2???           02040  goto hllOAAAA
                      02041  
001E   08??           02042  movfw margp2
001F   3808           02043  iorlw .8
0020   2???           02044  goto hllSAAAA
0021                  02045 hllOAAAA: 
0021   3A03           02046  xorlw .3
0022   3A04           02047  xorlw .4
0023   1D03           02048  btfss STATUS,Z
0024   2???           02049  goto hllPAAAA
                      02050  
0025   08??           02051  movfw margp2
0026   3810           02052  iorlw .16
0027   2???           02053  goto hllSAAAA
0028                  02054 hllPAAAA: 
0028   3A04           02055  xorlw .4
0029   3A05           02056  xorlw .5
002A   1D03           02057  btfss STATUS,Z
002B   2???           02058  goto hllQAAAA
                      02059  
002C   08??           02060  movfw margp2
002D   3820           02061  iorlw .32
002E   2???           02062  goto hllSAAAA
002F                  02063 hllQAAAA: 
002F   3A05           02064  xorlw .5
0030   3A06           02065  xorlw .6
0031   1D03           02066  btfss STATUS,Z
0032   2???           02067  goto hllRAAAA
                      02068  
0033   08??           02069  movfw margp2
0034   3840           02070  iorlw .64
0035   2???           02071  goto hllSAAAA
0036                  02072 hllRAAAA: 
                      02073  
0036   08??           02074  movfw margp2
0037   3880           02075  iorlw .128 
0038                  02076 hllSAAAA:  
                      02077  PUSH 
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003A   0008           02078  return
                      02079 
                      02080 
                      02081 
                      02082 
                      02083 #undefine margp2
                      02084 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02085 
                      02086 
                      02087 
                      02088 sfpu UDATA
                      02089  
                      02090  
                      02091  
                      02092  
0000                  02093 sfploc00 res .1
0001                  02094 sfpaux00 res .1
                      02095 
                      02096 #ifdef HLLMULTITASK   
                      02097 #ifdef HLLGUARDsfploc
                      02098 sfploc00isr res .1
                      02099 sfpaux00isr res .1
                      02100 #endif
                      02101 #endif
                      02102 
0002                  02103 sfploc01 res .1
0003                  02104 sfpaux01 res .1
                      02105 
                      02106 #ifdef HLLMULTITASK
                      02107 #ifdef HLLGUARDsfploc
                      02108 sfploc01isr res .1
                      02109 sfpaux01isr res .1
                      02110 #endif
                      02111 #endif
                      02112 
                      02113 
0004                  02114 sfploc02 res .1
0005                  02115 sfpaux02 res .1
                      02116 
                      02117 #ifdef HLLMULTITASK
                      02118 #ifdef HLLGUARDsfploc
                      02119 sfploc02isr res .1
                      02120 sfpaux02isr res .1
                      02121 #endif
                      02122 #endif
                      02123 
                      02124 
0006                  02125 sfploc03 res .1
0007                  02126 sfpaux03 res .1
                      02127 
                      02128 #ifdef HLLMULTITASK
                      02129 #ifdef HLLGUARDsfploc
                      02130 sfploc03isr res .1
                      02131 sfpaux03isr res .1
                      02132 #endif
                      02133 #endif
                      02134 
                      02135 
0008                  02136 sfploc04 res .1
                      02137 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02138 #ifdef HLLMULTITASK
                      02139 #ifdef HLLGUARDsfploc
                      02140 sfploc04isr res .1
                      02141 #endif
                      02142 #endif
                      02143 
                      02144 
0009                  02145 sfploc05 res .1
                      02146 
                      02147 #ifdef HLLMULTITASK
                      02148 #ifdef HLLGUARDsfploc
                      02149 sfploc05isr res .1
                      02150 #endif
                      02151 #endif
                      02152 
                      02153 
000A                  02154 sfploc06 res .1
                      02155 
                      02156 #ifdef HLLMULTITASK
                      02157 #ifdef HLLGUARDsfploc
                      02158 sfploc06isr res .1
                      02159 #endif
                      02160 #endif
                      02161 
                      02162 
000B                  02163 sfploc07 res .1
                      02164 
                      02165 #ifdef HLLMULTITASK
                      02166 #ifdef HLLGUARDsfploc
                      02167 sfploc07isr res .1
                      02168 #endif
                      02169 #endif
                      02170 
                      02171 
000C                  02172 sfploc08 res .1
                      02173 
                      02174 #ifdef HLLMULTITASK
                      02175 #ifdef HLLGUARDsfploc
                      02176 sfploc08isr res .1
                      02177 #endif
                      02178 #endif
                      02179 
                      02180 
000D                  02181 sfploc09 res .1
                      02182 
                      02183 #ifdef HLLMULTITASK
                      02184 #ifdef HLLGUARDsfploc
                      02185 sfploc09isr res .1
                      02186 #endif
                      02187 #endif
                      02188 
                      02189 
000E                  02190 sfploc10 res .1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02191 
                      02192 #ifdef HLLMULTITASK
                      02193 #ifdef HLLGUARDsfploc
                      02194 sfploc10isr res .1
                      02195 #endif
                      02196 #endif
                      02197 
                      02198 
000F                  02199 sfploc11 res .1
                      02200 
                      02201 #ifdef HLLMULTITASK
                      02202 #ifdef HLLGUARDsfploc
                      02203 sfploc11isr res .1
                      02204 #endif
                      02205 #endif
                      02206 
                      02207 
0010                  02208 sfploc12 res .1
                      02209 
                      02210 #ifdef HLLMULTITASK
                      02211 #ifdef HLLGUARDsfploc
                      02212 sfploc12isr res .1
                      02213 #endif
                      02214 #endif
                      02215 
                      02216 
0011                  02217 sfploc13 res .1
                      02218 
                      02219 #ifdef HLLMULTITASK
                      02220 #ifdef HLLGUARDsfploc
                      02221 sfploc13isr res .1
                      02222 #endif
                      02223 #endif
                      02224 
                      02225 
0012                  02226 sfploc14 res .1
                      02227 
                      02228 #ifdef HLLMULTITASK
                      02229 #ifdef HLLGUARDsfploc
                      02230 sfploc14isr res .1
                      02231 #endif
                      02232 #endif
                      02233 
                      02234 
0013                  02235 sfploc15 res .1
                      02236 
                      02237 #ifdef HLLMULTITASK
                      02238 #ifdef HLLGUARDsfploc
                      02239 sfploc15isr res .1
                      02240 #endif
                      02241 #endif
                      02242 
                      02243 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0014                  02244 sfploc16 res .1
                      02245 
                      02246 #ifdef HLLMULTITASK
                      02247 #ifdef HLLGUARDsfploc
                      02248 sfploc16isr res .1
                      02249 #endif
                      02250 #endif
                      02251 
                      02252 
0015                  02253 sfploc17 res .1 
                      02254 
                      02255 #ifdef HLLMULTITASK
                      02256 #ifdef HLLGUARDsfploc
                      02257 sfploc17isr res .1
                      02258 #endif
                      02259 #endif
                      02260 
                      02261 
                      02262  
                      02263 
                      02264 
                      02265 
                      02266 
                      02267 
                      02268 
                      02269 
                      02270 
                      02271  
                      02272  
                      02273 
                      02274 sfp_add CODE
                      02275 
                      02276 
                      02277 
                      02278 
                      02279 #define mout_hi sfploc00
                      02280 
                      02281 
                      02282 #define big_c sfploc01
                      02283 
                      02284 
                      02285 #define min2_lower sfploc02
                      02286 
                      02287 
                      02288 #define minres sfploc03
                      02289 
                      02290 
                      02291 #define fulmin2H sfploc04
                      02292 
                      02293 
                      02294 #define fulminH sfploc05
                      02295 
                      02296 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02297 #define min_lower sfploc06
                      02298 
                      02299 
                      02300 #define rev sfploc07
                      02301 
                      02302 
                      02303 #define fulmin2 sfploc08
                      02304 
                      02305 
                      02306 #define fulmin sfploc09
                      02307 
                      02308 
                      02309 #define multiplier sfploc10
                      02310 
                      02311 
                      02312 #define mout sfploc11
                      02313 
                      02314 
                      02315 #define util sfploc12
                      02316 
                      02317 
                      02318 #define neg sfploc13
                      02319 
                      02320 
                      02321 #define ein2 sfploc14
                      02322 
                      02323 
                      02324 #define min2 sfploc15
                      02325 
                      02326 
                      02327 #define ein1 sfploc16
                      02328 
                      02329 
                      02330 #define min sfploc17
                      02331 
                      02332 
0000                  02333 addf:  
                      02334 #ifdef HLLMULTITASK
                      02335 #ifdef HLLGUARDsfploc 
                      02336  movf in_isr,f  
                      02337  btfsc STATUS,Z
                      02338  
                      02339 
                      02340 
                      02341  goto addf0
                      02342 
                      02343 
                      02344  
                      02345  
                      02346  
                      02347  
                      02348  
                      02349  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02350  
                      02351  
                      02352  POP
                      02353  banksel min
                      02354  movwf ein2 
                      02355  POP
                      02356  banksel min
                      02357  movwf min2 
                      02358 
                      02359  POP
                      02360  banksel min
                      02361  movwf ein1 
                      02362 
                      02363  POP
                      02364  banksel min
                      02365  movwf min 
                      02366  
                      02367  
                      02368  
                      02369  
                      02370  bcf minres,0 
                      02371  
                      02372  
                      02373  
                      02374  clrf mout 
                      02375  
                      02376  
                      02377  
                      02378  
                      02379  
                      02380  clrf neg
                      02381  btfsc min,7
                      02382  bsf neg,0
                      02383  
                      02384  
                      02385  
                      02386  btfsc min2,7
                      02387  bsf neg,1
                      02388  
                      02389 
                      02390 
                      02391 
                      02392  btfsc ein2,7  
                      02393  goto yzpt44
                      02394  
                      02395  btfss ein1,7
                      02396  goto yzpt65
                      02397  
                      02398  goto ein_lt_ein2
                      02399 yzpt65: 
                      02400  
                      02401  movfw ein1
                      02402  subwf ein2,w    
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02403  btfss STATUS,C 
                      02404  goto ein_lt_ein1  
                      02405 lz_ein15:
                      02406  goto ein_lt_ein2  
                      02407 yzpt44:   
                      02408  
                      02409  
                      02410  btfsc ein1,7
                      02411  goto yzpt65  
                      02412 ein_lt_ein1:  
                      02413  
                      02414  
                      02415 
                      02416 
                      02417  movf ein2,w
                      02418  xorwf ein1,f
                      02419 
                      02420  movf ein1,w
                      02421  xorwf ein2,f
                      02422 
                      02423  movf ein2,w
                      02424  xorwf ein1,f
                      02425 
                      02426 
                      02427  movf min2,w
                      02428  xorwf min,f
                      02429 
                      02430  movf min,w
                      02431  xorwf min2,f
                      02432 
                      02433  movf min2,w
                      02434  xorwf min,f
                      02435  
                      02436  
                      02437  
                      02438  bsf rev,0 
                      02439  
                      02440  
                      02441  
                      02442  goto ein_lt_ein2_done 
                      02443 ein_lt_ein2: 
                      02444  
                      02445  
                      02446  
                      02447  clrf rev 
                      02448 ein_lt_ein2_done: 
                      02449  
                      02450  
                      02451  
                      02452  
                      02453  movfw min 
                      02454  andlw .127 
                      02455  movwf min 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02456  
                      02457  
                      02458  
                      02459  movfw min2 
                      02460  andlw .127 
                      02461  movwf min2 
                      02462  
                      02463  
                      02464  
                      02465  clrf fulminH 
                      02466  movfw min 
                      02467  addlw .128 
                      02468  btfsc STATUS,C 
                      02469  incf fulminH,f 
                      02470  
                      02471  
                      02472  movwf fulmin 
                      02473  
                      02474  
                      02475  
                      02476  clrf fulmin2H 
                      02477  movfw min2 
                      02478  addlw .128 
                      02479  btfsc STATUS,C 
                      02480  incf fulmin2H,f 
                      02481  
                      02482  movwf fulmin2 
                      02483  
                      02484         
                      02485         
                      02486         
                      02487         
                      02488         
                      02489 
                      02490 
                      02491  clrf min_lower
                      02492 
                      02493  clrf min2_lower
                      02494  
                      02495 whi77:
                      02496 
                      02497 
                      02498  movfw ein1 
                      02499  xorwf ein2,w 
                      02500  btfsc STATUS,Z 
                      02501  goto eein2outw  
                      02502  
                      02503 
                      02504 
                      02505  RSHIFT min_lower
                      02506  
                      02507 
                      02508 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02509  RSHIFT fulmin
                      02510  
                      02511 
                      02512  btfss STATUS,C
                      02513  goto nocar001
                      02514  
                      02515 
                      02516  bsf min_lower,7
                      02517 nocar001:
                      02518 
                      02519 
                      02520 
                      02521 
                      02522  incf ein1,f
                      02523 
                      02524 
                      02525  goto whi77
                      02526  
                      02527 
                      02528 eein2outw:      
                      02529 
                      02530  
                      02531  
                      02532  
                      02533  
                      02534  
                      02535  btfss rev,0 
                      02536  goto if_2_done 
                      02537 
                      02538 
                      02539 
                      02540  movf fulmin2,w
                      02541  xorwf fulmin,f
                      02542 
                      02543  movf fulmin,w
                      02544  xorwf fulmin2,f
                      02545 
                      02546  movf fulmin2,w
                      02547  xorwf fulmin,f 
                      02548  
                      02549  
                      02550  movfw min_lower 
                      02551  movwf min2_lower 
                      02552  
                      02553  clrf min_lower
                      02554  
                      02555  
                      02556  
                      02557  
                      02558  
                      02559 if_2_done: 
                      02560 
                      02561  banksel min_lower
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02562 
                      02563  
                      02564  
                      02565 
                      02566 nrev0:  
                      02567 
                      02568  btfss neg,0
                      02569  goto nextspeci0
                      02570  
                      02571 
                      02572  btfss neg,1
                      02573  goto nextspeci0
                      02574 
                      02575 
                      02576 
                      02577 
                      02578  bsf minres,0
                      02579 
                      02580  goto nextspeci2
                      02581 
                      02582  
                      02583  
                      02584  
                      02585  
                      02586 nextspeci0:
                      02587  
                      02588 
                      02589  btfss neg,0
                      02590  goto nextspeci1 
                      02591 
                      02592  
                      02593 rrrout0:
                      02594 
                      02595         
                      02596         
                      02597         
                      02598  movfw fulmin 
                      02599  subwf fulmin2,w 
                      02600  movwf mout 
                      02601  
                      02602  
                      02603  btfsc STATUS,C
                      02604  goto nc11rr            
                      02605                 
                      02606         
                      02607  bsf minres,0   
                      02608         
                      02609         
                      02610  goto rrrout1   
                      02611         
                      02612 nc11rr:
                      02613 
                      02614         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02615  movf mout,f
                      02616  btfsc STATUS,Z
                      02617  goto specidone0        
                      02618 mouty:
                      02619 
                      02620         
                      02621  btfsc mout,7   
                      02622  goto nn91   
                      02623         
                      02624         
                      02625     
                      02626  LSHIFT mout
                      02627  
                      02628         
                      02629  btfss min_lower,7      
                      02630  goto yym43   
                      02631 
                      02632  
                      02633  decf mout,f    
                      02634 
                      02635         
                      02636  movlw .255
                      02637  xorwf mout,w
                      02638  btfss STATUS,Z
                      02639  goto yym43     
                      02640         
                      02641      
                      02642  bsf minres,0
                      02643  
                      02644          
                      02645  goto rrrout1
                      02646          
                      02647 
                      02648 yym43:
                      02649 
                      02650    
                      02651  LSHIFT min_lower
                      02652  
                      02653         
                      02654  decf ein1,f    
                      02655 
                      02656         
                      02657  goto mouty
                      02658 
                      02659 nn91:
                      02660         
                      02661  btfss min_lower,7      
                      02662  goto trup5   
                      02663                 
                      02664         
                      02665  decf mout,f
                      02666 
                      02667         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02668  movlw .255
                      02669  xorwf mout,w
                      02670  btfss STATUS,Z
                      02671  goto fltu54    
                      02672                 
                      02673      
                      02674  bsf minres,0    
                      02675          
                      02676          
                      02677  goto rrrout1    
                      02678          
                      02679          
                      02680 fltu54:
                      02681         
                      02682  movlw .127
                      02683  xorwf mout,w
                      02684  btfss STATUS,Z
                      02685  goto trup5     
                      02686         
                      02687         
                      02688         
                      02689         
                      02690  LSHIFT mout
                      02691         
                      02692         
                      02693  decf ein1,f    
                      02694         
                      02695         
                      02696  btfsc min_lower,6
                      02697  goto trup5 
                      02698         
                      02699         
                      02700  incf mout,f    
                      02701         
                      02702 trup5:
                      02703         
                      02704  goto specidone0
                      02705 nextspeci1:
                      02706  
                      02707 
                      02708         
                      02709  btfss neg,1
                      02710  goto nextspeci2 
                      02711  
                      02712         
                      02713 rrrout1:
                      02714 
                      02715         
                      02716  movfw fulmin2
                      02717  subwf fulmin,w 
                      02718  movwf mout 
                      02719 
                      02720  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02721  btfsc STATUS,C
                      02722  goto rmxd3             
                      02723         
                      02724         
                      02725         
                      02726         
                      02727  bsf minres,0
                      02728         
                      02729         
                      02730  goto rrrout0   
                      02731 
                      02732 rmxd3:
                      02733 
                      02734         
                      02735  movf mout,f 
                      02736  btfsc STATUS,Z 
                      02737  goto specidone0 
                      02738         
                      02739 moutx:
                      02740 
                      02741         
                      02742  btfsc mout,7
                      02743  goto nn91b
                      02744  
                      02745         
                      02746         
                      02747     
                      02748  LSHIFT mout 
                      02749  
                      02750         
                      02751  btfss min2_lower,7
                      02752  goto spyr5
                      02753 
                      02754         
                      02755         
                      02756  decf mout,f    
                      02757         
                      02758         
                      02759  movlw .255
                      02760  xorwf mout,w
                      02761  btfss STATUS,Z
                      02762  goto spyr5     
                      02763         
                      02764 
                      02765  bsf minres,0
                      02766         
                      02767 
                      02768  goto rrrout0
                      02769         
                      02770 spyr5:
                      02771 
                      02772  
                      02773  LSHIFT min2_lower
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02774  
                      02775 
                      02776  decf ein1,f
                      02777    
                      02778         
                      02779  goto moutx     
                      02780 nn91b:
                      02781 
                      02782         
                      02783  btfss min2_lower,7
                      02784  goto cxaa
                      02785 
                      02786         
                      02787  decf mout,f    
                      02788         
                      02789         
                      02790  movlw .255
                      02791  xorwf mout,w
                      02792  btfss STATUS,Z
                      02793  goto iwrtt     
                      02794                 
                      02795         
                      02796  bsf minres,0
                      02797  
                      02798         
                      02799  goto rrrout0
                      02800 iwrtt:
                      02801 
                      02802 
                      02803         
                      02804  movlw .127
                      02805  xorwf mout,w
                      02806  btfss STATUS,Z
                      02807  goto cxaa      
                      02808                 
                      02809         
                      02810         
                      02811         
                      02812  LSHIFT mout
                      02813 
                      02814         
                      02815  decf ein1,f    
                      02816 
                      02817         
                      02818  btfsc min2_lower,6
                      02819  goto cxaa 
                      02820  
                      02821         
                      02822         
                      02823  incf mout,f    
                      02824         
                      02825 cxaa:
                      02826 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02827         
                      02828  goto specidone0
                      02829 
                      02830 tpc0lea:
                      02831          
                      02832  movfw fulmin
                      02833  subwf fulmin2,w 
                      02834  movwf mout 
                      02835          
                      02836          
                      02837          
                      02838      
                      02839  bsf minres,0    
                      02840         
                      02841  goto specidone0
                      02842 
                      02843         
                      02844 nextspeci2:
                      02845 
                      02846 
                      02847  
                      02848 
                      02849         
                      02850  clrf mout_hi
                      02851         
                      02852         
                      02853         
                      02854  movf fulmin,w
                      02855  addwf fulmin2,w
                      02856  movwf mout
                      02857         
                      02858         
                      02859 
                      02860         
                      02861  btfss STATUS,C 
                      02862  goto cxab                      
                      02863         
                      02864         
                      02865  incf mout_hi,f 
                      02866         
                      02867 cxab:
                      02868 
                      02869 
                      02870 
                      02871         
                      02872  movf min_lower,w
                      02873  addwf min2_lower,w
                      02874  btfsc STATUS,C
                      02875  goto bihhg   
                      02876  
                      02877 
                      02878         
                      02879         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02880  andlw .128     
                      02881  btfss STATUS,Z
                      02882  goto bihhg       
                      02883         
                      02884         
                      02885  goto bihh0     
                      02886         
                      02887 bihhg:
                      02888 
                      02889 
                      02890         
                      02891  incf mout,f    
                      02892         
                      02893         
                      02894  movf mout,f
                      02895  btfss STATUS,Z
                      02896  goto bihh0 
                      02897 
                      02898         
                      02899  incf mout_hi,f
                      02900 
                      02901 bihh0:
                      02902         
                      02903  movf mout_hi,f
                      02904  btfsc STATUS,Z
                      02905  goto specidone0 
                      02906 
                      02907         
                      02908         
                      02909         
                      02910         
                      02911  clrf big_c
                      02912  RSHIFT fulmin
                      02913  btfsc STATUS,C
                      02914  bsf big_c,0
                      02915         
                      02916         
                      02917  RSHIFT min_lower
                      02918 
                      02919         
                      02920         
                      02921  btfss big_c,0
                      02922  goto ddnyy
                      02923         
                      02924         
                      02925         
                      02926  bsf min_lower,7        
                      02927         
                      02928 ddnyy:
                      02929 
                      02930         
                      02931         
                      02932  clrf big_c
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02933  RSHIFT fulmin2
                      02934  btfsc STATUS,C
                      02935  bsf big_c,0
                      02936         
                      02937         
                      02938         
                      02939         
                      02940  RSHIFT min2_lower
                      02941         
                      02942         
                      02943         
                      02944  btfss big_c,0
                      02945  goto ddnzz
                      02946 
                      02947         
                      02948         
                      02949         
                      02950  bsf min_lower,7                
                      02951         
                      02952 ddnzz:
                      02953 
                      02954         
                      02955  incf ein1,f    
                      02956         
                      02957         
                      02958  goto nextspeci2
                      02959 
                      02960 
                      02961 specidone0:
                      02962 
                      02963  movfw mout 
                      02964  
                      02965  
                      02966  btfss STATUS,Z 
                      02967  goto nomoutzeer 
                      02968  
                      02969  
                      02970  
                      02971  movlw .0 
                      02972 
                      02973  PUSH
                      02974  
                      02975  
                      02976  
                      02977  movlw 0x80 
                      02978  PUSH
                      02979  
                      02980  
                      02981  
                      02982  goto re455tu
                      02983  
                      02984  
                      02985  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02986 nomoutzeer: 
                      02987  
                      02988  
                      02989  
                      02990  
                      02991  movfw mout
                      02992  addlw -.128 
                      02993  movwf mout 
                      02994 
                      02995  
                      02996  
                      02997  
                      02998  btfsc minres,0 
                      02999  bsf mout,7
                      03000  
                      03001  movfw mout 
                      03002  PUSH
                      03003  
                      03004  
                      03005  
                      03006  banksel min
                      03007  movfw ein1 
                      03008 
                      03009  PUSH
                      03010  
                      03011 re455tu:
                      03012  
                      03013  return 
                      03014 
                      03015  
                      03016 
                      03017 
                      03018 #undefine mout_hi
                      03019 
                      03020 
                      03021 #undefine big_c
                      03022 
                      03023 
                      03024 #undefine min2_lower
                      03025 
                      03026 
                      03027 #undefine minres
                      03028 
                      03029 
                      03030 #undefine fulmin2H
                      03031 
                      03032 
                      03033 #undefine fulminH
                      03034 
                      03035 
                      03036 #undefine min_lower
                      03037 
                      03038 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03039 #undefine rev
                      03040 
                      03041 
                      03042 #undefine fulmin2
                      03043 
                      03044 
                      03045 #undefine fulmin
                      03046 
                      03047 
                      03048 #undefine multiplier
                      03049 
                      03050 
                      03051 #undefine mout
                      03052 
                      03053 
                      03054 #undefine util
                      03055 
                      03056 
                      03057 #undefine neg
                      03058 
                      03059 
                      03060 #undefine ein2
                      03061 
                      03062 
                      03063 #undefine min2
                      03064 
                      03065 
                      03066 #undefine ein1
                      03067 
                      03068 
                      03069 #undefine min
                      03070 
                      03071 
                      03072 #define mout_hi sfploc00+1
                      03073 
                      03074 
                      03075 #define big_c sfploc01+1
                      03076 
                      03077 
                      03078 #define min2_lower sfploc02+1
                      03079 
                      03080 
                      03081 #define minres sfploc03+1
                      03082 
                      03083 
                      03084 #define fulmin2H sfploc04+1
                      03085 
                      03086 
                      03087 #define fulminH sfploc05+1
                      03088 
                      03089 
                      03090 #define min_lower sfploc06+1
                      03091 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03092 
                      03093 #define rev sfploc07+1
                      03094 
                      03095 
                      03096 #define fulmin2 sfploc08+1
                      03097 
                      03098 
                      03099 #define fulmin sfploc09+1
                      03100 
                      03101 
                      03102 #define multiplier sfploc10+1
                      03103 
                      03104 
                      03105 #define mout sfploc11+1
                      03106 
                      03107 
                      03108 #define util sfploc12+1
                      03109 
                      03110 
                      03111 #define neg sfploc13+1
                      03112 
                      03113 
                      03114 #define ein2 sfploc14+1
                      03115 
                      03116 
                      03117 #define min2 sfploc15+1
                      03118 
                      03119 
                      03120 #define ein1 sfploc16+1
                      03121 
                      03122 
                      03123 #define min sfploc17+1
                      03124 
                      03125 
                      03126 addf0:
                      03127 #endif
                      03128 #endif
                      03129 
                      03130 
                      03131  
                      03132  
                      03133  
                      03134  
                      03135  
                      03136  
                      03137  
                      03138  
                      03139  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      03140  banksel min
0004   00??           03141  movwf ein2 
                      03142  POP
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   ???? ????      03143  banksel min
0009   00??           03144  movwf min2 
                      03145 
                      03146  POP
000A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000B   0384               M  decf FSR,f 
000C   ???? ????      03147  banksel min
000E   00??           03148  movwf ein1 
                      03149 
                      03150  POP
000F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0010   0384               M  decf FSR,f 
0011   ???? ????      03151  banksel min
0013   00??           03152  movwf min 
                      03153  
                      03154  
                      03155  
                      03156  
0014   1000           03157  bcf minres,0 
                      03158  
                      03159  
                      03160  
0015   01??           03161  clrf mout 
                      03162  
                      03163  
                      03164  
                      03165  
                      03166  
0016   01??           03167  clrf neg
0017   1B80           03168  btfsc min,7
0018   1400           03169  bsf neg,0
                      03170  
                      03171  
                      03172  
0019   1B80           03173  btfsc min2,7
001A   1480           03174  bsf neg,1
                      03175  
                      03176 
                      03177 
                      03178 
001B   1B80           03179  btfsc ein2,7  
001C   2???           03180  goto hllVAAAA
                      03181  
001D   1F80           03182  btfss ein1,7
001E   2???           03183  goto hllTAAAA
                      03184  
001F   2???           03185  goto hllXAAAA
0020                  03186 hllTAAAA: 
                      03187  
0020   08??           03188  movfw ein1
0021   02??           03189  subwf ein2,w    
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   1C03           03190  btfss STATUS,C 
0023   2???           03191  goto hllWAAAA  
0024                  03192 hllUAAAA:
0024   2???           03193  goto hllXAAAA  
0025                  03194 hllVAAAA:   
                      03195  
                      03196  
0025   1B80           03197  btfsc ein1,7
0026   2???           03198  goto hllTAAAA  
0027                  03199 hllWAAAA:  
                      03200  
                      03201  
                      03202 
                      03203 
0027   08??           03204  movf ein2,w
0028   06??           03205  xorwf ein1,f
                      03206 
0029   08??           03207  movf ein1,w
002A   06??           03208  xorwf ein2,f
                      03209 
002B   08??           03210  movf ein2,w
002C   06??           03211  xorwf ein1,f
                      03212 
                      03213 
002D   08??           03214  movf min2,w
002E   06??           03215  xorwf min,f
                      03216 
002F   08??           03217  movf min,w
0030   06??           03218  xorwf min2,f
                      03219 
0031   08??           03220  movf min2,w
0032   06??           03221  xorwf min,f
                      03222  
                      03223  
                      03224  
0033   1400           03225  bsf rev,0 
                      03226  
                      03227  
                      03228  
0034   2???           03229  goto hllXAAAA_done 
0035                  03230 hllXAAAA: 
                      03231  
                      03232  
                      03233  
0035   01??           03234  clrf rev 
0036                  03235 hllXAAAA_done: 
                      03236  
                      03237  
                      03238  
                      03239  
0036   08??           03240  movfw min 
0037   397F           03241  andlw .127 
0038   00??           03242  movwf min 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03243  
                      03244  
                      03245  
0039   08??           03246  movfw min2 
003A   397F           03247  andlw .127 
003B   00??           03248  movwf min2 
                      03249  
                      03250  
                      03251  
003C   01??           03252  clrf fulminH 
003D   08??           03253  movfw min 
003E   3E80           03254  addlw .128 
003F   1803           03255  btfsc STATUS,C 
0040   0A??           03256  incf fulminH,f 
                      03257  
                      03258  
0041   00??           03259  movwf fulmin 
                      03260  
                      03261  
                      03262  
0042   01??           03263  clrf fulmin2H 
0043   08??           03264  movfw min2 
0044   3E80           03265  addlw .128 
0045   1803           03266  btfsc STATUS,C 
0046   0A??           03267  incf fulmin2H,f 
                      03268  
0047   00??           03269  movwf fulmin2 
                      03270  
                      03271         
                      03272         
                      03273         
                      03274         
                      03275         
                      03276 
                      03277 
0048   01??           03278  clrf min_lower
                      03279 
0049   01??           03280  clrf min2_lower
                      03281  
004A                  03282 hllZAAAA:
                      03283 
                      03284 
004A   08??           03285  movfw ein1 
004B   06??           03286  xorwf ein2,w 
004C   1903           03287  btfsc STATUS,Z 
004D   2???           03288  goto hllBBAAA  
                      03289  
                      03290 
                      03291 
                      03292  RSHIFT min_lower
004E   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
004F   0C??               M  rrf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03293  
                      03294 
                      03295 
                      03296  RSHIFT fulmin
0050   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0051   0C??               M  rrf sfploc09,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03297  
                      03298 
0052   1C03           03299  btfss STATUS,C
0053   2???           03300  goto hllABAAA
                      03301  
                      03302 
0054   1780           03303  bsf min_lower,7
0055                  03304 hllABAAA:
                      03305 
                      03306 
                      03307 
                      03308 
0055   0A??           03309  incf ein1,f
                      03310 
                      03311 
0056   2???           03312  goto hllZAAAA
                      03313  
                      03314 
0057                  03315 hllBBAAA:       
                      03316 
                      03317  
                      03318  
                      03319  
                      03320  
                      03321  
0057   1C00           03322  btfss rev,0 
0058   2???           03323  goto hllCBAAA 
                      03324 
                      03325 
                      03326 
0059   08??           03327  movf fulmin2,w
005A   06??           03328  xorwf fulmin,f
                      03329 
005B   08??           03330  movf fulmin,w
005C   06??           03331  xorwf fulmin2,f
                      03332 
005D   08??           03333  movf fulmin2,w
005E   06??           03334  xorwf fulmin,f 
                      03335  
                      03336  
005F   08??           03337  movfw min_lower 
0060   00??           03338  movwf min2_lower 
                      03339  
0061   01??           03340  clrf min_lower
                      03341  
                      03342  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03343  
                      03344  
                      03345  
0062                  03346 hllCBAAA: 
                      03347 
0062   ???? ????      03348  banksel min_lower
                      03349 
                      03350  
                      03351  
                      03352 
0064                  03353 hllDBAAA:       
                      03354 
0064   1C00           03355  btfss neg,0
0065   2???           03356  goto hllEBAAA
                      03357  
                      03358 
0066   1C80           03359  btfss neg,1
0067   2???           03360  goto hllEBAAA
                      03361 
                      03362 
                      03363 
                      03364 
0068   1400           03365  bsf minres,0
                      03366 
0069   2???           03367  goto hllVBAAA
                      03368 
                      03369  
                      03370  
                      03371  
                      03372  
006A                  03373 hllEBAAA:
                      03374  
                      03375 
006A   1C00           03376  btfss neg,0
006B   2???           03377  goto hllMBAAA 
                      03378 
                      03379  
006C                  03380 hllFBAAA:
                      03381 
                      03382         
                      03383         
                      03384         
006C   08??           03385  movfw fulmin 
006D   02??           03386  subwf fulmin2,w 
006E   00??           03387  movwf mout 
                      03388  
                      03389  
006F   1803           03390  btfsc STATUS,C
0070   2???           03391  goto hllGBAAA          
                      03392                 
                      03393         
0071   1400           03394  bsf minres,0   
                      03395         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03396         
0072   2???           03397  goto hllNBAAA  
                      03398         
0073                  03399 hllGBAAA:
                      03400 
                      03401         
0073   08??           03402  movf mout,f
0074   1903           03403  btfsc STATUS,Z
0075   2???           03404  goto hllBCAAA  
0076                  03405 hllHBAAA:
                      03406 
                      03407         
0076   1B80           03408  btfsc mout,7   
0077   2???           03409  goto hllJBAAA   
                      03410         
                      03411         
                      03412     
                      03413  LSHIFT mout
0078   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0079   0D??               M  rlf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03414  
                      03415         
007A   1F80           03416  btfss min_lower,7      
007B   2???           03417  goto hllIBAAA   
                      03418 
                      03419  
007C   03??           03420  decf mout,f    
                      03421 
                      03422         
007D   30FF           03423  movlw .255
007E   06??           03424  xorwf mout,w
007F   1D03           03425  btfss STATUS,Z
0080   2???           03426  goto hllIBAAA  
                      03427         
                      03428      
0081   1400           03429  bsf minres,0
                      03430  
                      03431          
0082   2???           03432  goto hllNBAAA
                      03433          
                      03434 
0083                  03435 hllIBAAA:
                      03436 
                      03437    
                      03438  LSHIFT min_lower
0083   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0084   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03439  
                      03440         
0085   03??           03441  decf ein1,f    
                      03442 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03443         
0086   2???           03444  goto hllHBAAA
                      03445 
0087                  03446 hllJBAAA:
                      03447         
0087   1F80           03448  btfss min_lower,7      
0088   2???           03449  goto hllLBAAA   
                      03450                 
                      03451         
0089   03??           03452  decf mout,f
                      03453 
                      03454         
008A   30FF           03455  movlw .255
008B   06??           03456  xorwf mout,w
008C   1D03           03457  btfss STATUS,Z
008D   2???           03458  goto hllKBAAA  
                      03459                 
                      03460      
008E   1400           03461  bsf minres,0    
                      03462          
                      03463          
008F   2???           03464  goto hllNBAAA   
                      03465          
                      03466          
0090                  03467 hllKBAAA:
                      03468         
0090   307F           03469  movlw .127
0091   06??           03470  xorwf mout,w
0092   1D03           03471  btfss STATUS,Z
0093   2???           03472  goto hllLBAAA  
                      03473         
                      03474         
                      03475         
                      03476         
                      03477  LSHIFT mout
0094   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0095   0D??               M  rlf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03478         
                      03479         
0096   03??           03480  decf ein1,f    
                      03481         
                      03482         
0097   1B00           03483  btfsc min_lower,6
0098   2???           03484  goto hllLBAAA 
                      03485         
                      03486         
0099   0A??           03487  incf mout,f    
                      03488         
009A                  03489 hllLBAAA:
                      03490         
009A   2???           03491  goto hllBCAAA
009B                  03492 hllMBAAA:
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03493  
                      03494 
                      03495         
009B   1C80           03496  btfss neg,1
009C   2???           03497  goto hllVBAAA 
                      03498  
                      03499         
009D                  03500 hllNBAAA:
                      03501 
                      03502         
009D   08??           03503  movfw fulmin2
009E   02??           03504  subwf fulmin,w 
009F   00??           03505  movwf mout 
                      03506 
                      03507  
00A0   1803           03508  btfsc STATUS,C
00A1   2???           03509  goto hllOBAAA          
                      03510         
                      03511         
                      03512         
                      03513         
00A2   1400           03514  bsf minres,0
                      03515         
                      03516         
00A3   2???           03517  goto hllFBAAA  
                      03518 
00A4                  03519 hllOBAAA:
                      03520 
                      03521         
00A4   08??           03522  movf mout,f 
00A5   1903           03523  btfsc STATUS,Z 
00A6   2???           03524  goto hllBCAAA 
                      03525         
00A7                  03526 hllPBAAA:
                      03527 
                      03528         
00A7   1B80           03529  btfsc mout,7
00A8   2???           03530  goto hllJBAAAb
                      03531  
                      03532         
                      03533         
                      03534     
                      03535  LSHIFT mout 
00A9   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00AA   0D??               M  rlf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03536  
                      03537         
00AB   1F80           03538  btfss min2_lower,7
00AC   2???           03539  goto hllQBAAA
                      03540 
                      03541         
                      03542         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AD   03??           03543  decf mout,f    
                      03544         
                      03545         
00AE   30FF           03546  movlw .255
00AF   06??           03547  xorwf mout,w
00B0   1D03           03548  btfss STATUS,Z
00B1   2???           03549  goto hllQBAAA  
                      03550         
                      03551 
00B2   1400           03552  bsf minres,0
                      03553         
                      03554 
00B3   2???           03555  goto hllFBAAA
                      03556         
00B4                  03557 hllQBAAA:
                      03558 
                      03559  
                      03560  LSHIFT min2_lower
00B4   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00B5   0D??               M  rlf sfploc02,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03561  
                      03562 
00B6   03??           03563  decf ein1,f
                      03564    
                      03565         
00B7   2???           03566  goto hllPBAAA  
00B8                  03567 hllJBAAAb:
                      03568 
                      03569         
00B8   1F80           03570  btfss min2_lower,7
00B9   2???           03571  goto hllTBAAA
                      03572 
                      03573         
00BA   03??           03574  decf mout,f    
                      03575         
                      03576         
00BB   30FF           03577  movlw .255
00BC   06??           03578  xorwf mout,w
00BD   1D03           03579  btfss STATUS,Z
00BE   2???           03580  goto hllSBAAA  
                      03581                 
                      03582         
00BF   1400           03583  bsf minres,0
                      03584  
                      03585         
00C0   2???           03586  goto hllFBAAA
00C1                  03587 hllSBAAA:
                      03588 
                      03589 
                      03590         
00C1   307F           03591  movlw .127
00C2   06??           03592  xorwf mout,w
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C3   1D03           03593  btfss STATUS,Z
00C4   2???           03594  goto hllTBAAA  
                      03595                 
                      03596         
                      03597         
                      03598         
                      03599  LSHIFT mout
00C5   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00C6   0D??               M  rlf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03600 
                      03601         
00C7   03??           03602  decf ein1,f    
                      03603 
                      03604         
00C8   1B00           03605  btfsc min2_lower,6
00C9   2???           03606  goto hllTBAAA 
                      03607  
                      03608         
                      03609         
00CA   0A??           03610  incf mout,f    
                      03611         
00CB                  03612 hllTBAAA:
                      03613 
                      03614         
00CB   2???           03615  goto hllBCAAA
                      03616 
00CC                  03617 hllUBAAA:
                      03618          
00CC   08??           03619  movfw fulmin
00CD   02??           03620  subwf fulmin2,w 
00CE   00??           03621  movwf mout 
                      03622          
                      03623          
                      03624          
                      03625      
00CF   1400           03626  bsf minres,0    
                      03627         
00D0   2???           03628  goto hllBCAAA
                      03629 
                      03630         
00D1                  03631 hllVBAAA:
                      03632 
                      03633 
                      03634  
                      03635 
                      03636         
00D1   01??           03637  clrf mout_hi
                      03638         
                      03639         
                      03640         
00D2   08??           03641  movf fulmin,w
00D3   07??           03642  addwf fulmin2,w
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D4   00??           03643  movwf mout
                      03644         
                      03645         
                      03646 
                      03647         
00D5   1C03           03648  btfss STATUS,C 
00D6   2???           03649  goto hllWBAAA                  
                      03650         
                      03651         
00D7   0A??           03652  incf mout_hi,f 
                      03653         
00D8                  03654 hllWBAAA:
                      03655 
                      03656 
                      03657 
                      03658         
00D8   08??           03659  movf min_lower,w
00D9   07??           03660  addwf min2_lower,w
00DA   1803           03661  btfsc STATUS,C
00DB   2???           03662  goto hllXBAAA   
                      03663  
                      03664 
                      03665         
                      03666         
00DC   3980           03667  andlw .128     
00DD   1D03           03668  btfss STATUS,Z
00DE   2???           03669  goto hllXBAAA    
                      03670         
                      03671         
00DF   2???           03672  goto hllYBAAA  
                      03673         
00E0                  03674 hllXBAAA:
                      03675 
                      03676 
                      03677         
00E0   0A??           03678  incf mout,f    
                      03679         
                      03680         
00E1   08??           03681  movf mout,f
00E2   1D03           03682  btfss STATUS,Z
00E3   2???           03683  goto hllYBAAA 
                      03684 
                      03685         
00E4   0A??           03686  incf mout_hi,f
                      03687 
00E5                  03688 hllYBAAA:
                      03689         
00E5   08??           03690  movf mout_hi,f
00E6   1903           03691  btfsc STATUS,Z
00E7   2???           03692  goto hllBCAAA 
                      03693 
                      03694         
                      03695         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03696         
                      03697         
00E8   01??           03698  clrf big_c
                      03699  RSHIFT fulmin
00E9   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00EA   0C??               M  rrf sfploc09,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
00EB   1803           03700  btfsc STATUS,C
00EC   1400           03701  bsf big_c,0
                      03702         
                      03703         
                      03704  RSHIFT min_lower
00ED   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00EE   0C??               M  rrf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03705 
                      03706         
                      03707         
00EF   1C00           03708  btfss big_c,0
00F0   2???           03709  goto hllZBAAA
                      03710         
                      03711         
                      03712         
00F1   1780           03713  bsf min_lower,7        
                      03714         
00F2                  03715 hllZBAAA:
                      03716 
                      03717         
                      03718         
00F2   01??           03719  clrf big_c
                      03720  RSHIFT fulmin2
00F3   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00F4   0C??               M  rrf sfploc08,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
00F5   1803           03721  btfsc STATUS,C
00F6   1400           03722  bsf big_c,0
                      03723         
                      03724         
                      03725         
                      03726         
                      03727  RSHIFT min2_lower
00F7   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00F8   0C??               M  rrf sfploc02,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      03728         
                      03729         
                      03730         
00F9   1C00           03731  btfss big_c,0
00FA   2???           03732  goto hllACAAA
                      03733 
                      03734         
                      03735         
                      03736         
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FB   1780           03737  bsf min_lower,7                
                      03738         
00FC                  03739 hllACAAA:
                      03740 
                      03741         
00FC   0A??           03742  incf ein1,f    
                      03743         
                      03744         
00FD   2???           03745  goto hllVBAAA
                      03746 
                      03747 
00FE                  03748 hllBCAAA:
                      03749 
00FE   08??           03750  movfw mout 
                      03751  
                      03752  
00FF   1D03           03753  btfss STATUS,Z 
0100   2???           03754  goto hllCCAAA 
                      03755  
                      03756  
                      03757  
0101   3000           03758  movlw .0 
                      03759 
                      03760  PUSH
0102   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0103   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03761  
                      03762  
                      03763  
0104   3080           03764  movlw 0x80 
                      03765  PUSH
0105   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0106   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03766  
                      03767  
                      03768  
0107   2???           03769  goto hllDCAAA
                      03770  
                      03771  
                      03772  
0108                  03773 hllCCAAA: 
                      03774  
                      03775  
                      03776  
                      03777  
0108   08??           03778  movfw mout
0109   3E80           03779  addlw -.128 
010A   00??           03780  movwf mout 
                      03781 
                      03782  
                      03783  
                      03784  
010B   1800           03785  btfsc minres,0 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

010C   1780           03786  bsf mout,7
                      03787  
010D   08??           03788  movfw mout 
                      03789  PUSH
010E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
010F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03790  
                      03791  
                      03792  
0110   ???? ????      03793  banksel min
0112   08??           03794  movfw ein1 
                      03795 
                      03796  PUSH
0113   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0114   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03797  
0115                  03798 hllDCAAA:
                      03799  
0115   0008           03800  return 
                      03801 
                      03802  
                      03803 
                      03804 
                      03805 #undefine mout_hi
                      03806 
                      03807 
                      03808 #undefine big_c
                      03809 
                      03810 
                      03811 #undefine min2_lower
                      03812 
                      03813 
                      03814 #undefine minres
                      03815 
                      03816 
                      03817 #undefine fulmin2H
                      03818 
                      03819 
                      03820 #undefine fulminH
                      03821 
                      03822 
                      03823 #undefine min_lower
                      03824 
                      03825 
                      03826 #undefine rev
                      03827 
                      03828 
                      03829 #undefine fulmin2
                      03830 
                      03831 
                      03832 #undefine fulmin
                      03833 
                      03834 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03835 #undefine multiplier
                      03836 
                      03837 
                      03838 #undefine mout
                      03839 
                      03840 
                      03841 #undefine util
                      03842 
                      03843 
                      03844 #undefine neg
                      03845 
                      03846 
                      03847 #undefine ein2
                      03848 
                      03849 
                      03850 #undefine min2
                      03851 
                      03852 
                      03853 #undefine ein1
                      03854 
                      03855 
                      03856 #undefine min
                      03857 
                      03858 
                      03859 
                      03860 
                      03861 
                      03862 
                      03863 
                      03864 
                      03865 
                      03866 
                      03867 
                      03868   
                      03869  
                      03870 
                      03871 sfp_div CODE 
                      03872 
                      03873 
                      03874 #define rounded sfploc00
                      03875 
                      03876 
                      03877 #define big_c sfploc01
                      03878 
                      03879 
                      03880 #define a_hi_msb sfploc02
                      03881 
                      03882 
                      03883 #define loop_count sfploc03
                      03884 
                      03885 
                      03886 #define run_total sfploc04
                      03887 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03888 
                      03889 #define min2_lower sfploc05
                      03890 
                      03891 
                      03892 #define subtrahend sfploc06
                      03893 
                      03894 
                      03895 #define quotient_lo sfploc07
                      03896 
                      03897 
                      03898 #define term sfploc08
                      03899 
                      03900 
                      03901 #define exam sfploc09
                      03902 
                      03903 
                      03904 #define multiplier sfploc10
                      03905 
                      03906 
                      03907 #define mout sfploc11
                      03908 
                      03909 
                      03910 #define util sfploc12
                      03911 
                      03912 
                      03913 #define neg sfploc13
                      03914 
                      03915 
                      03916 #define ein2 sfploc14
                      03917 
                      03918 
                      03919 #define min2 sfploc15
                      03920 
                      03921 
                      03922 #define ein sfploc16
                      03923 
                      03924 
                      03925 #define min sfploc17
                      03926 
                      03927 
0000                  03928 divf:  
                      03929 #ifdef HLLMULTITASK
                      03930 #ifdef HLLGUARDsfploc 
                      03931  movf in_isr,f  
                      03932  btfsc STATUS,Z
                      03933  
                      03934 
                      03935 
                      03936  goto divf0
                      03937 
                      03938 
                      03939 
                      03940 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03941 
                      03942 
                      03943 
                      03944 
                      03945 
                      03946 
                      03947 
                      03948 
                      03949 
                      03950 
                      03951 
                      03952  POP
                      03953 
                      03954  banksel min
                      03955  movwf ein2 
                      03956  clrf neg 
                      03957 
                      03958 
                      03959  POP
                      03960 
                      03961  banksel min
                      03962  movwf min2 
                      03963  btfsc min2,7
                      03964  bsf neg,1
                      03965  bcf min2,7 
                      03966 
                      03967  POP
                      03968 
                      03969  banksel min
                      03970  movwf ein 
                      03971 
                      03972  POP
                      03973 
                      03974  banksel min
                      03975  movwf min 
                      03976  btfsc min,7
                      03977  bsf neg,0 
                      03978  bcf min,7 
                      03979  movfw ein 
                      03980  movwf util 
                      03981  movfw ein2 
                      03982  subwf util,f 
                      03983 
                      03984  clrf exam 
                      03985 
                      03986  
                      03987  movfw min 
                      03988  addlw .128 
                      03989  movwf min 
                      03990 
                      03991  movfw min2 
                      03992  addlw .128 
                      03993  movwf min2 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03994 
                      03995  
                      03996  
                      03997 
                      03998  
                      03999  movwf term 
                      04000 
                      04001 
                      04002 
                      04003 
                      04004  clrf quotient_lo
                      04005 
                      04006 
                      04007  clrf subtrahend
                      04008 
                      04009 
                      04010  clrf min2_lower
                      04011 
                      04012 
                      04013  clrf run_total
                      04014 
                      04015 
                      04016  clrf loop_count
                      04017 
                      04018 f4tp:
                      04019 
                      04020  movf loop_count,w
                      04021  xorlw .16
                      04022  btfsc STATUS,Z
                      04023  goto f4dn
                      04024 
                      04025 
                      04026  movf min,w
                      04027  andlw .128
                      04028  movwf a_hi_msb
                      04029  
                      04030 
                      04031  LSHIFT min2_lower
                      04032 
                      04033 
                      04034 
                      04035  LSHIFT run_total
                      04036 
                      04037 
                      04038  btfss STATUS,C
                      04039  goto que4
                      04040 
                      04041 
                      04042  incf min2_lower,f
                      04043 
                      04044 que4:
                      04045 
                      04046 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04047  LSHIFT min
                      04048 
                      04049 
                      04050 
                      04051  LSHIFT quotient_lo
                      04052 
                      04053 
                      04054  btfsc STATUS,C
                      04055 
                      04056 
                      04057 
                      04058  incf min,f
                      04059 
                      04060 
                      04061  movf a_hi_msb,f
                      04062  btfsc STATUS,Z
                      04063  goto nry4
                      04064 
                      04065 
                      04066  incf run_total,f
                      04067 
                      04068 
                      04069  btfsc STATUS,Z
                      04070  incf min2_lower,f
                      04071 
                      04072 nry4:
                      04073 
                      04074 
                      04075  clrf big_c 
                      04076  movfw min2
                      04077  subwf run_total,w 
                      04078  btfss STATUS,C 
                      04079  bsf big_c,0 
                      04080 
                      04081 
                      04082  movf subtrahend,w
                      04083  subwf min2_lower,f 
                      04084 
                      04085 
                      04086  movf min2,w
                      04087  subwf run_total,f
                      04088 
                      04089 
                      04090  btfsc big_c,0 
                      04091  decf min2_lower,f
                      04092 
                      04093 
                      04094  btfss min2_lower,7
                      04095  goto ga4g0
                      04096 
                      04097 
                      04098 
                      04099  movf min2,w
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04100  addwf run_total,w
                      04101  clrf big_c
                      04102  btfsc STATUS,C
                      04103  bsf big_c,0
                      04104 
                      04105 
                      04106  movf subtrahend,w
                      04107  addwf min2_lower,f
                      04108 
                      04109 
                      04110  movf min2,w
                      04111  addwf run_total,f
                      04112 
                      04113 
                      04114 
                      04115  btfsc big_c,0 
                      04116  incf min2_lower,f
                      04117 
                      04118 
                      04119 
                      04120  movlw .254
                      04121  andwf quotient_lo,f
                      04122 
                      04123 
                      04124  goto ga5g0
                      04125 ga4g0:
                      04126 
                      04127 
                      04128  movlw .1
                      04129  iorwf quotient_lo,f
                      04130 ga5g0:
                      04131 
                      04132 
                      04133 
                      04134  incf loop_count,f
                      04135 
                      04136 
                      04137  goto f4tp
                      04138 
                      04139 f4dn:
                      04140 
                      04141 
                      04142  movf quotient_lo,w
                      04143  movwf mout
                      04144 
                      04145 
                      04146  clrf multiplier
                      04147  btfsc min,0
                      04148  bsf multiplier,0
                      04149 
                      04150  
                      04151  RSHIFT term
                      04152  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04153  clrf rounded
                      04154  movfw run_total
                      04155  subwf term,w    
                      04156  btfsc STATUS,C 
                      04157  goto fr9rh   
                      04158  incf mout,f 
                      04159  bsf rounded,0 
                      04160  
                      04161 fr9rh:
                      04162  
                      04163 
                      04164 
                      04165  movf multiplier,f
                      04166  btfsc STATUS,Z
                      04167  goto notmult0
                      04168  
                      04169 
                      04170 
                      04171 
                      04172 
                      04173  
                      04174  btfss mout,0
                      04175  goto prpg1
                      04176 
                      04177  
                      04178  btfsc rounded,0
                      04179  goto prpg1
                      04180  
                      04181  
                      04182 
                      04183  RSHIFT mout
                      04184  
                      04185 
                      04186  incf mout,f
                      04187 
                      04188 
                      04189  goto prpgm
                      04190 
                      04191 prpg1:
                      04192 
                      04193 
                      04194  RSHIFT mout
                      04195  
                      04196 prpgm:
                      04197 
                      04198 
                      04199  bsf mout,7
                      04200 
                      04201  goto notmult1
                      04202 notmult0:
                      04203  decf util,f 
                      04204 notmult1:
                      04205  movfw mout 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04206 
                      04207 retrydvif1: 
                      04208 
                      04209   addlw -.128 
                      04210   movwf exam 
                      04211   btfss exam,7 
                      04212   goto nodivfcarr2 
                      04213   addlw .128    
                      04214 
                      04215  
                      04216  decf util,f 
                      04217 
                      04218  
                      04219  LSHIFT mout
                      04220  movfw mout 
                      04221  goto retrydvif1 
                      04222 
                      04223 nodivfcarr2: 
                      04224 
                      04225 
                      04226  movwf mout
                      04227 
                      04228 
                      04229 
                      04230  
                      04231  
                      04232  btfsc neg,0
                      04233  goto ita33nq 
                      04234  btfss neg,1
                      04235  goto div_sames 
                      04236  goto div_dif5 
                      04237 ita33nq: 
                      04238  btfsc neg,1
                      04239  goto div_sames 
                      04240 
                      04241 div_dif5: 
                      04242 
                      04243  
                      04244  
                      04245  
                      04246  
                      04247  movfw mout 
                      04248  iorlw .128 
                      04249  movwf mout 
                      04250  
                      04251 
                      04252 div_sames: 
                      04253  movfw mout 
                      04254  PUSH
                      04255  banksel min
                      04256  movfw util 
                      04257  PUSH
                      04258  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04259  return 
                      04260 
                      04261  
                      04262  
                      04263 
                      04264 
                      04265 #undefine rounded
                      04266 
                      04267 
                      04268 #undefine big_c
                      04269 
                      04270 
                      04271 #undefine a_hi_msb
                      04272 
                      04273 
                      04274 #undefine loop_count
                      04275 
                      04276 
                      04277 #undefine run_total
                      04278 
                      04279 
                      04280 #undefine min2_lower
                      04281 
                      04282 
                      04283 #undefine subtrahend
                      04284 
                      04285 
                      04286 #undefine quotient_lo
                      04287 
                      04288 
                      04289 #undefine term
                      04290 
                      04291 
                      04292 #undefine exam
                      04293 
                      04294 
                      04295 #undefine multiplier
                      04296 
                      04297 
                      04298 #undefine mout
                      04299 
                      04300 
                      04301 #undefine util
                      04302 
                      04303 
                      04304 #undefine neg
                      04305 
                      04306 
                      04307 #undefine ein2
                      04308 
                      04309 
                      04310 #undefine min2
                      04311 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04312 
                      04313 #undefine ein
                      04314 
                      04315 
                      04316 #undefine min
                      04317 
                      04318 
                      04319 #define rounded sfploc00+1
                      04320 
                      04321 
                      04322 #define big_c sfploc01+1
                      04323 
                      04324 
                      04325 #define a_hi_msb sfploc02+1
                      04326 
                      04327 
                      04328 #define loop_count sfploc03+1
                      04329 
                      04330 
                      04331 #define run_total sfploc04+1
                      04332 
                      04333 
                      04334 #define min2_lower sfploc05+1
                      04335 
                      04336 
                      04337 #define subtrahend sfploc06+1
                      04338 
                      04339 
                      04340 #define quotient_lo sfploc07+1
                      04341 
                      04342 
                      04343 #define term sfploc08+1
                      04344 
                      04345 
                      04346 #define exam sfploc09+1
                      04347 
                      04348 
                      04349 #define multiplier sfploc10+1
                      04350 
                      04351 
                      04352 #define mout sfploc11+1
                      04353 
                      04354 
                      04355 #define util sfploc12+1
                      04356 
                      04357 
                      04358 #define neg sfploc13+1
                      04359 
                      04360 
                      04361 #define ein2 sfploc14+1
                      04362 
                      04363 
                      04364 #define min2 sfploc15+1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04365 
                      04366 
                      04367 #define ein sfploc16+1
                      04368 
                      04369 
                      04370 #define min sfploc17+1
                      04371 
                      04372 
                      04373 divf0:
                      04374 #endif
                      04375 #endif
                      04376 
                      04377 
                      04378 
                      04379 
                      04380 
                      04381 
                      04382 
                      04383 
                      04384 
                      04385 
                      04386 
                      04387 
                      04388 
                      04389 
                      04390 
                      04391  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      04392 
0002   ???? ????      04393  banksel min
0004   00??           04394  movwf ein2 
0005   01??           04395  clrf neg 
                      04396 
                      04397 
                      04398  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
                      04399 
0008   ???? ????      04400  banksel min
000A   00??           04401  movwf min2 
000B   1B80           04402  btfsc min2,7
000C   1480           04403  bsf neg,1
000D   1380           04404  bcf min2,7 
                      04405 
                      04406  POP
000E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000F   0384               M  decf FSR,f 
                      04407 
0010   ???? ????      04408  banksel min
0012   00??           04409  movwf ein 
                      04410 
                      04411  POP
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0014   0384               M  decf FSR,f 
                      04412 
0015   ???? ????      04413  banksel min
0017   00??           04414  movwf min 
0018   1B80           04415  btfsc min,7
0019   1400           04416  bsf neg,0 
001A   1380           04417  bcf min,7 
001B   08??           04418  movfw ein 
001C   00??           04419  movwf util 
001D   08??           04420  movfw ein2 
001E   02??           04421  subwf util,f 
                      04422 
001F   01??           04423  clrf exam 
                      04424 
                      04425  
0020   08??           04426  movfw min 
0021   3E80           04427  addlw .128 
0022   00??           04428  movwf min 
                      04429 
0023   08??           04430  movfw min2 
0024   3E80           04431  addlw .128 
0025   00??           04432  movwf min2 
                      04433 
                      04434  
                      04435  
                      04436 
                      04437  
0026   00??           04438  movwf term 
                      04439 
                      04440 
                      04441 
                      04442 
0027   01??           04443  clrf quotient_lo
                      04444 
                      04445 
0028   01??           04446  clrf subtrahend
                      04447 
                      04448 
0029   01??           04449  clrf min2_lower
                      04450 
                      04451 
002A   01??           04452  clrf run_total
                      04453 
                      04454 
002B   01??           04455  clrf loop_count
                      04456 
002C                  04457 hllECAAA:
                      04458 
002C   08??           04459  movf loop_count,w
002D   3A10           04460  xorlw .16
002E   1903           04461  btfsc STATUS,Z
002F   2???           04462  goto hllJCAAA
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04463 
                      04464 
0030   08??           04465  movf min,w
0031   3980           04466  andlw .128
0032   00??           04467  movwf a_hi_msb
                      04468  
                      04469 
                      04470  LSHIFT min2_lower
0033   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0034   0D??               M  rlf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04471 
                      04472 
                      04473 
                      04474  LSHIFT run_total
0035   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0036   0D??               M  rlf sfploc04,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04475 
                      04476 
0037   1C03           04477  btfss STATUS,C
0038   2???           04478  goto hllFCAAA
                      04479 
                      04480 
0039   0A??           04481  incf min2_lower,f
                      04482 
003A                  04483 hllFCAAA:
                      04484 
                      04485 
                      04486  LSHIFT min
003A   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
003B   0D??               M  rlf sfploc17,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04487 
                      04488 
                      04489 
                      04490  LSHIFT quotient_lo
003C   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
003D   0D??               M  rlf sfploc07,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04491 
                      04492 
003E   1803           04493  btfsc STATUS,C
                      04494 
                      04495 
                      04496 
003F   0A??           04497  incf min,f
                      04498 
                      04499 
0040   08??           04500  movf a_hi_msb,f
0041   1903           04501  btfsc STATUS,Z
0042   2???           04502  goto hllGCAAA
                      04503 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04504 
0043   0A??           04505  incf run_total,f
                      04506 
                      04507 
0044   1903           04508  btfsc STATUS,Z
0045   0A??           04509  incf min2_lower,f
                      04510 
0046                  04511 hllGCAAA:
                      04512 
                      04513 
0046   01??           04514  clrf big_c 
0047   08??           04515  movfw min2
0048   02??           04516  subwf run_total,w 
0049   1C03           04517  btfss STATUS,C 
004A   1400           04518  bsf big_c,0 
                      04519 
                      04520 
004B   08??           04521  movf subtrahend,w
004C   02??           04522  subwf min2_lower,f 
                      04523 
                      04524 
004D   08??           04525  movf min2,w
004E   02??           04526  subwf run_total,f
                      04527 
                      04528 
004F   1800           04529  btfsc big_c,0 
0050   03??           04530  decf min2_lower,f
                      04531 
                      04532 
0051   1F80           04533  btfss min2_lower,7
0052   2???           04534  goto hllHCAAA
                      04535 
                      04536 
                      04537 
0053   08??           04538  movf min2,w
0054   07??           04539  addwf run_total,w
0055   01??           04540  clrf big_c
0056   1803           04541  btfsc STATUS,C
0057   1400           04542  bsf big_c,0
                      04543 
                      04544 
0058   08??           04545  movf subtrahend,w
0059   07??           04546  addwf min2_lower,f
                      04547 
                      04548 
005A   08??           04549  movf min2,w
005B   07??           04550  addwf run_total,f
                      04551 
                      04552 
                      04553 
005C   1800           04554  btfsc big_c,0 
005D   0A??           04555  incf min2_lower,f
                      04556 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04557 
                      04558 
005E   30FE           04559  movlw .254
005F   05??           04560  andwf quotient_lo,f
                      04561 
                      04562 
0060   2???           04563  goto hllICAAA
0061                  04564 hllHCAAA:
                      04565 
                      04566 
0061   3001           04567  movlw .1
0062   04??           04568  iorwf quotient_lo,f
0063                  04569 hllICAAA:
                      04570 
                      04571 
                      04572 
0063   0A??           04573  incf loop_count,f
                      04574 
                      04575 
0064   2???           04576  goto hllECAAA
                      04577 
0065                  04578 hllJCAAA:
                      04579 
                      04580 
0065   08??           04581  movf quotient_lo,w
0066   00??           04582  movwf mout
                      04583 
                      04584 
0067   01??           04585  clrf multiplier
0068   1800           04586  btfsc min,0
0069   1400           04587  bsf multiplier,0
                      04588 
                      04589  
                      04590  RSHIFT term
006A   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
006B   0C??               M  rrf sfploc08,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04591  
006C   01??           04592  clrf rounded
006D   08??           04593  movfw run_total
006E   02??           04594  subwf term,w    
006F   1803           04595  btfsc STATUS,C 
0070   2???           04596  goto hllKCAAA   
0071   0A??           04597  incf mout,f 
0072   1400           04598  bsf rounded,0 
                      04599  
0073                  04600 hllKCAAA:
                      04601  
                      04602 
                      04603 
0073   08??           04604  movf multiplier,f
0074   1903           04605  btfsc STATUS,Z
0075   2???           04606  goto hllNCAAA
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04607  
                      04608 
                      04609 
                      04610 
                      04611 
                      04612  
0076   1C00           04613  btfss mout,0
0077   2???           04614  goto hllLCAAA
                      04615 
                      04616  
0078   1800           04617  btfsc rounded,0
0079   2???           04618  goto hllLCAAA
                      04619  
                      04620  
                      04621 
                      04622  RSHIFT mout
007A   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
007B   0C??               M  rrf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04623  
                      04624 
007C   0A??           04625  incf mout,f
                      04626 
                      04627 
007D   2???           04628  goto hllMCAAA
                      04629 
007E                  04630 hllLCAAA:
                      04631 
                      04632 
                      04633  RSHIFT mout
007E   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
007F   0C??               M  rrf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      04634  
0080                  04635 hllMCAAA:
                      04636 
                      04637 
0080   1780           04638  bsf mout,7
                      04639 
0081   2???           04640  goto hllOCAAA
0082                  04641 hllNCAAA:
0082   03??           04642  decf util,f 
0083                  04643 hllOCAAA:
0083   08??           04644  movfw mout 
                      04645 
0084                  04646 hllPCAAA: 
                      04647 
0084   3E80           04648   addlw -.128 
0085   00??           04649   movwf exam 
0086   1F80           04650   btfss exam,7 
0087   2???           04651   goto hllQCAAA 
0088   3E80           04652   addlw .128    
                      04653 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04654  
0089   03??           04655  decf util,f 
                      04656 
                      04657  
                      04658  LSHIFT mout
008A   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
008B   0D??               M  rlf sfploc11,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
008C   08??           04659  movfw mout 
008D   2???           04660  goto hllPCAAA 
                      04661 
008E                  04662 hllQCAAA: 
                      04663 
                      04664 
008E   00??           04665  movwf mout
                      04666 
                      04667 
                      04668 
                      04669  
                      04670  
008F   1800           04671  btfsc neg,0
0090   2???           04672  goto hllRCAAA 
0091   1C80           04673  btfss neg,1
0092   2???           04674  goto hllTCAAA 
0093   2???           04675  goto hllSCAAA 
0094                  04676 hllRCAAA: 
0094   1880           04677  btfsc neg,1
0095   2???           04678  goto hllTCAAA 
                      04679 
0096                  04680 hllSCAAA: 
                      04681 
                      04682  
                      04683  
                      04684  
                      04685  
0096   08??           04686  movfw mout 
0097   3880           04687  iorlw .128 
0098   00??           04688  movwf mout 
                      04689  
                      04690 
0099                  04691 hllTCAAA: 
0099   08??           04692  movfw mout 
                      04693  PUSH
009A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
009C   ???? ????      04694  banksel min
009E   08??           04695  movfw util 
                      04696  PUSH
009F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A0   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04697  
00A1   0008           04698  return 
                      04699 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04700  
                      04701  
                      04702 
                      04703 
                      04704 #undefine rounded
                      04705 
                      04706 
                      04707 #undefine big_c
                      04708 
                      04709 
                      04710 #undefine a_hi_msb
                      04711 
                      04712 
                      04713 #undefine loop_count
                      04714 
                      04715 
                      04716 #undefine run_total
                      04717 
                      04718 
                      04719 #undefine min2_lower
                      04720 
                      04721 
                      04722 #undefine subtrahend
                      04723 
                      04724 
                      04725 #undefine quotient_lo
                      04726 
                      04727 
                      04728 #undefine term
                      04729 
                      04730 
                      04731 #undefine exam
                      04732 
                      04733 
                      04734 #undefine multiplier
                      04735 
                      04736 
                      04737 #undefine mout
                      04738 
                      04739 
                      04740 #undefine util
                      04741 
                      04742 
                      04743 #undefine neg
                      04744 
                      04745 
                      04746 #undefine ein2
                      04747 
                      04748 
                      04749 #undefine min2
                      04750 
                      04751 
                      04752 #undefine ein
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04753 
                      04754 
                      04755 #undefine min
                      04756 
                      04757 
                      04758 
                      04759 
                      04760 
                      04761 
                      04762 
                      04763   
                      04764  
                      04765 
                      04766 sfp_pow CODE 
                      04767 
                      04768 
                      04769 
                      04770 #define totest sfploc00
                      04771 
                      04772 
                      04773 #define neg sfploc01
                      04774 
                      04775 
                      04776 #define util sfploc02
                      04777 
                      04778 
                      04779 #define exam sfploc03
                      04780 
                      04781 
                      04782 #define karg2 sfploc04
                      04783 
                      04784 
                      04785 #define karg1 sfploc05
                      04786 
                      04787 
0000                  04788 powf:  
                      04789 #ifdef HLLMULTITASK
                      04790 #ifdef HLLGUARDsfploc 
                      04791  movf in_isr,f  
                      04792  btfsc STATUS,Z
                      04793  
                      04794 
                      04795 
                      04796  goto powf0
                      04797 
                      04798 
                      04799 
                      04800 
                      04801 
                      04802 
                      04803 
                      04804 
                      04805 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04806 
                      04807 
                      04808 
                      04809 
                      04810 
                      04811  POP
                      04812  banksel karg1
                      04813  movwf karg2 
                      04814 
                      04815  xorlw 0x80 
                      04816  btfss STATUS,Z 
                      04817  goto nonzpow 
                      04818  
                      04819  
                      04820  
                      04821  POP
                      04822 
                      04823  
                      04824  movlw .0
                      04825  PUSH
                      04826  PUSH
                      04827  return
                      04828  
                      04829 
                      04830 nonzpow:
                      04831 
                      04832 
                      04833  POP
                      04834  banksel karg1
                      04835  movwf karg1
                      04836  clrf neg
                      04837  andlw .128
                      04838  btfss STATUS,Z
                      04839  bsf neg,0 
                      04840  movfw karg1
                      04841  andlw .127 
                      04842  
                      04843  
                      04844 
                      04845  addlw .128 
                      04846  movwf karg1 
                      04847  
                      04848  
                      04849  
                      04850  
                      04851  
                      04852  
                      04853  
                      04854  
                      04855  
                      04856  btfsc karg2,7
                      04857  goto gjjm44 
                      04858  movf karg2,f
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04859  btfsc STATUS,Z
                      04860  goto gjjm44 
                      04861  movlw .7    
                      04862  subwf karg2,w
                      04863  btfss STATUS,C
                      04864  goto gjjm44 
                      04865  
                      04866  
                      04867  btfsc neg,0
                      04868  goto gjkm44
                      04869  
                      04870  
                      04871  
                      04872  movlw .127
                      04873  PUSH
                      04874  PUSH
                      04875  
                      04876  
                      04877  return
                      04878 
                      04879  
                      04880 gjkm44:
                      04881 
                      04882  
                      04883  
                      04884  movlw .0
                      04885  PUSH
                      04886  
                      04887  movlw .128 
                      04888  PUSH
                      04889  
                      04890  
                      04891  return
                      04892 
                      04893 
                      04894 
                      04895 
                      04896 
                      04897 gjjm44:
                      04898  
                      04899  
                      04900  movlw .8
                      04901  addwf karg2,w 
                      04902  movwf totest
                      04903  btfss totest,7
                      04904  goto gjjm45 
                      04905  
                      04906  
                      04907  
                      04908  
                      04909  
                      04910  
                      04911  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04912  
                      04913  
                      04914  
                      04915  movlw .0
                      04916  PUSH
                      04917  PUSH
                      04918  return
                      04919  
                      04920  
                      04921 gjjm45:
                      04922 
                      04923  
                      04924  
                      04925 
                      04926 
                      04927 
                      04928 
                      04929 
                      04930 
                      04931 
                      04932 
                      04933 
                      04934 
                      04935 
                      04936 
                      04937 
                      04938 
                      04939 
                      04940 
                      04941 
                      04942 
                      04943 
                      04944 
                      04945 
                      04946 
                      04947 
                      04948 
                      04949 
                      04950  
                      04951 
                      04952 
                      04953  
                      04954  
                      04955  
                      04956  
                      04957  
                      04958  
                      04959  
                      04960  
                      04961  
                      04962  
                      04963  
                      04964  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04965  
                      04966  
                      04967  
                      04968  
                      04969  
                      04970  
                      04971  
                      04972  bcf STATUS,C
                      04973  
                      04974  clrf util
                      04975  movfw karg2
                      04976  sublw .7
                      04977  
                      04978  
                      04979  
                      04980  
                      04981  movwf exam 
                      04982 
                      04983  movlw high FPRollTbl4 
                      04984  movwf PCLATH 
                      04985  movlw low FPRollTbl4
                      04986  addwf exam,w 
                      04987  btfsc STATUS,C 
                      04988  incf PCLATH,f 
                      04989  movwf PCL 
                      04990 
                      04991 FPRollTbl4:
                      04992 
                      04993  goto shift0b
                      04994  goto shift1b
                      04995  goto shift2b
                      04996  goto shift3b
                      04997  goto shift4b
                      04998  goto shift5b
                      04999  goto shift6b
                      05000  goto shift7b
                      05001  goto shift8b
                      05002  goto shift9b
                      05003  goto shift10b
                      05004  goto shift11b
                      05005  goto shift12b
                      05006  goto shift13b
                      05007  goto shift14b
                      05008  
                      05009 
                      05010 
                      05011 shift15b:
                      05012  RSHIFT karg1
                      05013  rrf util,f
                      05014 shift14b:
                      05015  RSHIFT karg1
                      05016  rrf util,f
                      05017 shift13b:
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05018  RSHIFT karg1
                      05019  rrf util,f
                      05020 shift12b:
                      05021  RSHIFT karg1
                      05022  rrf util,f
                      05023 shift11b:
                      05024  RSHIFT karg1
                      05025  rrf util,f
                      05026 shift10b:
                      05027  RSHIFT karg1
                      05028  rrf util,f
                      05029 shift9b:
                      05030  RSHIFT karg1
                      05031  rrf util,f
                      05032 shift8b:
                      05033  RSHIFT karg1
                      05034  rrf util,f
                      05035 shift7b:
                      05036  RSHIFT karg1
                      05037  rrf util,f
                      05038 shift6b:
                      05039  RSHIFT karg1
                      05040  rrf util,f
                      05041 shift5b:
                      05042  RSHIFT karg1
                      05043  rrf util,f
                      05044 shift4b:
                      05045  RSHIFT karg1
                      05046  rrf util,f
                      05047 shift3b:
                      05048  RSHIFT karg1
                      05049  rrf util,f
                      05050 shift2b:
                      05051  RSHIFT karg1
                      05052  rrf util,f
                      05053 shift1b:
                      05054  RSHIFT karg1
                      05055  rrf util,f
                      05056  
                      05057  btfsc STATUS,C 
                      05058  incf util,f
                      05059 shift0b:
                      05060 
                      05061 
                      05062 
                      05063 
                      05064 
                      05065 
                      05066 
                      05067  call FPCoreLook2 
                      05068  banksel karg1
                      05069  movwf util
                      05070 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05071  
                      05072  
                      05073  
                      05074  
                      05075  movf neg,f 
                      05076  btfsc STATUS,Z 
                      05077  goto dontnegate11 
                      05078  movlw .0 
                      05079  PUSH
                      05080  movlw .0
                      05081  PUSH 
                      05082  
                      05083 dontnegate11:
                      05084 
                      05085  banksel karg1
                      05086 
                      05087  movfw util 
                      05088  PUSH
                      05089  banksel karg1
                      05090 
                      05091  movfw karg1 
                      05092  PUSH
                      05093  banksel karg1
                      05094  
                      05095  movf neg,f 
                      05096  btfsc STATUS,Z 
                      05097  goto dontnegate2 
                      05098  
                      05099  
                      05100  
                      05101  
                      05102  
                      05103  
                      05104  pagesel divf
                      05105  goto divf 
                      05106  
                      05107 
                      05108 dontnegate2:
                      05109  
                      05110  return
                      05111 
                      05112 FPCoreLook2:
                      05113 
                      05114  movlw high FPCoreTbl2 
                      05115  movwf PCLATH 
                      05116  movlw low FPCoreTbl2 
                      05117  addwf util,w 
                      05118  btfsc STATUS,C 
                      05119  incf PCLATH,f 
                      05120  movwf PCL 
                      05121 
                      05122 
                      05123 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05124 #undefine totest
                      05125 
                      05126 
                      05127 #undefine neg
                      05128 
                      05129 
                      05130 #undefine util
                      05131 
                      05132 
                      05133 #undefine exam
                      05134 
                      05135 
                      05136 #undefine karg2
                      05137 
                      05138 
                      05139 #undefine karg1
                      05140 
                      05141 
                      05142 #define totest sfploc00+1
                      05143 
                      05144 
                      05145 #define neg sfploc01+1
                      05146 
                      05147 
                      05148 #define util sfploc02+1
                      05149 
                      05150 
                      05151 #define exam sfploc03+1
                      05152 
                      05153 
                      05154 #define karg2 sfploc04+1
                      05155 
                      05156 
                      05157 #define karg1 sfploc05+1
                      05158 
                      05159 
                      05160 powf0:
                      05161 #endif
                      05162 #endif
                      05163 
                      05164 
                      05165 
                      05166 
                      05167 
                      05168 
                      05169 
                      05170 
                      05171 
                      05172 
                      05173 
                      05174 
                      05175 
                      05176 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05177  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      05178  banksel karg1
0004   00??           05179  movwf karg2 
                      05180 
0005   3A80           05181  xorlw 0x80 
0006   1D03           05182  btfss STATUS,Z 
0007   2???           05183  goto hllUCAAA 
                      05184  
                      05185  
                      05186  
                      05187  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
                      05188 
                      05189  
000A   3000           05190  movlw .0
                      05191  PUSH
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05192  PUSH
000D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
000F   0008           05193  return
                      05194  
                      05195 
0010                  05196 hllUCAAA:
                      05197 
                      05198 
                      05199  POP
0010   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0011   0384               M  decf FSR,f 
0012   ???? ????      05200  banksel karg1
0014   00??           05201  movwf karg1
0015   01??           05202  clrf neg
0016   3980           05203  andlw .128
0017   1D03           05204  btfss STATUS,Z
0018   1400           05205  bsf neg,0 
0019   08??           05206  movfw karg1
001A   397F           05207  andlw .127 
                      05208  
                      05209  
                      05210 
001B   3E80           05211  addlw .128 
001C   00??           05212  movwf karg1 
                      05213  
                      05214  
                      05215  
                      05216  
                      05217  
                      05218  
                      05219  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05220  
                      05221  
001D   1B80           05222  btfsc karg2,7
001E   2???           05223  goto hllWCAAA 
001F   08??           05224  movf karg2,f
0020   1903           05225  btfsc STATUS,Z
0021   2???           05226  goto hllWCAAA 
0022   3007           05227  movlw .7    
0023   02??           05228  subwf karg2,w
0024   1C03           05229  btfss STATUS,C
0025   2???           05230  goto hllWCAAA 
                      05231  
                      05232  
0026   1800           05233  btfsc neg,0
0027   2???           05234  goto hllVCAAA
                      05235  
                      05236  
                      05237  
0028   307F           05238  movlw .127
                      05239  PUSH
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05240  PUSH
002B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05241  
                      05242  
002D   0008           05243  return
                      05244 
                      05245  
002E                  05246 hllVCAAA:
                      05247 
                      05248  
                      05249  
002E   3000           05250  movlw .0
                      05251  PUSH
002F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0030   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05252  
0031   3080           05253  movlw .128 
                      05254  PUSH
0032   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0033   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05255  
                      05256  
0034   0008           05257  return
                      05258 
                      05259 
                      05260 
                      05261 
                      05262 
0035                  05263 hllWCAAA:
                      05264  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05265  
0035   3008           05266  movlw .8
0036   07??           05267  addwf karg2,w 
0037   00??           05268  movwf totest
0038   1F80           05269  btfss totest,7
0039   2???           05270  goto hllXCAAA 
                      05271  
                      05272  
                      05273  
                      05274  
                      05275  
                      05276  
                      05277  
                      05278  
                      05279  
                      05280  
003A   3000           05281  movlw .0
                      05282  PUSH
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05283  PUSH
003D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003F   0008           05284  return
                      05285  
                      05286  
0040                  05287 hllXCAAA:
                      05288 
                      05289  
                      05290  
                      05291 
                      05292 
                      05293 
                      05294 
                      05295 
                      05296 
                      05297 
                      05298 
                      05299 
                      05300 
                      05301 
                      05302 
                      05303 
                      05304 
                      05305 
                      05306 
                      05307 
                      05308 
                      05309 
                      05310 
                      05311 
                      05312 
                      05313 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05314 
                      05315 
                      05316  
                      05317 
                      05318 
                      05319  
                      05320  
                      05321  
                      05322  
                      05323  
                      05324  
                      05325  
                      05326  
                      05327  
                      05328  
                      05329  
                      05330  
                      05331  
                      05332  
                      05333  
                      05334  
                      05335  
                      05336  
                      05337  
0040   1003           05338  bcf STATUS,C
                      05339  
0041   01??           05340  clrf util
0042   08??           05341  movfw karg2
0043   3C07           05342  sublw .7
                      05343  
                      05344  
                      05345  
                      05346  
0044   00??           05347  movwf exam 
                      05348 
0045   30??           05349  movlw high hllYCAAA 
0046   008A           05350  movwf PCLATH 
0047   30??           05351  movlw low hllYCAAA
0048   07??           05352  addwf exam,w 
0049   1803           05353  btfsc STATUS,C 
004A   0A8A           05354  incf PCLATH,f 
004B   0082           05355  movwf PCL 
                      05356 
004C                  05357 hllYCAAA:
                      05358 
004C   2???           05359  goto hllODAAA
004D   2???           05360  goto hllNDAAA
004E   2???           05361  goto hllMDAAA
004F   2???           05362  goto hllLDAAA
0050   2???           05363  goto hllKDAAA
0051   2???           05364  goto hllJDAAA
0052   2???           05365  goto hllIDAAA
0053   2???           05366  goto hllHDAAA
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0054   2???           05367  goto hllGDAAA
0055   2???           05368  goto hllFDAAA
0056   2???           05369  goto hllEDAAA
0057   2???           05370  goto hllDDAAA
0058   2???           05371  goto hllCDAAA
0059   2???           05372  goto hllBDAAA
005A   2???           05373  goto hllADAAA
                      05374  
                      05375 
                      05376 
005B                  05377 hllZCAAA:
                      05378  RSHIFT karg1
005B   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
005C   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
005D   0C??           05379  rrf util,f
005E                  05380 hllADAAA:
                      05381  RSHIFT karg1
005E   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
005F   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0060   0C??           05382  rrf util,f
0061                  05383 hllBDAAA:
                      05384  RSHIFT karg1
0061   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0062   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0063   0C??           05385  rrf util,f
0064                  05386 hllCDAAA:
                      05387  RSHIFT karg1
0064   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0065   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0066   0C??           05388  rrf util,f
0067                  05389 hllDDAAA:
                      05390  RSHIFT karg1
0067   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0068   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0069   0C??           05391  rrf util,f
006A                  05392 hllEDAAA:
                      05393  RSHIFT karg1
006A   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
006B   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
006C   0C??           05394  rrf util,f
006D                  05395 hllFDAAA:
                      05396  RSHIFT karg1
006D   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
006E   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
006F   0C??           05397  rrf util,f
0070                  05398 hllGDAAA:
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05399  RSHIFT karg1
0070   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0071   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0072   0C??           05400  rrf util,f
0073                  05401 hllHDAAA:
                      05402  RSHIFT karg1
0073   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0074   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0075   0C??           05403  rrf util,f
0076                  05404 hllIDAAA:
                      05405  RSHIFT karg1
0076   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0077   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0078   0C??           05406  rrf util,f
0079                  05407 hllJDAAA:
                      05408  RSHIFT karg1
0079   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
007A   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
007B   0C??           05409  rrf util,f
007C                  05410 hllKDAAA:
                      05411  RSHIFT karg1
007C   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
007D   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
007E   0C??           05412  rrf util,f
007F                  05413 hllLDAAA:
                      05414  RSHIFT karg1
007F   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0080   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0081   0C??           05415  rrf util,f
0082                  05416 hllMDAAA:
                      05417  RSHIFT karg1
0082   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0083   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0084   0C??           05418  rrf util,f
0085                  05419 hllNDAAA:
                      05420  RSHIFT karg1
0085   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0086   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0087   0C??           05421  rrf util,f
                      05422  
0088   1803           05423  btfsc STATUS,C 
0089   0A??           05424  incf util,f
008A                  05425 hllODAAA:
                      05426 
                      05427 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05428 
                      05429 
                      05430 
                      05431 
                      05432 
008A   2???           05433  call hllRDAAA 
008B   ???? ????      05434  banksel karg1
008D   00??           05435  movwf util
                      05436 
                      05437  
                      05438  
                      05439  
                      05440  
008E   08??           05441  movf neg,f 
008F   1903           05442  btfsc STATUS,Z 
0090   2???           05443  goto hllPDAAA 
0091   3000           05444  movlw .0 
                      05445  PUSH
0092   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0093   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0094   3000           05446  movlw .0
                      05447  PUSH 
0095   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0096   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05448  
0097                  05449 hllPDAAA:
                      05450 
0097   ???? ????      05451  banksel karg1
                      05452 
0099   08??           05453  movfw util 
                      05454  PUSH
009A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
009C   ???? ????      05455  banksel karg1
                      05456 
009E   08??           05457  movfw karg1 
                      05458  PUSH
009F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A0   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
00A1   ???? ????      05459  banksel karg1
                      05460  
00A3   08??           05461  movf neg,f 
00A4   1903           05462  btfsc STATUS,Z 
00A5   2???           05463  goto hllQDAAA 
                      05464  
                      05465  
                      05466  
                      05467  
                      05468  
                      05469  
00A6   ????           05470  pagesel divf
00A7   2???           05471  goto divf 
                      05472  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05473 
00A8                  05474 hllQDAAA:
                      05475  
00A8   0008           05476  return
                      05477 
00A9                  05478 hllRDAAA:
                      05479 
00A9   30??           05480  movlw high FPCoreTbl2 
00AA   008A           05481  movwf PCLATH 
00AB   30??           05482  movlw low FPCoreTbl2 
00AC   07??           05483  addwf util,w 
00AD   1803           05484  btfsc STATUS,C 
00AE   0A8A           05485  incf PCLATH,f 
00AF   0082           05486  movwf PCL 
                      05487 
                      05488 
                      05489 
                      05490 #undefine totest
                      05491 
                      05492 
                      05493 #undefine neg
                      05494 
                      05495 
                      05496 #undefine util
                      05497 
                      05498 
                      05499 #undefine exam
                      05500 
                      05501 
                      05502 #undefine karg2
                      05503 
                      05504 
                      05505 #undefine karg1
00B0                  05506 FPCoreTbl2:
00B0   3400           05507  retlw .0 
00B1   3400           05508  retlw .0 
00B2   3401           05509  retlw .1 
00B3   3401           05510  retlw .1 
00B4   3401           05511  retlw .1 
00B5   3402           05512  retlw .2 
00B6   3402           05513  retlw .2 
00B7   3402           05514  retlw .2 
00B8   3403           05515  retlw .3 
00B9   3403           05516  retlw .3 
00BA   3404           05517  retlw .4 
00BB   3404           05518  retlw .4 
00BC   3404           05519  retlw .4 
00BD   3405           05520  retlw .5 
00BE   3405           05521  retlw .5 
00BF   3405           05522  retlw .5 
00C0   3406           05523  retlw .6 
00C1   3406           05524  retlw .6 
00C2   3406           05525  retlw .6 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C3   3407           05526  retlw .7 
00C4   3407           05527  retlw .7 
00C5   3407           05528  retlw .7 
00C6   3408           05529  retlw .8 
00C7   3408           05530  retlw .8 
00C8   3409           05531  retlw .9 
00C9   3409           05532  retlw .9 
00CA   3409           05533  retlw .9 
00CB   340A           05534  retlw .10 
00CC   340A           05535  retlw .10 
00CD   340A           05536  retlw .10 
00CE   340B           05537  retlw .11 
00CF   340B           05538  retlw .11 
00D0   340C           05539  retlw .12 
00D1   340C           05540  retlw .12 
00D2   340C           05541  retlw .12 
00D3   340D           05542  retlw .13 
00D4   340D           05543  retlw .13 
00D5   340D           05544  retlw .13 
00D6   340E           05545  retlw .14 
00D7   340E           05546  retlw .14 
00D8   340F           05547  retlw .15 
00D9   340F           05548  retlw .15 
00DA   340F           05549  retlw .15 
00DB   3410           05550  retlw .16 
00DC   3410           05551  retlw .16 
00DD   3411           05552  retlw .17 
00DE   3411           05553  retlw .17 
00DF   3411           05554  retlw .17 
00E0   3412           05555  retlw .18 
00E1   3412           05556  retlw .18 
00E2   3413           05557  retlw .19 
00E3   3413           05558  retlw .19 
00E4   3413           05559  retlw .19 
00E5   3414           05560  retlw .20 
00E6   3414           05561  retlw .20 
00E7   3415           05562  retlw .21 
00E8   3415           05563  retlw .21 
00E9   3415           05564  retlw .21 
00EA   3416           05565  retlw .22 
00EB   3416           05566  retlw .22 
00EC   3417           05567  retlw .23 
00ED   3417           05568  retlw .23 
00EE   3417           05569  retlw .23 
00EF   3418           05570  retlw .24 
00F0   3418           05571  retlw .24 
00F1   3419           05572  retlw .25 
00F2   3419           05573  retlw .25 
00F3   3419           05574  retlw .25 
00F4   341A           05575  retlw .26 
00F5   341A           05576  retlw .26 
00F6   341B           05577  retlw .27 
00F7   341B           05578  retlw .27 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F8   341C           05579  retlw .28 
00F9   341C           05580  retlw .28 
00FA   341C           05581  retlw .28 
00FB   341D           05582  retlw .29 
00FC   341D           05583  retlw .29 
00FD   341E           05584  retlw .30 
00FE   341E           05585  retlw .30 
00FF   341F           05586  retlw .31 
0100   341F           05587  retlw .31 
0101   341F           05588  retlw .31 
0102   3420           05589  retlw .32 
0103   3420           05590  retlw .32 
0104   3421           05591  retlw .33 
0105   3421           05592  retlw .33 
0106   3422           05593  retlw .34 
0107   3422           05594  retlw .34 
0108   3422           05595  retlw .34 
0109   3423           05596  retlw .35 
010A   3423           05597  retlw .35 
010B   3424           05598  retlw .36 
010C   3424           05599  retlw .36 
010D   3425           05600  retlw .37 
010E   3425           05601  retlw .37 
010F   3426           05602  retlw .38 
0110   3426           05603  retlw .38 
0111   3426           05604  retlw .38 
0112   3427           05605  retlw .39 
0113   3427           05606  retlw .39 
0114   3428           05607  retlw .40 
0115   3428           05608  retlw .40 
0116   3429           05609  retlw .41 
0117   3429           05610  retlw .41 
0118   342A           05611  retlw .42 
0119   342A           05612  retlw .42 
011A   342B           05613  retlw .43 
011B   342B           05614  retlw .43 
011C   342B           05615  retlw .43 
011D   342C           05616  retlw .44 
011E   342C           05617  retlw .44 
011F   342D           05618  retlw .45 
0120   342D           05619  retlw .45 
0121   342E           05620  retlw .46 
0122   342E           05621  retlw .46 
0123   342F           05622  retlw .47 
0124   342F           05623  retlw .47 
0125   3430           05624  retlw .48 
0126   3430           05625  retlw .48 
0127   3431           05626  retlw .49 
0128   3431           05627  retlw .49 
0129   3432           05628  retlw .50 
012A   3432           05629  retlw .50 
012B   3433           05630  retlw .51 
012C   3433           05631  retlw .51 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012D   3434           05632  retlw .52 
012E   3434           05633  retlw .52 
012F   3435           05634  retlw .53 
0130   3435           05635  retlw .53 
0131   3436           05636  retlw .54 
0132   3436           05637  retlw .54 
0133   3436           05638  retlw .54 
0134   3437           05639  retlw .55 
0135   3437           05640  retlw .55 
0136   3438           05641  retlw .56 
0137   3438           05642  retlw .56 
0138   3439           05643  retlw .57 
0139   3439           05644  retlw .57 
013A   343A           05645  retlw .58 
013B   343A           05646  retlw .58 
013C   343B           05647  retlw .59 
013D   343C           05648  retlw .60 
013E   343C           05649  retlw .60 
013F   343D           05650  retlw .61 
0140   343D           05651  retlw .61 
0141   343E           05652  retlw .62 
0142   343E           05653  retlw .62 
0143   343F           05654  retlw .63 
0144   343F           05655  retlw .63 
0145   3440           05656  retlw .64 
0146   3440           05657  retlw .64 
0147   3441           05658  retlw .65 
0148   3441           05659  retlw .65 
0149   3442           05660  retlw .66 
014A   3442           05661  retlw .66 
014B   3443           05662  retlw .67 
014C   3443           05663  retlw .67 
014D   3444           05664  retlw .68 
014E   3444           05665  retlw .68 
014F   3445           05666  retlw .69 
0150   3445           05667  retlw .69 
0151   3446           05668  retlw .70 
0152   3446           05669  retlw .70 
0153   3447           05670  retlw .71 
0154   3448           05671  retlw .72 
0155   3448           05672  retlw .72 
0156   3449           05673  retlw .73 
0157   3449           05674  retlw .73 
0158   344A           05675  retlw .74 
0159   344A           05676  retlw .74 
015A   344B           05677  retlw .75 
015B   344B           05678  retlw .75 
015C   344C           05679  retlw .76 
015D   344C           05680  retlw .76 
015E   344D           05681  retlw .77 
015F   344E           05682  retlw .78 
0160   344E           05683  retlw .78 
0161   344F           05684  retlw .79 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0162   344F           05685  retlw .79 
0163   3450           05686  retlw .80 
0164   3450           05687  retlw .80 
0165   3451           05688  retlw .81 
0166   3452           05689  retlw .82 
0167   3452           05690  retlw .82 
0168   3453           05691  retlw .83 
0169   3453           05692  retlw .83 
016A   3454           05693  retlw .84 
016B   3454           05694  retlw .84 
016C   3455           05695  retlw .85 
016D   3456           05696  retlw .86 
016E   3456           05697  retlw .86 
016F   3457           05698  retlw .87 
0170   3457           05699  retlw .87 
0171   3458           05700  retlw .88 
0172   3458           05701  retlw .88 
0173   3459           05702  retlw .89 
0174   345A           05703  retlw .90 
0175   345A           05704  retlw .90 
0176   345B           05705  retlw .91 
0177   345B           05706  retlw .91 
0178   345C           05707  retlw .92 
0179   345D           05708  retlw .93 
017A   345D           05709  retlw .93 
017B   345E           05710  retlw .94 
017C   345E           05711  retlw .94 
017D   345F           05712  retlw .95 
017E   3460           05713  retlw .96 
017F   3460           05714  retlw .96 
0180   3461           05715  retlw .97 
0181   3461           05716  retlw .97 
0182   3462           05717  retlw .98 
0183   3463           05718  retlw .99 
0184   3463           05719  retlw .99 
0185   3464           05720  retlw .100 
0186   3464           05721  retlw .100 
0187   3465           05722  retlw .101 
0188   3466           05723  retlw .102 
0189   3466           05724  retlw .102 
018A   3467           05725  retlw .103 
018B   3468           05726  retlw .104 
018C   3468           05727  retlw .104 
018D   3469           05728  retlw .105 
018E   3469           05729  retlw .105 
018F   346A           05730  retlw .106 
0190   346B           05731  retlw .107 
0191   346B           05732  retlw .107 
0192   346C           05733  retlw .108 
0193   346D           05734  retlw .109 
0194   346D           05735  retlw .109 
0195   346E           05736  retlw .110 
0196   346F           05737  retlw .111 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0197   346F           05738  retlw .111 
0198   3470           05739  retlw .112 
0199   3471           05740  retlw .113 
019A   3471           05741  retlw .113 
019B   3472           05742  retlw .114 
019C   3473           05743  retlw .115 
019D   3473           05744  retlw .115 
019E   3474           05745  retlw .116 
019F   3474           05746  retlw .116 
01A0   3475           05747  retlw .117 
01A1   3476           05748  retlw .118 
01A2   3476           05749  retlw .118 
01A3   3477           05750  retlw .119 
01A4   3478           05751  retlw .120 
01A5   3478           05752  retlw .120 
01A6   3479           05753  retlw .121 
01A7   347A           05754  retlw .122 
01A8   347B           05755  retlw .123 
01A9   347B           05756  retlw .123 
01AA   347C           05757  retlw .124 
01AB   347D           05758  retlw .125 
01AC   347D           05759  retlw .125 
01AD   347E           05760  retlw .126 
01AE   347F           05761  retlw .127 
01AF   347F           05762  retlw .127 
                      05763 
                      05764 
                      05765  
                      05766  
                      05767 
                      05768 
                      05769 
                      05770 
                      05771 
                      05772  
                      05773 
                      05774 sfp_tou CODE 
                      05775 
                      05776 
                      05777 
                      05778 #define util sfploc00
                      05779 
                      05780 
                      05781 #define divisor sfploc01
                      05782 
                      05783 
                      05784 #define karg2 sfploc02
                      05785 
                      05786 
                      05787 #define karg1 sfploc03
                      05788 
                      05789 
0000                  05790 ftou:  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05791 #ifdef HLLMULTITASK
                      05792 #ifdef HLLGUARDsfploc 
                      05793  movf in_isr,f  
                      05794  btfsc STATUS,Z
                      05795  
                      05796 
                      05797 
                      05798  goto ftou0
                      05799 
                      05800 
                      05801 
                      05802 
                      05803 
                      05804 
                      05805  POP
                      05806  banksel karg2
                      05807  movwf karg2 
                      05808  clrf karg1 
                      05809  
                      05810  
                      05811  
                      05812  
                      05813  btfss karg2,7
                      05814  goto re55zek
                      05815  POP
                      05816  goto re55zer 
                      05817 re55zek:
                      05818  
                      05819  POP
                      05820  addlw .128
                      05821  banksel karg1
                      05822  movwf karg1 
                      05823  
                      05824  movfw karg2
                      05825  sublw .7
                      05826  
                      05827  movwf divisor 
                      05828 
                      05829  movlw high FPRollTbl3 
                      05830  movwf PCLATH 
                      05831  movlw low FPRollTbl3
                      05832  addwf divisor,w 
                      05833  btfsc STATUS,C 
                      05834  incf PCLATH,f 
                      05835  movwf PCL 
                      05836 
                      05837 
                      05838 FPRollTbl3:
                      05839  goto shift0
                      05840  goto shift1
                      05841  goto shift2 
                      05842  goto shift3
                      05843  goto shift4
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05844  goto shift5
                      05845  goto shift6
                      05846  goto shift7
                      05847  
                      05848 shift7:
                      05849  RSHIFT karg1
                      05850  rrf util,f
                      05851 shift6:
                      05852  RSHIFT karg1
                      05853  rrf util,f
                      05854 shift5:
                      05855  RSHIFT karg1
                      05856  rrf util,f
                      05857 shift4:
                      05858  RSHIFT karg1
                      05859  rrf util,f
                      05860 shift3:
                      05861  RSHIFT karg1
                      05862  rrf util,f
                      05863 shift2:
                      05864  RSHIFT karg1
                      05865  rrf util,f
                      05866 shift1:
                      05867  RSHIFT karg1
                      05868  rrf util,f
                      05869 shift0:
                      05870 
                      05871 re55zer:
                      05872  banksel karg1
                      05873  movfw karg1 
                      05874  PUSH
                      05875  
                      05876  
                      05877  return
                      05878 
                      05879 
                      05880 
                      05881 
                      05882 #undefine util
                      05883 
                      05884 
                      05885 #undefine divisor
                      05886 
                      05887 
                      05888 #undefine karg2
                      05889 
                      05890 
                      05891 #undefine karg1
                      05892 
                      05893 
                      05894 #define util sfploc00+1
                      05895 
                      05896 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05897 #define divisor sfploc01+1
                      05898 
                      05899 
                      05900 #define karg2 sfploc02+1
                      05901 
                      05902 
                      05903 #define karg1 sfploc03+1
                      05904 
                      05905 
                      05906 ftou0:
                      05907 #endif
                      05908 #endif
                      05909 
                      05910 
                      05911 
                      05912 
                      05913 
                      05914 
                      05915  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      05916  banksel karg2
0004   00??           05917  movwf karg2 
0005   01??           05918  clrf karg1 
                      05919  
                      05920  
                      05921  
                      05922  
0006   1F80           05923  btfss karg2,7
0007   2???           05924  goto hllSDAAA
                      05925  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   2???           05926  goto hllCEAAA 
000B                  05927 hllSDAAA:
                      05928  
                      05929  POP
000B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000C   0384               M  decf FSR,f 
000D   3E80           05930  addlw .128
000E   ???? ????      05931  banksel karg1
0010   00??           05932  movwf karg1 
                      05933  
0011   08??           05934  movfw karg2
0012   3C07           05935  sublw .7
                      05936  
0013   00??           05937  movwf divisor 
                      05938 
0014   30??           05939  movlw high hllTDAAA 
0015   008A           05940  movwf PCLATH 
0016   30??           05941  movlw low hllTDAAA
0017   07??           05942  addwf divisor,w 
0018   1803           05943  btfsc STATUS,C 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0019   0A8A           05944  incf PCLATH,f 
001A   0082           05945  movwf PCL 
                      05946 
                      05947 
001B                  05948 hllTDAAA:
001B   2???           05949  goto hllBEAAA
001C   2???           05950  goto hllAEAAA
001D   2???           05951  goto hllZDAAA 
001E   2???           05952  goto hllYDAAA
001F   2???           05953  goto hllXDAAA
0020   2???           05954  goto hllWDAAA
0021   2???           05955  goto hllVDAAA
0022   2???           05956  goto hllUDAAA
                      05957  
0023                  05958 hllUDAAA:
                      05959  RSHIFT karg1
0023   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0024   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0025   0C??           05960  rrf util,f
0026                  05961 hllVDAAA:
                      05962  RSHIFT karg1
0026   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0027   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0028   0C??           05963  rrf util,f
0029                  05964 hllWDAAA:
                      05965  RSHIFT karg1
0029   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
002A   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
002B   0C??           05966  rrf util,f
002C                  05967 hllXDAAA:
                      05968  RSHIFT karg1
002C   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
002D   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
002E   0C??           05969  rrf util,f
002F                  05970 hllYDAAA:
                      05971  RSHIFT karg1
002F   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0030   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0031   0C??           05972  rrf util,f
0032                  05973 hllZDAAA:
                      05974  RSHIFT karg1
0032   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0033   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0034   0C??           05975  rrf util,f
0035                  05976 hllAEAAA:
                      05977  RSHIFT karg1
0035   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            6F1827.
0036   0C??               M  rrf sfploc03,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
0037   0C??           05978  rrf util,f
0038                  05979 hllBEAAA:
                      05980 
0038                  05981 hllCEAAA:
0038   ???? ????      05982  banksel karg1
003A   08??           05983  movfw karg1 
                      05984  PUSH
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      05985  
                      05986  
003D   0008           05987  return
                      05988 
                      05989 
                      05990 
                      05991 
                      05992 #undefine util
                      05993 
                      05994 
                      05995 #undefine divisor
                      05996 
                      05997 
                      05998 #undefine karg2
                      05999 
                      06000 
                      06001 #undefine karg1
                      06002 
                      06003 
                      06004 
                      06005 
                      06006 
                      06007  
                      06008 
                      06009 sfp_log CODE 
                      06010 
                      06011 
                      06012 
                      06013 #define moutH sfploc00
                      06014 
                      06015 
                      06016 #define moutL sfploc01
                      06017 
                      06018 
                      06019 #define mout sfploc02
                      06020 
                      06021 
                      06022 #define rev sfploc03
                      06023 
                      06024 
                      06025 #define neg sfploc04
                      06026 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06027 
                      06028 #define exam sfploc05
                      06029 
                      06030 
                      06031 #define util sfploc06
                      06032 
                      06033 
                      06034 #define karg1 sfploc07
                      06035 
                      06036 
                      06037 #define arg1 sfploc08
                      06038 
                      06039 
0000                  06040 logf:  
                      06041 #ifdef HLLMULTITASK
                      06042 #ifdef HLLGUARDsfploc 
                      06043  movf in_isr,f  
                      06044  btfsc STATUS,Z
                      06045  
                      06046 
                      06047 
                      06048  goto logf0
                      06049 
                      06050 
                      06051  
                      06052  
                      06053  
                      06054  
                      06055  
                      06056  
                      06057  
                      06058 logf: 
                      06059 
                      06060 
                      06061  POP
                      06062  
                      06063  banksel arg1
                      06064  movwf util 
                      06065 
                      06066 
                      06067  POP
                      06068  movwf mout 
                      06069 
                      06070 
                      06071 
                      06072 
                      06073  movf mout,f
                      06074  btfss STATUS,Z
                      06075  goto nzmdss
                      06076 
                      06077 
                      06078 
                      06079  movf util,f
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06080  btfss STATUS,Z
                      06081  goto nzmdss 
                      06082 
                      06083 
                      06084 
                      06085 
                      06086  movlw .128
                      06087  PUSH
                      06088  PUSH
                      06089  
                      06090 
                      06091 
                      06092  return 
                      06093 
                      06094 nzmdss:
                      06095 
                      06096 
                      06097  call look_core 
                      06098  movwf moutL 
                      06099 
                      06100 
                      06101  movf mout,w
                      06102  call look_core_hi
                      06103  movwf moutH 
                      06104 
                      06105  
                      06106 
                      06107  
                      06108  clrf neg
                      06109  
                      06110  
                      06111  btfss util,7
                      06112  goto nonegtlog
                      06113 
                      06114  
                      06115  bsf neg,0
                      06116  
                      06117  
                      06118  comf util,f 
                      06119  
                      06120  
                      06121  incf util,f 
                      06122 
                      06123 
                      06124  
                      06125 nonegtlog:
                      06126 
                      06127  btfsc util,7
                      06128  goto fi5tt2
                      06129  btfsc util,6
                      06130  goto fi5tt3
                      06131  btfsc util,5
                      06132  goto fi5tt4
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06133  btfsc util,4
                      06134  goto fi5tt5
                      06135  btfsc util,3
                      06136  goto fi5tt6
                      06137  btfsc util,2
                      06138  goto fi5tt7
                      06139  btfsc util,1
                      06140  goto fi5tt8
                      06141  btfsc util,0
                      06142  goto fi5tt9
                      06143  goto fi5ttz
                      06144  
                      06145  
                      06146 fi5tt2:
                      06147 
                      06148 
                      06149 
                      06150 
                      06151 
                      06152 
                      06153 
                      06154  RSHIFT moutH
                      06155  
                      06156  
                      06157  
                      06158  
                      06159 
                      06160 
                      06161  rrf moutL
                      06162 fi5tt3:
                      06163  
                      06164  
                      06165  
                      06166  
                      06167  
                      06168  
                      06169  RSHIFT moutH
                      06170  
                      06171  
                      06172  
                      06173  
                      06174  
                      06175  
                      06176  
                      06177  
                      06178  rrf moutL
                      06179 fi5tt4:
                      06180  
                      06181  
                      06182  
                      06183  
                      06184  
                      06185  RSHIFT moutH
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06186  
                      06187  
                      06188  
                      06189  
                      06190  
                      06191  
                      06192  rrf moutL
                      06193 fi5tt5:
                      06194  
                      06195  
                      06196  
                      06197  
                      06198  
                      06199  
                      06200  
                      06201  RSHIFT moutH
                      06202  
                      06203  
                      06204  
                      06205  
                      06206  
                      06207  
                      06208  
                      06209  rrf moutL
                      06210 fi5tt6:
                      06211  
                      06212  
                      06213  
                      06214  
                      06215  RSHIFT moutH
                      06216   
                      06217  
                      06218  
                      06219  
                      06220  
                      06221  rrf moutL
                      06222 fi5tt7:
                      06223  
                      06224  
                      06225  
                      06226  
                      06227  
                      06228  RSHIFT moutH
                      06229  
                      06230  
                      06231  
                      06232  
                      06233  
                      06234  
                      06235  rrf moutL
                      06236 fi5tt8:
                      06237  
                      06238  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06239  
                      06240  
                      06241  
                      06242  
                      06243  
                      06244  RSHIFT moutH
                      06245  
                      06246  
                      06247  
                      06248  
                      06249  
                      06250  
                      06251  
                      06252  
                      06253  
                      06254  
                      06255  rrf moutL
                      06256 fi5tt9:
                      06257  
                      06258  
                      06259  
                      06260  
                      06261  
                      06262  
                      06263  RSHIFT moutH
                      06264  
                      06265  
                      06266  
                      06267  
                      06268  
                      06269  
                      06270  rrf moutL
                      06271 
                      06272  
                      06273  btfss STATUS,C
                      06274  goto fi5ttz
                      06275  
                      06276  
                      06277  incf moutL,f
                      06278  
                      06279  
                      06280  movf moutL,f
                      06281  btfsc STATUS,Z
                      06282  
                      06283  incf moutH,f
                      06284 fi5ttz:
                      06285 
                      06286  
                      06287  
                      06288   btfss neg,0
                      06289   goto m1gd6
                      06290  
                      06291   comf moutH,f
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06292  
                      06293   comf moutL,f
                      06294  
                      06295   incf moutL,f
                      06296  
                      06297   btfsc STATUS,Z
                      06298  
                      06299   incf moutH,f
                      06300  m1gd6:
                      06301  
                      06302  
                      06303   btfss util,7
                      06304   goto gkbb11
                      06305  
                      06306   movlw -.1
                      06307   movwf rev
                      06308  
                      06309   movf util,w
                      06310   addwf moutH,f
                      06311  
                      06312   goto kkbbg3
                      06313  gkbb11:
                      06314 
                      06315   btfss util,6
                      06316   goto gkbb22
                      06317 
                      06318  
                      06319    movlw -.2
                      06320    movwf rev
                      06321 
                      06322  
                      06323   bcf STATUS,C
                      06324   rlf util,w
                      06325   addwf moutH,f
                      06326   goto kkbbg3
                      06327  gkbb22:
                      06328 
                      06329   btfss util,5
                      06330   goto gkbb33
                      06331 
                      06332  
                      06333    movlw -.3
                      06334    movwf rev
                      06335 
                      06336  
                      06337    
                      06338    
                      06339    
                      06340    
                      06341    
                      06342    
                      06343  
                      06344  LSHIFT util
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06345    
                      06346    
                      06347    
                      06348    
                      06349    
                      06350    bcf STATUS,C
                      06351    rlf util,w
                      06352    addwf moutH,f
                      06353 
                      06354   goto kkbbg3
                      06355  gkbb33:
                      06356 
                      06357   btfss util,4
                      06358   goto gkbb44
                      06359 
                      06360  
                      06361    movlw -.4
                      06362    movwf rev
                      06363 
                      06364  
                      06365 
                      06366 
                      06367 
                      06368 
                      06369  
                      06370  
                      06371  
                      06372  
                      06373  LSHIFT util
                      06374 
                      06375 
                      06376 
                      06377 
                      06378    bcf STATUS,C
                      06379    rlf util,w
                      06380    addwf moutH,f
                      06381 
                      06382   goto kkbbg3
                      06383  gkbb44:
                      06384 
                      06385   btfss util,3
                      06386   goto gkbb55
                      06387 
                      06388  
                      06389    movlw -.5
                      06390    movwf rev
                      06391 
                      06392  
                      06393  
                      06394 
                      06395 
                      06396 
                      06397 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06398 
                      06399  LSHIFT util
                      06400  LSHIFT util
                      06401  LSHIFT util
                      06402   
                      06403 
                      06404 
                      06405    bcf STATUS,C
                      06406    rlf util,w
                      06407    addwf moutH,f
                      06408    goto kkbbg3
                      06409  gkbb55:
                      06410 
                      06411   btfss util,2
                      06412   goto gkbb66
                      06413 
                      06414  
                      06415    movlw -.6
                      06416    movwf rev
                      06417 
                      06418  
                      06419   
                      06420 
                      06421 
                      06422 
                      06423 
                      06424   
                      06425   
                      06426  LSHIFT util
                      06427  LSHIFT util
                      06428  LSHIFT util
                      06429  LSHIFT util
                      06430  
                      06431 
                      06432  
                      06433  
                      06434  
                      06435 
                      06436 
                      06437 
                      06438    bcf STATUS,C
                      06439    rlf util,w
                      06440    addwf moutH,f
                      06441    goto kkbbg3
                      06442 
                      06443  gkbb66:
                      06444 
                      06445   btfss util,1
                      06446   goto gkbb77
                      06447 
                      06448  
                      06449    movlw -.7
                      06450    movwf rev
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06451 
                      06452 
                      06453 
                      06454 
                      06455 
                      06456 
                      06457 
                      06458  btfss util,1
                      06459   goto ncrre
                      06460   movlw .128
                      06461   addwf moutH,f
                      06462 ncrre: 
                      06463   btfss util,0
                      06464   goto kkbbg3
                      06465   movlw .64
                      06466   addwf moutH,f
                      06467   goto kkbbg3
                      06468 gkbb77:
                      06469  
                      06470   btfss util,0
                      06471   goto gkbb88
                      06472 
                      06473  
                      06474    movlw -.8
                      06475    movwf rev
                      06476 
                      06477  
                      06478  
                      06479   
                      06480   movlw .128
                      06481   addwf moutH,f
                      06482  
                      06483   goto kkbbg3
                      06484 gkbb88:
                      06485  
                      06486    movlw -.9
                      06487    movwf rev
                      06488 kkbbg3:
                      06489 
                      06490  
                      06491  
                      06492  
                      06493  movf moutH,f
                      06494  btfsc STATUS,Z
                      06495  goto nrndmg00
                      06496  
                      06497 normaa:
                      06498  
                      06499  movf moutH,w 
                      06500  btfsc STATUS,Z
                      06501  goto normaout
                      06502 
                      06503 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06504 
                      06505 
                      06506  
                      06507  
                      06508  
                      06509  
                      06510  
                      06511  
                      06512  
                      06513  
                      06514  
                      06515  
                      06516  
                      06517  
                      06518  
                      06519  
                      06520  RSHIFT moutH                                                                                   
                      06521                                                                                         
                      06522                                                                                         
                      06523                                                                                         
                      06524                                                                                         
                      06525                                                                                         
                      06526                                                                                         
                      06527                                                                                         
                      06528                                                                                         
                      06529                                                                                         
                      06530                                                                                         
                      06531  rrf moutL,f 
                      06532 
                      06533  
                      06534  incf rev,f 
                      06535  
                      06536  goto normaa
                      06537  
                      06538  
                      06539  
                      06540 normaout:
                      06541  
                      06542  btfss STATUS,C 
                      06543  goto nrndmg00
                      06544 
                      06545   
                      06546   incf moutL,f
                      06547 
                      06548  
                      06549  
                      06550   btfss STATUS,Z
                      06551   goto nrndmg00
                      06552  
                      06553   
                      06554  
                      06555  
                      06556  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06557  
                      06558  
                      06559   incf moutH,f
                      06560  
                      06561  
                      06562   incf rev,f
                      06563  
                      06564   movlw .128
                      06565   movwf moutL
                      06566  
                      06567 nrndmg00:
                      06568  
                      06569  
                      06570  
                      06571  
                      06572 
                      06573  
                      06574  
                      06575  bcf moutL,7
                      06576  
                      06577  
                      06578  btfsc neg,0
                      06579  bsf moutL,7
                      06580  
                      06581  
                      06582  movf moutL,w
                      06583  PUSH
                      06584  
                      06585  movf rev,w
                      06586  PUSH
                      06587  
                      06588  return
                      06589  
                      06590 look_core: 
                      06591  movlw high FPCoreTbk 
                      06592  movwf PCLATH 
                      06593  movlw low FPCoreTbk
                      06594  addwf mout,w 
                      06595  btfsc STATUS,C 
                      06596  incf PCLATH,f 
                      06597  movwf PCL 
                      06598 FPCoreTbk: 
                      06599  retlw .0
                      06600  retlw .224
                      06601  retlw .186
                      06602  retlw .142
                      06603  retlw .93 
                      06604  retlw .39
                      06605  retlw .235
                      06606  retlw .170
                      06607  retlw .100
                      06608  retlw .25
                      06609  retlw .200
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06610  retlw .115
                      06611  retlw .25 
                      06612  retlw .186
                      06613  retlw .86
                      06614  retlw .237
                      06615  retlw .129
                      06616  retlw .15
                      06617  retlw .152
                      06618  retlw .30
                      06619  retlw .159
                      06620  retlw .27
                      06621  retlw .148
                      06622  retlw .8
                      06623  retlw .120
                      06624  retlw .228
                      06625  retlw .76
                      06626  retlw .176
                      06627  retlw .16
                      06628  retlw .108
                      06629  retlw .197
                      06630  retlw .32
                      06631  retlw .106
                      06632  retlw .183
                      06633  retlw .2
                      06634  retlw .70
                      06635  retlw .137
                      06636  retlw .199
                      06637  retlw .32
                      06638  retlw .58
                      06639  retlw .111
                      06640  retlw .160
                      06641  retlw .206
                      06642  retlw .248
                      06643  retlw .32
                      06644  retlw .68
                      06645  retlw .101
                      06646  retlw .131
                      06647  retlw .157
                      06648  retlw .181
                      06649  retlw .202
                      06650  retlw .219
                      06651  retlw .234
                      06652  retlw .246
                      06653  retlw .200
                      06654  retlw .8
                      06655  retlw .8
                      06656  retlw .16
                      06657  retlw .6
                      06658  retlw .8
                      06659  retlw .250
                      06660  retlw .239
                      06661  retlw .226
                      06662  retlw .210
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06663  retlw .193
                      06664  retlw .171
                      06665  retlw .148
                      06666  retlw .122
                      06667  retlw .94
                      06668  retlw .63
                      06669  retlw .30
                      06670  retlw .250
                      06671  retlw .212
                      06672  retlw .171
                      06673  retlw .129
                      06674  retlw .83
                      06675  retlw .36
                      06676  retlw .242
                      06677  retlw .190
                      06678  retlw .136
                      06679  retlw .80
                      06680  retlw .21
                      06681  retlw .217
                      06682  retlw .154
                      06683  retlw .89
                      06684  retlw .22
                      06685  retlw .209
                      06686  retlw .138
                      06687  retlw .64
                      06688  retlw .245
                      06689  retlw .168
                      06690  retlw .88
                      06691  retlw .16
                      06692  retlw .180
                      06693  retlw .95
                      06694  retlw .8
                      06695  retlw .175
                      06696  retlw .84
                      06697  retlw .247
                      06698  retlw .153
                      06699  retlw .56
                      06700  retlw .214
                      06701  retlw .114
                      06702  retlw .12
                      06703  retlw .165
                      06704  retlw .59
                      06705  retlw .208
                      06706  retlw .99
                      06707  retlw .245
                      06708  retlw .133
                      06709  retlw .19
                      06710  retlw .159
                      06711  retlw .42
                      06712  retlw .179
                      06713  retlw .59
                      06714  retlw .193
                      06715  retlw .69
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06716  retlw .200
                      06717  retlw .73
                      06718  retlw .201
                      06719  retlw .70
                      06720  retlw .195
                      06721  retlw .62
                      06722  retlw .183
                      06723  retlw .47
                      06724  retlw .165
                      06725  retlw .27
                      06726  retlw .142 
                      06727 
                      06728 
                      06729 look_core_hi: 
                      06730  movlw high FPCoreTblHi 
                      06731  movwf PCLATH 
                      06732  movlw low FPCoreTblHi 
                      06733  addwf mout,w 
                      06734  btfsc STATUS,C 
                      06735  incf PCLATH,f 
                      06736  movwf PCL 
                      06737  
                      06738 
                      06739 
                      06740 #undefine moutH
                      06741 
                      06742 
                      06743 #undefine moutL
                      06744 
                      06745 
                      06746 #undefine mout
                      06747 
                      06748 
                      06749 #undefine rev
                      06750 
                      06751 
                      06752 #undefine neg
                      06753 
                      06754 
                      06755 #undefine exam
                      06756 
                      06757 
                      06758 #undefine util
                      06759 
                      06760 
                      06761 #undefine karg1
                      06762 
                      06763 
                      06764 #undefine arg1
                      06765 
                      06766 
                      06767 #define moutH sfploc00+1
                      06768 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06769 
                      06770 #define moutL sfploc01+1
                      06771 
                      06772 
                      06773 #define mout sfploc02+1
                      06774 
                      06775 
                      06776 #define rev sfploc03+1
                      06777 
                      06778 
                      06779 #define neg sfploc04+1
                      06780 
                      06781 
                      06782 #define exam sfploc05+1
                      06783 
                      06784 
                      06785 #define util sfploc06+1
                      06786 
                      06787 
                      06788 #define karg1 sfploc07+1
                      06789 
                      06790 
                      06791 #define arg1 sfploc08+1
                      06792 
                      06793 
                      06794 logf0:
                      06795 #endif
                      06796 #endif
                      06797 
                      06798 
                      06799  
                      06800  
                      06801  
                      06802  
                      06803  
                      06804  
                      06805  
0000                  06806 hllDEAAA: 
                      06807 
                      06808 
                      06809  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      06810  
0002   ???? ????      06811  banksel arg1
0004   00??           06812  movwf util 
                      06813 
                      06814 
                      06815  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   00??           06816  movwf mout 
                      06817 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06818 
                      06819 
                      06820 
0008   08??           06821  movf mout,f
0009   1D03           06822  btfss STATUS,Z
000A   2???           06823  goto hllEEAAA
                      06824 
                      06825 
                      06826 
000B   08??           06827  movf util,f
000C   1D03           06828  btfss STATUS,Z
000D   2???           06829  goto hllEEAAA 
                      06830 
                      06831 
                      06832 
                      06833 
000E   3080           06834  movlw .128
                      06835  PUSH
000F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0010   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      06836  PUSH
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      06837  
                      06838 
                      06839 
0013   0008           06840  return 
                      06841 
0014                  06842 hllEEAAA:
                      06843 
                      06844 
0014   2???           06845  call hllDFAAA 
0015   00??           06846  movwf moutL 
                      06847 
                      06848 
0016   08??           06849  movf mout,w
0017   2???           06850  call hllDFAAA_hi
0018   00??           06851  movwf moutH 
                      06852 
                      06853  
                      06854 
                      06855  
0019   01??           06856  clrf neg
                      06857  
                      06858  
001A   1F80           06859  btfss util,7
001B   2???           06860  goto hllFEAAA
                      06861 
                      06862  
001C   1400           06863  bsf neg,0
                      06864  
                      06865  
001D   09??           06866  comf util,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06867  
                      06868  
001E   0A??           06869  incf util,f 
                      06870 
                      06871 
                      06872  
001F                  06873 hllFEAAA:
                      06874 
001F   1B80           06875  btfsc util,7
0020   2???           06876  goto hllGEAAA
0021   1B00           06877  btfsc util,6
0022   2???           06878  goto hllHEAAA
0023   1A80           06879  btfsc util,5
0024   2???           06880  goto hllIEAAA
0025   1A00           06881  btfsc util,4
0026   2???           06882  goto hllJEAAA
0027   1980           06883  btfsc util,3
0028   2???           06884  goto hllKEAAA
0029   1900           06885  btfsc util,2
002A   2???           06886  goto hllLEAAA
002B   1880           06887  btfsc util,1
002C   2???           06888  goto hllMEAAA
002D   1800           06889  btfsc util,0
002E   2???           06890  goto hllNEAAA
002F   2???           06891  goto hllOEAAA
                      06892  
                      06893  
0030                  06894 hllGEAAA:
                      06895 
                      06896 
                      06897 
                      06898 
                      06899 
                      06900 
                      06901 
                      06902  RSHIFT moutH
0030   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0031   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06903  
                      06904  
                      06905  
                      06906  
                      06907 
                      06908 
0032   0C??           06909  rrf moutL
0033                  06910 hllHEAAA:
                      06911  
                      06912  
                      06913  
                      06914  
                      06915  
                      06916  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06917  RSHIFT moutH
0033   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0034   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06918  
                      06919  
                      06920  
                      06921  
                      06922  
                      06923  
                      06924  
                      06925  
0035   0C??           06926  rrf moutL
0036                  06927 hllIEAAA:
                      06928  
                      06929  
                      06930  
                      06931  
                      06932  
                      06933  RSHIFT moutH
0036   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0037   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06934  
                      06935  
                      06936  
                      06937  
                      06938  
                      06939  
0038   0C??           06940  rrf moutL
0039                  06941 hllJEAAA:
                      06942  
                      06943  
                      06944  
                      06945  
                      06946  
                      06947  
                      06948  
                      06949  RSHIFT moutH
0039   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
003A   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06950  
                      06951  
                      06952  
                      06953  
                      06954  
                      06955  
                      06956  
003B   0C??           06957  rrf moutL
003C                  06958 hllKEAAA:
                      06959  
                      06960  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06961  
                      06962  
                      06963  RSHIFT moutH
003C   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
003D   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06964   
                      06965  
                      06966  
                      06967  
                      06968  
003E   0C??           06969  rrf moutL
003F                  06970 hllLEAAA:
                      06971  
                      06972  
                      06973  
                      06974  
                      06975  
                      06976  RSHIFT moutH
003F   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0040   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06977  
                      06978  
                      06979  
                      06980  
                      06981  
                      06982  
0041   0C??           06983  rrf moutL
0042                  06984 hllMEAAA:
                      06985  
                      06986  
                      06987  
                      06988  
                      06989  
                      06990  
                      06991  
                      06992  RSHIFT moutH
0042   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0043   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      06993  
                      06994  
                      06995  
                      06996  
                      06997  
                      06998  
                      06999  
                      07000  
                      07001  
                      07002  
0044   0C??           07003  rrf moutL
0045                  07004 hllNEAAA:
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07005  
                      07006  
                      07007  
                      07008  
                      07009  
                      07010  
                      07011  RSHIFT moutH
0045   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0046   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07012  
                      07013  
                      07014  
                      07015  
                      07016  
                      07017  
0047   0C??           07018  rrf moutL
                      07019 
                      07020  
0048   1C03           07021  btfss STATUS,C
0049   2???           07022  goto hllOEAAA
                      07023  
                      07024  
004A   0A??           07025  incf moutL,f
                      07026  
                      07027  
004B   08??           07028  movf moutL,f
004C   1903           07029  btfsc STATUS,Z
                      07030  
004D   0A??           07031  incf moutH,f
004E                  07032 hllOEAAA:
                      07033 
                      07034  
                      07035  
004E   1C00           07036   btfss neg,0
004F   2???           07037   goto hllPEAAA
                      07038  
0050   09??           07039   comf moutH,f
                      07040  
0051   09??           07041   comf moutL,f
                      07042  
0052   0A??           07043   incf moutL,f
                      07044  
0053   1903           07045   btfsc STATUS,Z
                      07046  
0054   0A??           07047   incf moutH,f
0055                  07048  hllPEAAA:
                      07049  
                      07050  
0055   1F80           07051   btfss util,7
0056   2???           07052   goto hllQEAAA
                      07053  
0057   30FF           07054   movlw -.1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0058   00??           07055   movwf rev
                      07056  
0059   08??           07057   movf util,w
005A   07??           07058   addwf moutH,f
                      07059  
005B   2???           07060   goto hllZEAAA
005C                  07061  hllQEAAA:
                      07062 
005C   1F00           07063   btfss util,6
005D   2???           07064   goto hllREAAA
                      07065 
                      07066  
005E   30FE           07067    movlw -.2
005F   00??           07068    movwf rev
                      07069 
                      07070  
0060   1003           07071   bcf STATUS,C
0061   0D??           07072   rlf util,w
0062   07??           07073   addwf moutH,f
0063   2???           07074   goto hllZEAAA
0064                  07075  hllREAAA:
                      07076 
0064   1E80           07077   btfss util,5
0065   2???           07078   goto hllSEAAA
                      07079 
                      07080  
0066   30FD           07081    movlw -.3
0067   00??           07082    movwf rev
                      07083 
                      07084  
                      07085    
                      07086    
                      07087    
                      07088    
                      07089    
                      07090    
                      07091  
                      07092  LSHIFT util
0068   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0069   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07093    
                      07094    
                      07095    
                      07096    
                      07097    
006A   1003           07098    bcf STATUS,C
006B   0D??           07099    rlf util,w
006C   07??           07100    addwf moutH,f
                      07101 
006D   2???           07102   goto hllZEAAA
006E                  07103  hllSEAAA:
                      07104 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006E   1E00           07105   btfss util,4
006F   2???           07106   goto hllTEAAA
                      07107 
                      07108  
0070   30FC           07109    movlw -.4
0071   00??           07110    movwf rev
                      07111 
                      07112  
                      07113 
                      07114 
                      07115 
                      07116 
                      07117  
                      07118  
                      07119  
                      07120  
                      07121  LSHIFT util
0072   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0073   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07122 
                      07123 
                      07124 
                      07125 
0074   1003           07126    bcf STATUS,C
0075   0D??           07127    rlf util,w
0076   07??           07128    addwf moutH,f
                      07129 
0077   2???           07130   goto hllZEAAA
0078                  07131  hllTEAAA:
                      07132 
0078   1D80           07133   btfss util,3
0079   2???           07134   goto hllUEAAA
                      07135 
                      07136  
007A   30FB           07137    movlw -.5
007B   00??           07138    movwf rev
                      07139 
                      07140  
                      07141  
                      07142 
                      07143 
                      07144 
                      07145 
                      07146 
                      07147  LSHIFT util
007C   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
007D   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07148  LSHIFT util
007E   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
007F   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07149  LSHIFT util
0080   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0081   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07150   
                      07151 
                      07152 
0082   1003           07153    bcf STATUS,C
0083   0D??           07154    rlf util,w
0084   07??           07155    addwf moutH,f
0085   2???           07156    goto hllZEAAA
0086                  07157  hllUEAAA:
                      07158 
0086   1D00           07159   btfss util,2
0087   2???           07160   goto hllVEAAA
                      07161 
                      07162  
0088   30FA           07163    movlw -.6
0089   00??           07164    movwf rev
                      07165 
                      07166  
                      07167   
                      07168 
                      07169 
                      07170 
                      07171 
                      07172   
                      07173   
                      07174  LSHIFT util
008A   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
008B   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07175  LSHIFT util
008C   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
008D   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07176  LSHIFT util
008E   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
008F   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07177  LSHIFT util
0090   1003               M  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0091   0D??               M  rlf sfploc06,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07178  
                      07179 
                      07180  
                      07181  
                      07182  
                      07183 
                      07184 
                      07185 
0092   1003           07186    bcf STATUS,C
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0093   0D??           07187    rlf util,w
0094   07??           07188    addwf moutH,f
0095   2???           07189    goto hllZEAAA
                      07190 
0096                  07191  hllVEAAA:
                      07192 
0096   1C80           07193   btfss util,1
0097   2???           07194   goto hllXEAAA
                      07195 
                      07196  
0098   30F9           07197    movlw -.7
0099   00??           07198    movwf rev
                      07199 
                      07200 
                      07201 
                      07202 
                      07203 
                      07204 
                      07205 
009A   1C80           07206  btfss util,1
009B   2???           07207   goto hllWEAAA
009C   3080           07208   movlw .128
009D   07??           07209   addwf moutH,f
009E                  07210 hllWEAAA: 
009E   1C00           07211   btfss util,0
009F   2???           07212   goto hllZEAAA
00A0   3040           07213   movlw .64
00A1   07??           07214   addwf moutH,f
00A2   2???           07215   goto hllZEAAA
00A3                  07216 hllXEAAA:
                      07217  
00A3   1C00           07218   btfss util,0
00A4   2???           07219   goto hllYEAAA
                      07220 
                      07221  
00A5   30F8           07222    movlw -.8
00A6   00??           07223    movwf rev
                      07224 
                      07225  
                      07226  
                      07227   
00A7   3080           07228   movlw .128
00A8   07??           07229   addwf moutH,f
                      07230  
00A9   2???           07231   goto hllZEAAA
00AA                  07232 hllYEAAA:
                      07233  
00AA   30F7           07234    movlw -.9
00AB   00??           07235    movwf rev
00AC                  07236 hllZEAAA:
                      07237 
                      07238  
                      07239  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07240  
00AC   08??           07241  movf moutH,f
00AD   1903           07242  btfsc STATUS,Z
00AE   2???           07243  goto hllCFAAA
                      07244  
00AF                  07245 hllAFAAA:
                      07246  
00AF   08??           07247  movf moutH,w 
00B0   1903           07248  btfsc STATUS,Z
00B1   2???           07249  goto hllBFAAA
                      07250 
                      07251 
                      07252 
                      07253 
                      07254  
                      07255  
                      07256  
                      07257  
                      07258  
                      07259  
                      07260  
                      07261  
                      07262  
                      07263  
                      07264  
                      07265  
                      07266  
                      07267  
                      07268  RSHIFT moutH                                                                                   
00B2   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
00B3   0C??               M  rrf sfploc00,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      07269                                                                                         
                      07270                                                                                         
                      07271                                                                                         
                      07272                                                                                         
                      07273                                                                                         
                      07274                                                                                         
                      07275                                                                                         
                      07276                                                                                         
                      07277                                                                                         
                      07278                                                                                         
00B4   0C??           07279  rrf moutL,f 
                      07280 
                      07281  
00B5   0A??           07282  incf rev,f 
                      07283  
00B6   2???           07284  goto hllAFAAA
                      07285  
                      07286  
                      07287  
00B7                  07288 hllBFAAA:
                      07289  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B7   1C03           07290  btfss STATUS,C 
00B8   2???           07291  goto hllCFAAA
                      07292 
                      07293   
00B9   0A??           07294   incf moutL,f
                      07295 
                      07296  
                      07297  
00BA   1D03           07298   btfss STATUS,Z
00BB   2???           07299   goto hllCFAAA
                      07300  
                      07301   
                      07302  
                      07303  
                      07304  
                      07305  
                      07306  
00BC   0A??           07307   incf moutH,f
                      07308  
                      07309  
00BD   0A??           07310   incf rev,f
                      07311  
00BE   3080           07312   movlw .128
00BF   00??           07313   movwf moutL
                      07314  
00C0                  07315 hllCFAAA:
                      07316  
                      07317  
                      07318  
                      07319  
                      07320 
                      07321  
                      07322  
00C0   1380           07323  bcf moutL,7
                      07324  
                      07325  
00C1   1800           07326  btfsc neg,0
00C2   1780           07327  bsf moutL,7
                      07328  
                      07329  
00C3   08??           07330  movf moutL,w
                      07331  PUSH
00C4   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C5   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      07332  
00C6   08??           07333  movf rev,w
                      07334  PUSH
00C7   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C8   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      07335  
00C9   0008           07336  return
                      07337  
00CA                  07338 hllDFAAA: 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CA   30??           07339  movlw high hllEFAAA 
00CB   008A           07340  movwf PCLATH 
00CC   30??           07341  movlw low hllEFAAA
00CD   07??           07342  addwf mout,w 
00CE   1803           07343  btfsc STATUS,C 
00CF   0A8A           07344  incf PCLATH,f 
00D0   0082           07345  movwf PCL 
00D1                  07346 hllEFAAA: 
00D1   3400           07347  retlw .0
00D2   34E0           07348  retlw .224
00D3   34BA           07349  retlw .186
00D4   348E           07350  retlw .142
00D5   345D           07351  retlw .93 
00D6   3427           07352  retlw .39
00D7   34EB           07353  retlw .235
00D8   34AA           07354  retlw .170
00D9   3464           07355  retlw .100
00DA   3419           07356  retlw .25
00DB   34C8           07357  retlw .200
00DC   3473           07358  retlw .115
00DD   3419           07359  retlw .25 
00DE   34BA           07360  retlw .186
00DF   3456           07361  retlw .86
00E0   34ED           07362  retlw .237
00E1   3481           07363  retlw .129
00E2   340F           07364  retlw .15
00E3   3498           07365  retlw .152
00E4   341E           07366  retlw .30
00E5   349F           07367  retlw .159
00E6   341B           07368  retlw .27
00E7   3494           07369  retlw .148
00E8   3408           07370  retlw .8
00E9   3478           07371  retlw .120
00EA   34E4           07372  retlw .228
00EB   344C           07373  retlw .76
00EC   34B0           07374  retlw .176
00ED   3410           07375  retlw .16
00EE   346C           07376  retlw .108
00EF   34C5           07377  retlw .197
00F0   3420           07378  retlw .32
00F1   346A           07379  retlw .106
00F2   34B7           07380  retlw .183
00F3   3402           07381  retlw .2
00F4   3446           07382  retlw .70
00F5   3489           07383  retlw .137
00F6   34C7           07384  retlw .199
00F7   3420           07385  retlw .32
00F8   343A           07386  retlw .58
00F9   346F           07387  retlw .111
00FA   34A0           07388  retlw .160
00FB   34CE           07389  retlw .206
00FC   34F8           07390  retlw .248
00FD   3420           07391  retlw .32
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FE   3444           07392  retlw .68
00FF   3465           07393  retlw .101
0100   3483           07394  retlw .131
0101   349D           07395  retlw .157
0102   34B5           07396  retlw .181
0103   34CA           07397  retlw .202
0104   34DB           07398  retlw .219
0105   34EA           07399  retlw .234
0106   34F6           07400  retlw .246
0107   34C8           07401  retlw .200
0108   3408           07402  retlw .8
0109   3408           07403  retlw .8
010A   3410           07404  retlw .16
010B   3406           07405  retlw .6
010C   3408           07406  retlw .8
010D   34FA           07407  retlw .250
010E   34EF           07408  retlw .239
010F   34E2           07409  retlw .226
0110   34D2           07410  retlw .210
0111   34C1           07411  retlw .193
0112   34AB           07412  retlw .171
0113   3494           07413  retlw .148
0114   347A           07414  retlw .122
0115   345E           07415  retlw .94
0116   343F           07416  retlw .63
0117   341E           07417  retlw .30
0118   34FA           07418  retlw .250
0119   34D4           07419  retlw .212
011A   34AB           07420  retlw .171
011B   3481           07421  retlw .129
011C   3453           07422  retlw .83
011D   3424           07423  retlw .36
011E   34F2           07424  retlw .242
011F   34BE           07425  retlw .190
0120   3488           07426  retlw .136
0121   3450           07427  retlw .80
0122   3415           07428  retlw .21
0123   34D9           07429  retlw .217
0124   349A           07430  retlw .154
0125   3459           07431  retlw .89
0126   3416           07432  retlw .22
0127   34D1           07433  retlw .209
0128   348A           07434  retlw .138
0129   3440           07435  retlw .64
012A   34F5           07436  retlw .245
012B   34A8           07437  retlw .168
012C   3458           07438  retlw .88
012D   3410           07439  retlw .16
012E   34B4           07440  retlw .180
012F   345F           07441  retlw .95
0130   3408           07442  retlw .8
0131   34AF           07443  retlw .175
0132   3454           07444  retlw .84
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0133   34F7           07445  retlw .247
0134   3499           07446  retlw .153
0135   3438           07447  retlw .56
0136   34D6           07448  retlw .214
0137   3472           07449  retlw .114
0138   340C           07450  retlw .12
0139   34A5           07451  retlw .165
013A   343B           07452  retlw .59
013B   34D0           07453  retlw .208
013C   3463           07454  retlw .99
013D   34F5           07455  retlw .245
013E   3485           07456  retlw .133
013F   3413           07457  retlw .19
0140   349F           07458  retlw .159
0141   342A           07459  retlw .42
0142   34B3           07460  retlw .179
0143   343B           07461  retlw .59
0144   34C1           07462  retlw .193
0145   3445           07463  retlw .69
0146   34C8           07464  retlw .200
0147   3449           07465  retlw .73
0148   34C9           07466  retlw .201
0149   3446           07467  retlw .70
014A   34C3           07468  retlw .195
014B   343E           07469  retlw .62
014C   34B7           07470  retlw .183
014D   342F           07471  retlw .47
014E   34A5           07472  retlw .165
014F   341B           07473  retlw .27
0150   348E           07474  retlw .142 
                      07475 
                      07476 
0151                  07477 hllDFAAA_hi: 
0151   30??           07478  movlw high FPCoreTblHi 
0152   008A           07479  movwf PCLATH 
0153   30??           07480  movlw low FPCoreTblHi 
0154   07??           07481  addwf mout,w 
0155   1803           07482  btfsc STATUS,C 
0156   0A8A           07483  incf PCLATH,f 
0157   0082           07484  movwf PCL 
                      07485  
                      07486 
                      07487 
                      07488 #undefine moutH
                      07489 
                      07490 
                      07491 #undefine moutL
                      07492 
                      07493 
                      07494 #undefine mout
                      07495 
                      07496 
                      07497 #undefine rev
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07498 
                      07499 
                      07500 #undefine neg
                      07501 
                      07502 
                      07503 #undefine exam
                      07504 
                      07505 
                      07506 #undefine util
                      07507 
                      07508 
                      07509 #undefine karg1
                      07510 
                      07511 
                      07512 #undefine arg1
0158                  07513 FPCoreTblHi: 
0158   3400           07514  retlw .0
0159   3402           07515  retlw .2
015A   3405           07516  retlw .5
015B   3408           07517  retlw .8
015C   340B           07518  retlw .11
015D   340E           07519  retlw .14
015E   3410           07520  retlw .16
015F   3413           07521  retlw .19
0160   3416           07522  retlw .22
0161   3419           07523  retlw .25
0162   341B           07524  retlw .27
0163   341E           07525  retlw .30
0164   3421           07526  retlw .33
0165   3423           07527  retlw .35
0166   3426           07528  retlw .38
0167   3428           07529  retlw .40
0168   342B           07530  retlw .43
0169   342E           07531  retlw .46
016A   3430           07532  retlw .48
016B   3433           07533  retlw .51
016C   3435           07534  retlw .53
016D   3438           07535  retlw .56
016E   343A           07536  retlw .58
016F   343D           07537  retlw .61
0170   343F           07538  retlw .63
0171   3441           07539  retlw .65
0172   3444           07540  retlw .68
0173   3446           07541  retlw .70
0174   3449           07542  retlw .73
0175   344B           07543  retlw .75
0176   344D           07544  retlw .77
0177   3450           07545  retlw .80
0178   3452           07546  retlw .82
0179   3454           07547  retlw .84
017A   3457           07548  retlw .87
017B   3459           07549  retlw .89
017C   345B           07550  retlw .91
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

017D   345D           07551  retlw .93
017E   3460           07552  retlw .96
017F   3462           07553  retlw .98
0180   3464           07554  retlw .100
0181   3466           07555  retlw .102
0182   3468           07556  retlw .104
0183   346A           07557  retlw .106
0184   346D           07558  retlw .109
0185   346F           07559  retlw .111
0186   3471           07560  retlw .113
0187   3473           07561  retlw .115
0188   3475           07562  retlw .117
0189   3477           07563  retlw .119
018A   3479           07564  retlw .121
018B   347B           07565  retlw .123
018C   347D           07566  retlw .125
018D   347F           07567  retlw .127
018E   3481           07568  retlw .129
018F   3484           07569  retlw .132
0190   3486           07570  retlw .134
0191   3488           07571  retlw .136
0192   348A           07572  retlw .138
0193   348C           07573  retlw .140
0194   348D           07574  retlw .141
0195   348F           07575  retlw .143
0196   3491           07576  retlw .145
0197   3493           07577  retlw .147
0198   3495           07578  retlw .149
0199   3497           07579  retlw .151
019A   3499           07580  retlw .153
019B   349B           07581  retlw .155
019C   349D           07582  retlw .157
019D   349F           07583  retlw .159
019E   34A1           07584  retlw .161
019F   34A2           07585  retlw .162
01A0   34A4           07586  retlw .164
01A1   34A6           07587  retlw .166
01A2   34A8           07588  retlw .168
01A3   34AA           07589  retlw .170
01A4   34AC           07590  retlw .172
01A5   34AD           07591  retlw .173
01A6   34AF           07592  retlw .175
01A7   34B1           07593  retlw .177
01A8   34B3           07594  retlw .179
01A9   34B5           07595  retlw .181
01AA   34B6           07596  retlw .182
01AB   34B8           07597  retlw .184
01AC   34BA           07598  retlw .186
01AD   34BC           07599  retlw .188
01AE   34BD           07600  retlw .189
01AF   34BF           07601  retlw .191
01B0   34C1           07602  retlw .193
01B1   34C2           07603  retlw .194
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B2   34C4           07604  retlw .196
01B3   34C6           07605  retlw .198
01B4   34C8           07606  retlw .200
01B5   34C9           07607  retlw .201
01B6   34CB           07608  retlw .203
01B7   34CD           07609  retlw .205
01B8   34CE           07610  retlw .206
01B9   34D0           07611  retlw .208
01BA   34D1           07612  retlw .209
01BB   34D3           07613  retlw .211
01BC   34D5           07614  retlw .213
01BD   34D6           07615  retlw .214
01BE   34D8           07616  retlw .216
01BF   34DA           07617  retlw .218
01C0   34DB           07618  retlw .219
01C1   34DD           07619  retlw .221
01C2   34DE           07620  retlw .222
01C3   34E0           07621  retlw .224
01C4   34E1           07622  retlw .225
01C5   34E3           07623  retlw .227
01C6   34E5           07624  retlw .229
01C7   34E6           07625  retlw .230
01C8   34E8           07626  retlw .232
01C9   34E9           07627  retlw .233
01CA   34EB           07628  retlw .235
01CB   34EC           07629  retlw .236
01CC   34EE           07630  retlw .238
01CD   34EF           07631  retlw .239
01CE   34F1           07632  retlw .241
01CF   34F2           07633  retlw .242
01D0   34F4           07634  retlw .244
01D1   34F5           07635  retlw .245
01D2   34F7           07636  retlw .247
01D3   34F8           07637  retlw .248
01D4   34FA           07638  retlw .250
01D5   34FB           07639  retlw .251
01D6   34FD           07640  retlw .253
01D7   34FE           07641  retlw .254
                      07642 
                      07643  
                      07644 
                      07645 
                      07646 
                      07647 
                      07648 
                      07649 
                      07650 
                      07651  
                      07652  
                      07653 
                      07654 sfp_mul CODE
                      07655 
                      07656 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07657 
                      07658 
                      07659 #define savelsb sfploc00
                      07660 
                      07661 
                      07662 #define iterator sfploc01
                      07663 
                      07664 
                      07665 #define hi_byte sfploc02
                      07666 
                      07667 
                      07668 #define make_mout sfploc03
                      07669 
                      07670 
                      07671 #define factor2 sfploc04
                      07672 
                      07673 
                      07674 #define factor1 sfploc05
                      07675 
                      07676 
                      07677 #define mulhi sfploc06
                      07678 
                      07679 
                      07680 #define mout sfploc07
                      07681 
                      07682 
                      07683 #define util sfploc08
                      07684 
                      07685 
                      07686 #define neg sfploc09
                      07687 
                      07688 
                      07689 #define ein2 sfploc10
                      07690 
                      07691 
                      07692 #define min2 sfploc11
                      07693 
                      07694 
                      07695 #define ein sfploc12
                      07696 
                      07697 
                      07698 #define min sfploc13
                      07699 
                      07700 
0000                  07701 mulf:  
                      07702 #ifdef HLLMULTITASK
                      07703 #ifdef HLLGUARDsfploc 
                      07704  movf in_isr,f  
                      07705  btfsc STATUS,Z
                      07706  
                      07707 
                      07708 
                      07709  goto mulf0
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07710 
                      07711 
                      07712  
                      07713  POP
                      07714 
                      07715  
                      07716  banksel ein2
                      07717  movwf ein2 
                      07718  xorlw .128 
                      07719  btfss STATUS,Z
                      07720  goto mulf_zokr1
                      07721  movlw .127     
                      07722  
                      07723  andwf HLINDF,w 
                      07724  
                      07725  btfsc STATUS,Z
                      07726  goto mulf_zeer1
                      07727  
                      07728 mulf_zokr1: 
                      07729 
                      07730  
                      07731  
                      07732  clrf neg 
                      07733  
                      07734  
                      07735  
                      07736  POP
                      07737 
                      07738  
                      07739  banksel min2
                      07740  movwf min2 
                      07741  btfsc min2,7
                      07742  bsf neg,1      
                      07743 
                      07744  
                      07745  bcf min2,7 
                      07746 
                      07747  POP
                      07748 
                      07749  banksel ein
                      07750  movwf ein
                      07751  xorlw .128 
                      07752  btfss STATUS,Z
                      07753  goto mulf_zokr2
                      07754  movlw .127
                      07755 
                      07756  andwf HLINDF,w 
                      07757  btfsc STATUS,Z
                      07758  goto mulf_zeer2
                      07759 mulf_zokr2:
                      07760 
                      07761  POP
                      07762 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07763  
                      07764  banksel min
                      07765  movwf min 
                      07766  btfsc min,7
                      07767  bsf neg,0
                      07768 
                      07769  
                      07770  bcf min,7 
                      07771  
                      07772  
                      07773  
                      07774  movfw ein 
                      07775 
                      07776  
                      07777  movwf util 
                      07778 
                      07779  
                      07780  movfw ein2 
                      07781 
                      07782  
                      07783  addwf util,f 
                      07784  
                      07785  
                      07786  movfw min 
                      07787 
                      07788  
                      07789  addlw .128 
                      07790 
                      07791  
                      07792  PUSH
                      07793  banksel min2
                      07794  movfw min2 
                      07795  addlw .128 
                      07796 
                      07797  PUSH
                      07798  goto kmul16 
                      07799 
                      07800 bmul16:
                      07801 
                      07802  
                      07803  POP
                      07804 
                      07805 
                      07806  banksel mout
                      07807  movwf mout 
                      07808 
                      07809  
                      07810  btfss mout,7 
                      07811  goto no_mulf_carry 
                      07812 
                      07813  
                      07814  POP
                      07815 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07816  
                      07817  banksel util
                      07818  incf util,f 
                      07819 
                      07820 
                      07821  
                      07822  andlw .128 
                      07823  btfss STATUS,Z
                      07824  incf mout,f
                      07825 
                      07826  goto mulf_if1_done 
                      07827 
                      07828 
                      07829 no_mulf_carry: 
                      07830 
                      07831  
                      07832  
                      07833  
                      07834  
                      07835  
                      07836 
                      07837  
                      07838  bcf STATUS,C 
                      07839 
                      07840  
                      07841  POP
                      07842 
                      07843  banksel savelsb
                      07844  movwf savelsb
                      07845  
                      07846  
                      07847  andlw .128 
                      07848  btfss STATUS,Z 
                      07849  bsf STATUS,C 
                      07850 
                      07851  
                      07852  
                      07853  banksel mout
                      07854  rlf mout,f 
                      07855 
                      07856  
                      07857  
                      07858  
                      07859  movf savelsb,w
                      07860 
                      07861  banksel mout
                      07862  andlw .64
                      07863  btfss STATUS,Z
                      07864  incf mout,f
                      07865  
                      07866 
                      07867 
                      07868 mulf_if1_done: 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07869 
                      07870  
                      07871  movfw mout 
                      07872 
                      07873  
                      07874  addlw -.128 
                      07875 
                      07876  
                      07877  movwf mout 
                      07878 
                      07879  
                      07880  btfsc neg,0
                      07881  goto ita22nq 
                      07882  btfss neg,1
                      07883  goto mul_sames 
                      07884  goto mul_dif5 
                      07885 ita22nq: 
                      07886  btfsc neg,1
                      07887  goto mul_sames 
                      07888 
                      07889 mul_dif5: 
                      07890 
                      07891  
                      07892  movfw mout 
                      07893 
                      07894  
                      07895  iorlw .128 
                      07896 
                      07897  
                      07898  movwf mout 
                      07899 
                      07900 
                      07901 mul_sames: 
                      07902 
                      07903  
                      07904  movfw mout 
                      07905 
                      07906  
                      07907  PUSH
                      07908 
                      07909  
                      07910  banksel util
                      07911  movfw util 
                      07912  PUSH
                      07913  
                      07914  goto reto9k 
                      07915 
                      07916 mulf_zeer1: 
                      07917 
                      07918  POP
                      07919  POP
                      07920 
                      07921 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07922 mulf_zeer2:
                      07923  POP
                      07924 
                      07925  
                      07926  movlw .128
                      07927  PUSH
                      07928  PUSH
                      07929 
                      07930  
                      07931  
                      07932 reto9k:
                      07933  
                      07934  return
                      07935  
                      07936  
                      07937  
                      07938  
                      07939 kmul16: 
                      07940 
                      07941  POP
                      07942  banksel factor1
                      07943  movwf factor1
                      07944 
                      07945  POP
                      07946  banksel factor2
                      07947  movwf factor2
                      07948 
                      07949 
                      07950  
                      07951  clrf hi_byte
                      07952  
                      07953  clrf make_mout
                      07954  
                      07955  clrf iterator
                      07956 
                      07957 bptz2:
                      07958 
                      07959  
                      07960  btfss factor1,0
                      07961  goto nyyu11
                      07962 
                      07963  
                      07964  
                      07965  movfw factor2
                      07966  addwf make_mout,f
                      07967 
                      07968  
                      07969  btfsc STATUS,C
                      07970  incf hi_byte,f
                      07971 
                      07972 
                      07973 nyyu11:
                      07974  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07975  
                      07976  RSHIFT factor1
                      07977  
                      07978  
                      07979  
                      07980  RSHIFT hi_byte
                      07981  
                      07982  
                      07983  
                      07984  
                      07985  
                      07986  
                      07987  rrf make_mout,f
                      07988 
                      07989 
                      07990  
                      07991  
                      07992  
                      07993  
                      07994  
                      07995  
                      07996  
                      07997  
                      07998  
                      07999  
                      08000  
                      08001  
                      08002  btfsc STATUS,C
                      08003  bsf factor1,7 
                      08004 
                      08005 
                      08006  incf iterator,f
                      08007 
                      08008 
                      08009  movlw .8
                      08010  xorwf iterator,w
                      08011  btfss STATUS,Z
                      08012  goto bptz2
                      08013 
                      08014  
                      08015  movfw factor1 
                      08016  PUSH
                      08017 
                      08018  
                      08019  banksel make_mout
                      08020  movfw make_mout
                      08021  PUSH
                      08022 
                      08023  goto bmul16 
                      08024 
                      08025 
                      08026 
                      08027 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08028 
                      08029 #undefine savelsb
                      08030 
                      08031 
                      08032 #undefine iterator
                      08033 
                      08034 
                      08035 #undefine hi_byte
                      08036 
                      08037 
                      08038 #undefine make_mout
                      08039 
                      08040 
                      08041 #undefine factor2
                      08042 
                      08043 
                      08044 #undefine factor1
                      08045 
                      08046 
                      08047 #undefine mulhi
                      08048 
                      08049 
                      08050 #undefine mout
                      08051 
                      08052 
                      08053 #undefine util
                      08054 
                      08055 
                      08056 #undefine neg
                      08057 
                      08058 
                      08059 #undefine ein2
                      08060 
                      08061 
                      08062 #undefine min2
                      08063 
                      08064 
                      08065 #undefine ein
                      08066 
                      08067 
                      08068 #undefine min
                      08069 
                      08070 
                      08071 #define savelsb sfploc00+1
                      08072 
                      08073 
                      08074 #define iterator sfploc01+1
                      08075 
                      08076 
                      08077 #define hi_byte sfploc02+1
                      08078 
                      08079 
                      08080 #define make_mout sfploc03+1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08081 
                      08082 
                      08083 #define factor2 sfploc04+1
                      08084 
                      08085 
                      08086 #define factor1 sfploc05+1
                      08087 
                      08088 
                      08089 #define mulhi sfploc06+1
                      08090 
                      08091 
                      08092 #define mout sfploc07+1
                      08093 
                      08094 
                      08095 #define util sfploc08+1
                      08096 
                      08097 
                      08098 #define neg sfploc09+1
                      08099 
                      08100 
                      08101 #define ein2 sfploc10+1
                      08102 
                      08103 
                      08104 #define min2 sfploc11+1
                      08105 
                      08106 
                      08107 #define ein sfploc12+1
                      08108 
                      08109 
                      08110 #define min sfploc13+1
                      08111 
                      08112 
                      08113 mulf0:
                      08114 #endif
                      08115 #endif
                      08116 
                      08117 
                      08118  
                      08119  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      08120 
                      08121  
0002   ???? ????      08122  banksel ein2
0004   00??           08123  movwf ein2 
0005   3A80           08124  xorlw .128 
0006   1D03           08125  btfss STATUS,Z
0007   2???           08126  goto hllGFAAA
0008   307F           08127  movlw .127     
                      08128  
0009   0500           08129  andwf HLINDF,w 
                      08130  
000A   1903           08131  btfsc STATUS,Z
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   2???           08132  goto hllOFAAA
                      08133  
000C                  08134 hllGFAAA: 
                      08135 
                      08136  
                      08137  
000C   01??           08138  clrf neg 
                      08139  
                      08140  
                      08141  
                      08142  POP
000D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000E   0384               M  decf FSR,f 
                      08143 
                      08144  
000F   ???? ????      08145  banksel min2
0011   00??           08146  movwf min2 
0012   1B80           08147  btfsc min2,7
0013   1480           08148  bsf neg,1      
                      08149 
                      08150  
0014   1380           08151  bcf min2,7 
                      08152 
                      08153  POP
0015   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0016   0384               M  decf FSR,f 
                      08154 
0017   ???? ????      08155  banksel ein
0019   00??           08156  movwf ein
001A   3A80           08157  xorlw .128 
001B   1D03           08158  btfss STATUS,Z
001C   2???           08159  goto hllHFAAA
001D   307F           08160  movlw .127
                      08161 
001E   0500           08162  andwf HLINDF,w 
001F   1903           08163  btfsc STATUS,Z
0020   2???           08164  goto hllPFAAA
0021                  08165 hllHFAAA:
                      08166 
                      08167  POP
0021   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0022   0384               M  decf FSR,f 
                      08168 
                      08169  
0023   ???? ????      08170  banksel min
0025   00??           08171  movwf min 
0026   1B80           08172  btfsc min,7
0027   1400           08173  bsf neg,0
                      08174 
                      08175  
0028   1380           08176  bcf min,7 
                      08177  
                      08178  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08179  
0029   08??           08180  movfw ein 
                      08181 
                      08182  
002A   00??           08183  movwf util 
                      08184 
                      08185  
002B   08??           08186  movfw ein2 
                      08187 
                      08188  
002C   07??           08189  addwf util,f 
                      08190  
                      08191  
002D   08??           08192  movfw min 
                      08193 
                      08194  
002E   3E80           08195  addlw .128 
                      08196 
                      08197  
                      08198  PUSH
002F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0030   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0031   ???? ????      08199  banksel min2
0033   08??           08200  movfw min2 
0034   3E80           08201  addlw .128 
                      08202 
                      08203  PUSH
0035   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0036   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0037   2???           08204  goto hllRFAAA 
                      08205 
0038                  08206 hllIFAAA:
                      08207 
                      08208  
                      08209  POP
0038   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0039   0384               M  decf FSR,f 
                      08210 
                      08211 
003A   ???? ????      08212  banksel mout
003C   00??           08213  movwf mout 
                      08214 
                      08215  
003D   1F80           08216  btfss mout,7 
003E   2???           08217  goto hllJFAAA 
                      08218 
                      08219  
                      08220  POP
003F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0040   0384               M  decf FSR,f 
                      08221 
                      08222  
0041   ???? ????      08223  banksel util
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0043   0A??           08224  incf util,f 
                      08225 
                      08226 
                      08227  
0044   3980           08228  andlw .128 
0045   1D03           08229  btfss STATUS,Z
0046   0A??           08230  incf mout,f
                      08231 
0047   2???           08232  goto hllKFAAA 
                      08233 
                      08234 
0048                  08235 hllJFAAA: 
                      08236 
                      08237  
                      08238  
                      08239  
                      08240  
                      08241  
                      08242 
                      08243  
0048   1003           08244  bcf STATUS,C 
                      08245 
                      08246  
                      08247  POP
0049   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
004A   0384               M  decf FSR,f 
                      08248 
004B   ???? ????      08249  banksel savelsb
004D   00??           08250  movwf savelsb
                      08251  
                      08252  
004E   3980           08253  andlw .128 
004F   1D03           08254  btfss STATUS,Z 
0050   1403           08255  bsf STATUS,C 
                      08256 
                      08257  
                      08258  
0051   ???? ????      08259  banksel mout
0053   0D??           08260  rlf mout,f 
                      08261 
                      08262  
                      08263  
                      08264  
0054   08??           08265  movf savelsb,w
                      08266 
0055   ???? ????      08267  banksel mout
0057   3940           08268  andlw .64
0058   1D03           08269  btfss STATUS,Z
0059   0A??           08270  incf mout,f
                      08271  
                      08272 
                      08273 
005A                  08274 hllKFAAA: 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08275 
                      08276  
005A   08??           08277  movfw mout 
                      08278 
                      08279  
005B   3E80           08280  addlw -.128 
                      08281 
                      08282  
005C   00??           08283  movwf mout 
                      08284 
                      08285  
005D   1800           08286  btfsc neg,0
005E   2???           08287  goto hllLFAAA 
005F   1C80           08288  btfss neg,1
0060   2???           08289  goto hllNFAAA 
0061   2???           08290  goto hllMFAAA 
0062                  08291 hllLFAAA: 
0062   1880           08292  btfsc neg,1
0063   2???           08293  goto hllNFAAA 
                      08294 
0064                  08295 hllMFAAA: 
                      08296 
                      08297  
0064   08??           08298  movfw mout 
                      08299 
                      08300  
0065   3880           08301  iorlw .128 
                      08302 
                      08303  
0066   00??           08304  movwf mout 
                      08305 
                      08306 
0067                  08307 hllNFAAA: 
                      08308 
                      08309  
0067   08??           08310  movfw mout 
                      08311 
                      08312  
                      08313  PUSH
0068   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0069   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08314 
                      08315  
006A   ???? ????      08316  banksel util
006C   08??           08317  movfw util 
                      08318  PUSH
006D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08319  
006F   2???           08320  goto hllQFAAA 
                      08321 
0070                  08322 hllOFAAA: 
                      08323 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08324  POP
0070   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0071   0384               M  decf FSR,f 
                      08325  POP
0072   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0073   0384               M  decf FSR,f 
                      08326 
                      08327 
0074                  08328 hllPFAAA:
                      08329  POP
0074   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0075   0384               M  decf FSR,f 
                      08330 
                      08331  
0076   3080           08332  movlw .128
                      08333  PUSH
0077   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0078   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08334  PUSH
0079   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08335 
                      08336  
                      08337  
007B                  08338 hllQFAAA:
                      08339  
007B   0008           08340  return
                      08341  
                      08342  
                      08343  
                      08344  
007C                  08345 hllRFAAA: 
                      08346 
                      08347  POP
007C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
007D   0384               M  decf FSR,f 
007E   ???? ????      08348  banksel factor1
0080   00??           08349  movwf factor1
                      08350 
                      08351  POP
0081   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0082   0384               M  decf FSR,f 
0083   ???? ????      08352  banksel factor2
0085   00??           08353  movwf factor2
                      08354 
                      08355 
                      08356  
0086   01??           08357  clrf hi_byte
                      08358  
0087   01??           08359  clrf make_mout
                      08360  
0088   01??           08361  clrf iterator
                      08362 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0089                  08363 hllSFAAA:
                      08364 
                      08365  
0089   1C00           08366  btfss factor1,0
008A   2???           08367  goto hllTFAAA
                      08368 
                      08369  
                      08370  
008B   08??           08371  movfw factor2
008C   07??           08372  addwf make_mout,f
                      08373 
                      08374  
008D   1803           08375  btfsc STATUS,C
008E   0A??           08376  incf hi_byte,f
                      08377 
                      08378 
008F                  08379 hllTFAAA:
                      08380  
                      08381  
                      08382  RSHIFT factor1
008F   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0090   0C??               M  rrf sfploc05,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      08383  
                      08384  
                      08385  
                      08386  RSHIFT hi_byte
0091   1003               M  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
0092   0C??               M  rrf sfploc02,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      08387  
                      08388  
                      08389  
                      08390  
                      08391  
                      08392  
0093   0C??           08393  rrf make_mout,f
                      08394 
                      08395 
                      08396  
                      08397  
                      08398  
                      08399  
                      08400  
                      08401  
                      08402  
                      08403  
                      08404  
                      08405  
                      08406  
                      08407  
0094   1803           08408  btfsc STATUS,C
0095   1780           08409  bsf factor1,7 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08410 
                      08411 
0096   0A??           08412  incf iterator,f
                      08413 
                      08414 
0097   3008           08415  movlw .8
0098   06??           08416  xorwf iterator,w
0099   1D03           08417  btfss STATUS,Z
009A   2???           08418  goto hllSFAAA
                      08419 
                      08420  
009B   08??           08421  movfw factor1 
                      08422  PUSH
009C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08423 
                      08424  
009E   ???? ????      08425  banksel make_mout
00A0   08??           08426  movfw make_mout
                      08427  PUSH
00A1   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A2   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08428 
00A3   2???           08429  goto hllIFAAA 
                      08430 
                      08431 
                      08432 
                      08433 
                      08434 
                      08435 #undefine savelsb
                      08436 
                      08437 
                      08438 #undefine iterator
                      08439 
                      08440 
                      08441 #undefine hi_byte
                      08442 
                      08443 
                      08444 #undefine make_mout
                      08445 
                      08446 
                      08447 #undefine factor2
                      08448 
                      08449 
                      08450 #undefine factor1
                      08451 
                      08452 
                      08453 #undefine mulhi
                      08454 
                      08455 
                      08456 #undefine mout
                      08457 
                      08458 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08459 #undefine util
                      08460 
                      08461 
                      08462 #undefine neg
                      08463 
                      08464 
                      08465 #undefine ein2
                      08466 
                      08467 
                      08468 #undefine min2
                      08469 
                      08470 
                      08471 #undefine ein
                      08472 
                      08473 
                      08474 #undefine min
                      08475 
                      08476  
                      08477 sfp_nex CODE 
                      08478 
                      08479 
                      08480 
                      08481 #define loc001 sfploc00
                      08482 
                      08483 
                      08484 #define loc000 sfploc01
                      08485 
                      08486 
0000                  08487 nextf:  
                      08488 #ifdef HLLMULTITASK
                      08489 #ifdef HLLGUARDsfploc 
                      08490  movf in_isr,f  
                      08491  btfsc STATUS,Z
                      08492  
                      08493 
                      08494 
                      08495  goto nextf0
                      08496 
                      08497  POP 
                      08498  banksel loc001 
                      08499  movwf loc001
                      08500  POP 
                      08501  movwf loc000
                      08502  andlw .127
                      08503  xorlw .127
                      08504  btfss STATUS,Z 
                      08505  goto m0r33n
                      08506  movfw loc000
                      08507  andlw .128
                      08508  movwf loc000
                      08509  incf loc001,f
                      08510  goto m0r34d   
                      08511 m0r33n:
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08512  incf loc000,f
                      08513 m0r34d:
                      08514  movfw loc000
                      08515  PUSH
                      08516  movfw loc001
                      08517  PUSH
                      08518  return
                      08519 
                      08520 
                      08521 
                      08522 #undefine loc001
                      08523 
                      08524 
                      08525 #undefine loc000
                      08526 
                      08527 
                      08528 #define loc001 sfploc00+1
                      08529 
                      08530 
                      08531 #define loc000 sfploc01+1
                      08532 
                      08533 
                      08534 nextf0:
                      08535 #endif
                      08536 #endif
                      08537 
                      08538  POP 
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      08539  banksel loc001 
0004   00??           08540  movwf loc001
                      08541  POP 
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   00??           08542  movwf loc000
0008   397F           08543  andlw .127
0009   3A7F           08544  xorlw .127
000A   1D03           08545  btfss STATUS,Z 
000B   2???           08546  goto hllUFAAA
000C   08??           08547  movfw loc000
000D   3980           08548  andlw .128
000E   00??           08549  movwf loc000
000F   0A??           08550  incf loc001,f
0010   2???           08551  goto hllVFAAA   
0011                  08552 hllUFAAA:
0011   0A??           08553  incf loc000,f
0012                  08554 hllVFAAA:
0012   08??           08555  movfw loc000
                      08556  PUSH
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0015   08??           08557  movfw loc001
                      08558  PUSH
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0017   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0018   0008           08559  return
                      08560 
                      08561 
                      08562 
                      08563 #undefine loc001
                      08564 
                      08565 
                      08566 #undefine loc000
                      08567 
                      08568 
                      08569 
                      08570 
                      08571 
                      08572  
                      08573 
                      08574 
                      08575 
                      08576 sfp_uto CODE 
                      08577 
                      08578 
                      08579 
                      08580 #define arg1 sfploc00
                      08581 
                      08582 
0000                  08583 utof:  
                      08584 #ifdef HLLMULTITASK
                      08585 #ifdef HLLGUARDsfploc 
                      08586  movf in_isr,f  
                      08587  btfsc STATUS,Z
                      08588  
                      08589 
                      08590 
                      08591  goto utof0
                      08592 
                      08593  
                      08594  POP
                      08595  banksel arg1 
                      08596  movwf arg1
                      08597 
                      08598  btfss arg1,7
                      08599  goto mbww0 
                      08600  
                      08601  
                      08602  
                      08603 
                      08604  bcf arg1,7 
                      08605  movfw arg1 
                      08606  
                      08607  PUSH
                      08608 
                      08609 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08610  movlw .7
                      08611  PUSH
                      08612  
                      08613  goto ret101
                      08614 
                      08615 mbww0: 
                      08616  btfss arg1,6
                      08617  goto mbww1 
                      08618 
                      08619 
                      08620  
                      08621  
                      08622 
                      08623  
                      08624  
                      08625  
                      08626 
                      08627  banksel arg1
                      08628  bcf arg1,6 
                      08629  bcf STATUS,C 
                      08630  rlf arg1,f
                      08631  movfw arg1
                      08632  PUSH
                      08633 
                      08634  movlw .6
                      08635  PUSH
                      08636  
                      08637  goto ret101
                      08638 mbww1: 
                      08639 
                      08640  btfss arg1,5
                      08641  goto mbww2
                      08642 
                      08643  banksel arg1
                      08644  bcf arg1,5 
                      08645  bcf STATUS,C 
                      08646  rlf arg1,f
                      08647  rlf arg1,f
                      08648  movfw arg1
                      08649  PUSH
                      08650 
                      08651  movlw .5
                      08652  PUSH
                      08653  
                      08654  goto ret101
                      08655 mbww2: 
                      08656 
                      08657  btfss arg1,4
                      08658  goto mbww3
                      08659 
                      08660 
                      08661  banksel arg1
                      08662  bcf arg1,4 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08663  bcf STATUS,C 
                      08664  rlf arg1,f
                      08665  rlf arg1,f
                      08666  rlf arg1,f
                      08667  movfw arg1
                      08668  PUSH
                      08669 
                      08670  movlw .4
                      08671  PUSH
                      08672  
                      08673  goto ret101
                      08674 mbww3: 
                      08675 
                      08676  btfss arg1,3
                      08677  goto mbww4
                      08678 
                      08679  banksel arg1
                      08680  bcf arg1,3 
                      08681  bcf STATUS,C 
                      08682  rlf arg1,f
                      08683  rlf arg1,f
                      08684  rlf arg1,f
                      08685  rlf arg1,f
                      08686  movfw arg1
                      08687  PUSH
                      08688 
                      08689  movlw .3
                      08690  PUSH
                      08691  
                      08692  goto ret101
                      08693 
                      08694 mbww4: 
                      08695 
                      08696  btfss arg1,2
                      08697  goto mbww5
                      08698 
                      08699 
                      08700  banksel arg1
                      08701  bcf arg1,2 
                      08702  bcf STATUS,C 
                      08703  rlf arg1,f
                      08704  rlf arg1,f
                      08705  rlf arg1,f
                      08706  rlf arg1,f
                      08707  rlf arg1,f
                      08708  movfw arg1
                      08709  PUSH
                      08710 
                      08711 
                      08712  movlw .2
                      08713  PUSH
                      08714  
                      08715  goto ret101
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08716 
                      08717 mbww5: 
                      08718 
                      08719  btfss arg1,1
                      08720  goto mbww6
                      08721 
                      08722  banksel arg1
                      08723  bcf arg1,1 
                      08724  bcf STATUS,C 
                      08725  rlf arg1,f
                      08726  rlf arg1,f
                      08727  rlf arg1,f
                      08728  rlf arg1,f
                      08729  rlf arg1,f
                      08730  rlf arg1,f
                      08731  movfw arg1
                      08732  PUSH
                      08733 
                      08734  movlw .1
                      08735  PUSH
                      08736 
                      08737  goto ret101
                      08738 mbww6: 
                      08739  btfss arg1,0
                      08740  goto tis00
                      08741  movlw .0
                      08742  PUSH
                      08743 
                      08744  movlw .0
                      08745  PUSH
                      08746  
                      08747  goto ret101
                      08748 tis00:
                      08749  movlw .0
                      08750  PUSH
                      08751 
                      08752  movlw -.128
                      08753  PUSH
                      08754  
                      08755 ret101:
                      08756  
                      08757  return
                      08758 
                      08759 
                      08760 
                      08761 
                      08762 #undefine arg1
                      08763 
                      08764 
                      08765 #define arg1 sfploc00+1
                      08766 
                      08767 
                      08768 utof0:
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08769 #endif
                      08770 #endif
                      08771 
                      08772  
                      08773  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      08774  banksel arg1 
0004   00??           08775  movwf arg1
                      08776 
0005   1F80           08777  btfss arg1,7
0006   2???           08778  goto hllYFAAA 
                      08779  
                      08780  
                      08781  
                      08782 
0007   1380           08783  bcf arg1,7 
0008   08??           08784  movfw arg1 
                      08785  
                      08786  PUSH
0009   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08787 
                      08788 
000B   3007           08789  movlw .7
                      08790  PUSH
000C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08791  
000E   2???           08792  goto hllGGAAA
                      08793 
000F                  08794 hllYFAAA: 
000F   1F00           08795  btfss arg1,6
0010   2???           08796  goto hllZFAAA 
                      08797 
                      08798 
                      08799  
                      08800  
                      08801 
                      08802  
                      08803  
                      08804  
                      08805 
0011   ???? ????      08806  banksel arg1
0013   1300           08807  bcf arg1,6 
0014   1003           08808  bcf STATUS,C 
0015   0D??           08809  rlf arg1,f
0016   08??           08810  movfw arg1
                      08811  PUSH
0017   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0018   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08812 
0019   3006           08813  movlw .6
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08814  PUSH
001A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08815  
001C   2???           08816  goto hllGGAAA
001D                  08817 hllZFAAA: 
                      08818 
001D   1E80           08819  btfss arg1,5
001E   2???           08820  goto hllAGAAA
                      08821 
001F   ???? ????      08822  banksel arg1
0021   1280           08823  bcf arg1,5 
0022   1003           08824  bcf STATUS,C 
0023   0D??           08825  rlf arg1,f
0024   0D??           08826  rlf arg1,f
0025   08??           08827  movfw arg1
                      08828  PUSH
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08829 
0028   3005           08830  movlw .5
                      08831  PUSH
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08832  
002B   2???           08833  goto hllGGAAA
002C                  08834 hllAGAAA: 
                      08835 
002C   1E00           08836  btfss arg1,4
002D   2???           08837  goto hllBGAAA
                      08838 
                      08839 
002E   ???? ????      08840  banksel arg1
0030   1200           08841  bcf arg1,4 
0031   1003           08842  bcf STATUS,C 
0032   0D??           08843  rlf arg1,f
0033   0D??           08844  rlf arg1,f
0034   0D??           08845  rlf arg1,f
0035   08??           08846  movfw arg1
                      08847  PUSH
0036   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0037   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08848 
0038   3004           08849  movlw .4
                      08850  PUSH
0039   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08851  
003B   2???           08852  goto hllGGAAA
003C                  08853 hllBGAAA: 
                      08854 
003C   1D80           08855  btfss arg1,3
003D   2???           08856  goto hllCGAAA
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08857 
003E   ???? ????      08858  banksel arg1
0040   1180           08859  bcf arg1,3 
0041   1003           08860  bcf STATUS,C 
0042   0D??           08861  rlf arg1,f
0043   0D??           08862  rlf arg1,f
0044   0D??           08863  rlf arg1,f
0045   0D??           08864  rlf arg1,f
0046   08??           08865  movfw arg1
                      08866  PUSH
0047   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0048   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08867 
0049   3003           08868  movlw .3
                      08869  PUSH
004A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08870  
004C   2???           08871  goto hllGGAAA
                      08872 
004D                  08873 hllCGAAA: 
                      08874 
004D   1D00           08875  btfss arg1,2
004E   2???           08876  goto hllDGAAA
                      08877 
                      08878 
004F   ???? ????      08879  banksel arg1
0051   1100           08880  bcf arg1,2 
0052   1003           08881  bcf STATUS,C 
0053   0D??           08882  rlf arg1,f
0054   0D??           08883  rlf arg1,f
0055   0D??           08884  rlf arg1,f
0056   0D??           08885  rlf arg1,f
0057   0D??           08886  rlf arg1,f
0058   08??           08887  movfw arg1
                      08888  PUSH
0059   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08889 
                      08890 
005B   3002           08891  movlw .2
                      08892  PUSH
005C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08893  
005E   2???           08894  goto hllGGAAA
                      08895 
005F                  08896 hllDGAAA: 
                      08897 
005F   1C80           08898  btfss arg1,1
0060   2???           08899  goto hllEGAAA
                      08900 
0061   ???? ????      08901  banksel arg1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   1080           08902  bcf arg1,1 
0064   1003           08903  bcf STATUS,C 
0065   0D??           08904  rlf arg1,f
0066   0D??           08905  rlf arg1,f
0067   0D??           08906  rlf arg1,f
0068   0D??           08907  rlf arg1,f
0069   0D??           08908  rlf arg1,f
006A   0D??           08909  rlf arg1,f
006B   08??           08910  movfw arg1
                      08911  PUSH
006C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08912 
006E   3001           08913  movlw .1
                      08914  PUSH
006F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0070   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08915 
0071   2???           08916  goto hllGGAAA
0072                  08917 hllEGAAA: 
0072   1C00           08918  btfss arg1,0
0073   2???           08919  goto hllFGAAA
0074   3000           08920  movlw .0
                      08921  PUSH
0075   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0076   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08922 
0077   3000           08923  movlw .0
                      08924  PUSH
0078   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0079   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08925  
007A   2???           08926  goto hllGGAAA
007B                  08927 hllFGAAA:
007B   3000           08928  movlw .0
                      08929  PUSH
007C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08930 
007E   3080           08931  movlw -.128
                      08932  PUSH
007F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0080   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08933  
0081                  08934 hllGGAAA:
                      08935  
0081   0008           08936  return
                      08937 
                      08938 
                      08939 
                      08940 
                      08941 #undefine arg1
                      08942 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08943  end
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 192


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALT_Save                          00000007
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 193


SYMBOL TABLE
  LABEL                             VALUE 

C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1H                            00000016
CCPR1L                            00000015
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
COPY                              
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DISCARD                           
D_A                               00000005
ECCPAS                            0000001D
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 194


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FAR_CALL                          
FERR                              00000002
FPCoreTbl2                        000000B0
FPCoreTblHi                       00000158
FSR                               00000004
FSR_Save                          00000006
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HALF_FAR_CALL                     
HLFSR                             FSR
HLINDF                            INDF
HLLGUARDhllblss                   
HLOE_STACK2_SIZE                  .20
HLOE_STACK_SIZE                   .80
HLTABLE                           
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 195


SYMBOL TABLE
  LABEL                             VALUE 

IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
KDISCARD                          
KPOP                              
KPUSH                             
LSHIFT                            
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PC_Save                           00000001
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
POP                               
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 196


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PREEMPT                           
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000019D
PULSR                             00000002
PULSS                             00000003
PUSH                              
PWM1CON                           0000001C
R                                 00000002
RABIE                             00000003
RABIF                             00000000
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RESUME                            
RP0                               00000005
RP1                               00000006
RSHIFT                            
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 197


SYMBOL TABLE
  LABEL                             VALUE 

SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_Save                       00000005
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
T2IE                              00000001
T2IF                              00000001
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 198


SYMBOL TABLE
  LABEL                             VALUE 

TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 199


SYMBOL TABLE
  LABEL                             VALUE 

WPUA2                             00000002
WPUA4                             00000004
WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_Save                            00000004
Z                                 00000002
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F690                          00000001
_hllkrna00_0009                   00000009
_hllkrna03_0008                   00000008
_hllkrna04_000C                   0000000C
_hllkrna04_000E                   0000000E
_hllkrna05_000C                   0000000C
_hllkrna05_000E                   0000000E
_hllkrna08_0003                   00000003
_hllkrna08_0011                   00000011
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 200


SYMBOL TABLE
  LABEL                             VALUE 

_hllkrna09_0003                   00000003
_hllkrna09_0011                   00000011
_hllkrna10_0003                   00000003
_hllkrna10_0010                   00000010
aart00                            00000000
aart01                            00000001
aart02                            00000002
aartpr00                          00000000
add                               00000000
addf                              00000000
alt_fsr                           00000003
alt_stack                         00000000
clearbit                          00000000
dispose                           00000000
divf                              00000000
divis                             00000000
divu                              00000000
dmm445                            00000011
eq                                00000000
ftou                              00000000
getch                             00000000
geth2                             00000002
geu                               00000000
hllAAAAA                          0000000D
hllABAAA                          00000055
hllACAAA                          000000FC
hllADAAA                          0000005E
hllAEAAA                          00000035
hllAFAAA                          000000AF
hllAGAAA                          0000002C
hllBAAAA                          00000013
hllBBAAA                          00000057
hllBCAAA                          000000FE
hllBDAAA                          00000061
hllBEAAA                          00000038
hllBFAAA                          000000B7
hllBGAAA                          0000003C
hllCAAAA                          0000001A
hllCBAAA                          00000062
hllCCAAA                          00000108
hllCDAAA                          00000064
hllCEAAA                          00000038
hllCFAAA                          000000C0
hllCGAAA                          0000004D
hllDAAAA                          00000021
hllDBAAA                          00000064
hllDCAAA                          00000115
hllDDAAA                          00000067
hllDEAAA                          00000000
hllDFAAA                          000000CA
hllDFAAA_hi                       00000151
hllDGAAA                          0000005F
hllEAAAA                          00000028
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 201


SYMBOL TABLE
  LABEL                             VALUE 

hllEBAAA                          0000006A
hllECAAA                          0000002C
hllEDAAA                          0000006A
hllEEAAA                          00000014
hllEFAAA                          000000D1
hllEGAAA                          00000072
hllFAAAA                          0000002F
hllFBAAA                          0000006C
hllFCAAA                          0000003A
hllFDAAA                          0000006D
hllFEAAA                          0000001F
hllFGAAA                          0000007B
hllGAAAA                          00000036
hllGBAAA                          00000073
hllGCAAA                          00000046
hllGDAAA                          00000070
hllGEAAA                          00000030
hllGFAAA                          0000000C
hllGGAAA                          00000081
hllHAAAA                          00000038
hllHBAAA                          00000076
hllHCAAA                          00000061
hllHDAAA                          00000073
hllHEAAA                          00000033
hllHFAAA                          00000021
hllIAAAA                          0000000C
hllIBAAA                          00000083
hllICAAA                          00000063
hllIDAAA                          00000076
hllIEAAA                          00000036
hllIFAAA                          00000038
hllJAAAA                          00000010
hllJBAAA                          00000087
hllJBAAAb                         000000B8
hllJCAAA                          00000065
hllJDAAA                          00000079
hllJEAAA                          00000039
hllJFAAA                          00000048
hllKBAAA                          00000090
hllKCAAA                          00000073
hllKDAAA                          0000007C
hllKEAAA                          0000003C
hllKFAAA                          0000005A
hllLAAAA                          0000000D
hllLBAAA                          0000009A
hllLCAAA                          0000007E
hllLDAAA                          0000007F
hllLEAAA                          0000003F
hllLFAAA                          00000062
hllMAAAA                          00000013
hllMBAAA                          0000009B
hllMCAAA                          00000080
hllMDAAA                          00000082
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 202


SYMBOL TABLE
  LABEL                             VALUE 

hllMEAAA                          00000042
hllMFAAA                          00000064
hllNAAAA                          0000001A
hllNBAAA                          0000009D
hllNCAAA                          00000082
hllNDAAA                          00000085
hllNEAAA                          00000045
hllNFAAA                          00000067
hllOAAAA                          00000021
hllOBAAA                          000000A4
hllOCAAA                          00000083
hllODAAA                          0000008A
hllOEAAA                          0000004E
hllOFAAA                          00000070
hllPAAAA                          00000028
hllPBAAA                          000000A7
hllPCAAA                          00000084
hllPDAAA                          00000097
hllPEAAA                          00000055
hllPFAAA                          00000074
hllQAAAA                          0000002F
hllQBAAA                          000000B4
hllQCAAA                          0000008E
hllQDAAA                          000000A8
hllQEAAA                          0000005C
hllQFAAA                          0000007B
hllRAAAA                          00000036
hllRCAAA                          00000094
hllRDAAA                          000000A9
hllREAAA                          00000064
hllRFAAA                          0000007C
hllSAAAA                          00000038
hllSBAAA                          000000C1
hllSCAAA                          00000096
hllSDAAA                          0000000B
hllSEAAA                          0000006E
hllSFAAA                          00000089
hllTAAAA                          00000020
hllTBAAA                          000000CB
hllTCAAA                          00000099
hllTDAAA                          0000001B
hllTEAAA                          00000078
hllTFAAA                          0000008F
hllUAAAA                          00000024
hllUBAAA                          000000CC
hllUCAAA                          00000010
hllUDAAA                          00000023
hllUEAAA                          00000086
hllUFAAA                          00000011
hllVAAAA                          00000025
hllVBAAA                          000000D1
hllVCAAA                          0000002E
hllVDAAA                          00000026
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 203


SYMBOL TABLE
  LABEL                             VALUE 

hllVEAAA                          00000096
hllVFAAA                          00000012
hllWAAAA                          00000027
hllWBAAA                          000000D8
hllWCAAA                          00000035
hllWDAAA                          00000029
hllWEAAA                          0000009E
hllXAAAA                          00000035
hllXAAAA_done                     00000036
hllXBAAA                          000000E0
hllXCAAA                          00000040
hllXDAAA                          0000002C
hllXEAAA                          000000A3
hllYBAAA                          000000E5
hllYCAAA                          0000004C
hllYDAAA                          0000002F
hllYEAAA                          000000AA
hllYFAAA                          0000000F
hllZAAAA                          0000004A
hllZBAAA                          000000F2
hllZCAAA                          0000005B
hllZDAAA                          00000032
hllZEAAA                          000000AC
hllZFAAA                          0000001D
hllblss00                         00000000
hllblss01                         00000001
hllblss02                         00000002
hlllb51J0                         00000039
hlllb51J1                         00000039
hlllb51J11                        0000001C
hlllb51J12                        00000020
hlllb51J2                         00000041
hlllb51J3                         00000041
hlllb51J6                         0000003A
hlllb51J7                         00000042
hlllb51J8                         00000022
hlllb51J9                         00000042
hllparmcore                       
hllprgen2                         00000039
hllprogend                        000000D0
hlluserprog                       00000000
hloego                            00000000
in_isr                            00000008
isprime                           00000000
isprimeinner                      00000000
kpop                              00000000
kpush                             00000000
kspox5                            00000008
logf                              00000000
maing                             00000000
modu                              00000000
mul                               00000000
mulf                              00000000
MPASM  5.14                        TARGET.ASM   7-7-2019  16:18:04         PAGE 204


SYMBOL TABLE
  LABEL                             VALUE 

nbnb                              00000005
ncnc                              00000006
negti                             00000000
nextf                             00000000
notb                              00000000
oru                               00000000
parm                              00000000
pbase                             00000000
powf                              00000000
printch                           00000000
printu                            00000000
safepush                          00000000
setbit                            00000000
sfpaux00                          00000001
sfpaux01                          00000003
sfpaux02                          00000005
sfpaux03                          00000007
sfploc00                          00000000
sfploc01                          00000002
sfploc02                          00000004
sfploc03                          00000006
sfploc04                          00000008
sfploc05                          00000009
sfploc06                          0000000A
sfploc07                          0000000B
sfploc08                          0000000C
sfploc09                          0000000D
sfploc10                          0000000E
sfploc11                          0000000F
sfploc12                          00000010
sfploc13                          00000011
sfploc14                          00000012
sfploc15                          00000013
sfploc16                          00000014
sfploc17                          00000015
softstack0                        00000000
softstack1                        00000001
softstack2                        00000002
sperr11                           0000000F
sqrt                              00000000
stack                             00000000
utof                              00000000

Errors   :     0
Warnings :     0 reported,     7 suppressed
Messages :     0 reported,    22 suppressed

