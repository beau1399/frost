
#include "hloe.inc"

 __config  _CONFIG1,_WDTE_OFF  & _BOREN_OFF & _FOSC_INTOSC & _PWRTE_OFF & _MCLRE_OFF & _CLKOUTEN_OFF & _IESO_OFF & _FCMEN_OFF
 __config  _CONFIG2,_PLLEN_ON & _STVREN_ON & _LVP_OFF



Resetv code 0 
 bcf INTCON,GIE
 pagesel hloego
 goto hloego
 
#ifdef HLLMULTITASK
vectr code 4	 ;Device specific
ISR:


 PREEMPT
#endif







#ifdef HLLMULTITASK
ExitISR:    
 
 RESUME
 
 retfie
#endif

mainvars udata_shr	
#ifdef HLLMULTITASK
pbase res .1			; Used for functions w/ numbered pass/return, to clean up parms/push args
pbaseisr res .1	
#else
pbase res .1
#endif

main code
hloego:

  clrf in_isr
 
  movlw LOW (stack-1)		;Set up stack starting position based on literals det. by incremental linker
  movwf FSR0L 
  movlw HIGH (stack-1)
  movwf FSR0H
 
  
 movlw LOW (alt_stack-1)
 movwf FSR1L
 movlw HIGH (alt_stack-1)
 movwf FSR1H
 
 
 clrf softstack0 
 
 
 pagesel hlluserprog
 goto hlluserprog

hllupuser CODE
hlluserprog: 
 

 movlw .112 

   FAR_CALL hlluserprog , safepush


 movlw .247 

   FAR_CALL hlluserprog , safepush

   banksel OSCCON
   movfw OSCCON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,andu


 FAR_CALL hlluserprog,oru

 POP
 banksel OSCCON
 movwf OSCCON
 


 FAR_CALL hlluserprog,pwm1on


 movlw .122
 



   FAR_CALL hlluserprog , safepush


 movlw .9
 


   FAR_CALL hlluserprog , safepush


 movlw .0

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,pwmf

    
hllprogend:
 goto hllprogend
 

hllt450 CODE
pwm1on:


 movlw .255 

   FAR_CALL pwm1on , safepush

 POP
 banksel PR2
 movwf PR2
 


 movlw CCP1SEL


   FAR_CALL pwm1on , safepush

   banksel APFCON0
   movfw APFCON0
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit

 POP
 banksel APFCON0
 movwf APFCON0
 


 movlw TRISB3


   FAR_CALL pwm1on , safepush

   banksel TRISB
   movfw TRISB
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,setbit

 POP
 banksel TRISB
 movwf TRISB
 


 movlw P1M0


   FAR_CALL pwm1on , safepush


 movlw P1M1


   FAR_CALL pwm1on , safepush

   banksel CCP1CON
   movfw CCP1CON
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit


 FAR_CALL pwm1on,clearbit

 POP
 banksel CCP1CON
 movwf CCP1CON
 


 movlw CCP1M0


   FAR_CALL pwm1on , safepush


 movlw CCP1M1


   FAR_CALL pwm1on , safepush

   banksel CCP1CON
   movfw CCP1CON
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit


 FAR_CALL pwm1on,clearbit

 POP
 banksel CCP1CON
 movwf CCP1CON
 


 movlw CCP1M2


   FAR_CALL pwm1on , safepush


 movlw CCP1M3


   FAR_CALL pwm1on , safepush

   banksel CCP1CON
   movfw CCP1CON
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,setbit


 FAR_CALL pwm1on,setbit

 POP
 banksel CCP1CON
 movwf CCP1CON
 


 movlw C1TSEL0


   FAR_CALL pwm1on , safepush


 movlw C1TSEL1


   FAR_CALL pwm1on , safepush

   banksel CCPTMRS
   movfw CCPTMRS
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit


 FAR_CALL pwm1on,clearbit

 POP
 banksel CCPTMRS
 movwf CCPTMRS
 


 movlw TMR2IF


   FAR_CALL pwm1on , safepush

   banksel PIR1
   movfw PIR1
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit

 POP
 banksel PIR1
 movwf PIR1
 


 movlw T2CKPS0


   FAR_CALL pwm1on , safepush


 movlw T2CKPS1


   FAR_CALL pwm1on , safepush

   banksel T2CON
   movfw T2CON
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit


 FAR_CALL pwm1on,clearbit

 POP
 banksel T2CON
 movwf T2CON
 


 movlw TMR2ON


   FAR_CALL pwm1on , safepush

   banksel T2CON
   movfw T2CON
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,setbit

 POP
 banksel T2CON
 movwf T2CON
 


 movlw TRISB3


   FAR_CALL pwm1on , safepush

   banksel TRISB
   movfw TRISB
   
   

   FAR_CALL pwm1on , safepush


 FAR_CALL pwm1on,clearbit

 POP
 banksel TRISB
 movwf TRISB
 


 return
 

hllt4511 CODE
pwmf:

 movf FSR0L,w
 

 FAR_CALL pwmf , kpush


 movlw .2

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .1

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 FAR_CALL pwmf,iszerof

 POP
 xorlw .0
 btfsc STATUS,Z
 goto hlllb51J3 
 

 movlw .0

   FAR_CALL pwmf , safepush

 
 goto hlllb51J4
 

hlllb51J3:


 movlw .2

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .1

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .122
 



   FAR_CALL pwmf , safepush


 movlw .9
 


   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,gtf

 POP
 xorlw .0
 btfsc STATUS,Z
 goto hlllb51J1 
 

 movlw .255

   FAR_CALL pwmf , safepush

 
 goto hlllb51J2
 

hlllb51J1:


 movlw .2

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .1

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .0
 



   FAR_CALL pwmf , safepush


 movlw .2
 


   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,divf


 FAR_CALL pwmf,ftou


hlllb51J2:


hlllb51J4:

 POP
 banksel CCPR1L
 movwf CCPR1L
 


 movlw .2

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .1

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,parm


 movlw .128
 



   FAR_CALL pwmf , safepush


 movlw .0
 


   FAR_CALL pwmf , safepush


 movlw .0
 



   FAR_CALL pwmf , safepush


 movlw .2
 


   FAR_CALL pwmf , safepush

   banksel CCPR1L
   movfw CCPR1L
   
   

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,utof


 FAR_CALL pwmf,mulf


 FAR_CALL pwmf,mulf


 FAR_CALL pwmf,addf


 FAR_CALL pwmf,copyf


 movlw .32
 



   FAR_CALL pwmf , safepush


 movlw .1
 


   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,gtf

 POP
 xorlw .0
 btfsc STATUS,Z
 goto hlllb51J9 
 

 movlw DC1B1


   FAR_CALL pwmf , safepush


 movlw DC1B0


   FAR_CALL pwmf , safepush

   banksel CCP1CON
   movfw CCP1CON
   
   

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,setbit


 FAR_CALL pwmf,setbit

 POP
 banksel CCP1CON
 movwf CCP1CON
 

 
 goto hlllb51J10
 

hlllb51J9:


 FAR_CALL pwmf,copyf


 movlw .64
 



   FAR_CALL pwmf , safepush


 movlw .0
 


   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,gtf

 POP
 xorlw .0
 btfsc STATUS,Z
 goto hlllb51J7 
 

 movlw DC1B1


   FAR_CALL pwmf , safepush

   banksel CCP1CON
   movfw CCP1CON
   
   

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,setbit

 POP
 banksel CCP1CON
 movwf CCP1CON
 

 
 goto hlllb51J8
 

hlllb51J7:


 FAR_CALL pwmf,copyf


 movlw .0
 



   FAR_CALL pwmf , safepush


 movlw .255
 


   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,gtf

 POP
 xorlw .0
 btfsc STATUS,Z
 goto hlllb51J5 
 

 movlw DC1B0


   FAR_CALL pwmf , safepush

   banksel CCP1CON
   movfw CCP1CON
   
   

   FAR_CALL pwmf , safepush


 FAR_CALL pwmf,setbit

 POP
 banksel CCP1CON
 movwf CCP1CON
 

 
 goto hlllb51J6
 

hlllb51J5:


hlllb51J6:


hlllb51J8:


hlllb51J10:


 FAR_CALL pwmf,kpop
; LOAD POINTER

 movwf FSR0L
 

 DISCARD


 DISCARD


 DISCARD


 return
 