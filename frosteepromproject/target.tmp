
#include "hloe.inc"

 __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOR_ON & _IESO_OFF & _FCMEN_OFF)




Resetv code 0 
 bcf INTCON,GIE
 pagesel hloego
 goto hloego
 
#ifdef HLLMULTITASK
vectr code 4	 ;Device specific
ISR:


 PREEMPT
#endif
#ifdef HLLMULTITASK
ExitISR:    

  RESUME
  
  
  retfie
#endif

mainvars udata_shr	
#ifdef HLLMULTITASK
pbase res .1			; Used for functions w/ numbered pass/return, to clean up parms/push args
pbaseisr res .1	
#else
pbase res .1
#endif

PC_Save res .1

main code
hloego:

 
  clrf in_isr
 
  movlw stack-1		;Set up stack starting position based on literals det. by incremental linker
  movwf FSR 
  movlw alt_stack-1
  movwf alt_fsr 
  
  
  clrf softstack0
 
 bankisel stack
 pagesel hlluserprog
 goto hlluserprog
hllupuser CODE
hlluserprog: 
 

 movlw .112 

   FAR_CALL hlluserprog , safepush

   banksel OSCCON
   movfw OSCCON
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,oru

 POP
 banksel OSCCON
 movwf OSCCON
 


 movlw .207 

   FAR_CALL hlluserprog , safepush

 POP
 banksel SPBRG
 movwf SPBRG
 


 movlw .0 

   FAR_CALL hlluserprog , safepush

 POP
 banksel SPBRGH
 movwf SPBRGH
 


 movlw SYNC


   FAR_CALL hlluserprog , safepush

   banksel TXSTA
   movfw TXSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit

 POP
 banksel TXSTA
 movwf TXSTA
 


 movlw CREN


   FAR_CALL hlluserprog , safepush

   banksel RCSTA
   movfw RCSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw CREN


   FAR_CALL hlluserprog , safepush

   banksel RCSTA
   movfw RCSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw SPEN


   FAR_CALL hlluserprog , safepush

   banksel RCSTA
   movfw RCSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw TXEN


   FAR_CALL hlluserprog , safepush


 movlw TX9


   FAR_CALL hlluserprog , safepush


 movlw BRGH


   FAR_CALL hlluserprog , safepush

   banksel TXSTA
   movfw TXSTA
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,setbit

 POP
 banksel TXSTA
 movwf TXSTA
 


 movlw BRG16


   FAR_CALL hlluserprog , safepush


 movlw SCKP


   FAR_CALL hlluserprog , safepush

   banksel BAUDCTL
   movfw BAUDCTL
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,setbit

 POP
 banksel BAUDCTL
 movwf BAUDCTL
 


 movlw .0 

   FAR_CALL hlluserprog , safepush

 POP
 banksel ANSELH
 movwf ANSELH
 


 movlw .0 

   FAR_CALL hlluserprog , safepush

 POP
 banksel ANSEL
 movwf ANSEL
 


 movlw RCIE


   FAR_CALL hlluserprog , safepush


 movlw TXIE


   FAR_CALL hlluserprog , safepush

   banksel PIE1
   movfw PIE1
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,clearbit

 POP
 banksel PIE1
 movwf PIE1
 


 movlw SCKP


   FAR_CALL hlluserprog , safepush

   banksel BAUDCTL
   movfw BAUDCTL
   
   

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,clearbit

 POP
 banksel BAUDCTL
 movwf BAUDCTL
 

 ; char 'O'


 movlw .79


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch

 ; char 'K'


 movlw .75


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch


 movlw .44 

   FAR_CALL hlluserprog , safepush


 movlw .222

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,writeeeprom

 ; char 'W'


 movlw .87


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch

 ; char 'R'


 movlw .82


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch

 ; char 'O'


 movlw .79


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch

 ; char 'T'


 movlw .84


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch

 ; char 'E'


 movlw .69


   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch


 movlw .13

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch


 movlw .10

   FAR_CALL hlluserprog , safepush


 FAR_CALL hlluserprog,printch


 FAR_CALL hlluserprog,readit

    
hllprogend:
 goto hllprogend
 

hllt450 CODE
readit:


 movlw .44

   FAR_CALL readit , safepush


 FAR_CALL readit,readeeprom


 FAR_CALL readit,printu


 movlw .13

   FAR_CALL readit , safepush


 FAR_CALL readit,printch


 movlw .10

   FAR_CALL readit , safepush


 FAR_CALL readit,printch

 ;~IFTR~ 


 FAR_CALL readit,readit


 return
 