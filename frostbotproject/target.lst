MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 #include "hloe.inc"
                      00001 
                      00002 
                      00003 #define HLLGUARDhllblss
                      00004 
                      00005 
                      00006 #define HLOE_STACK_SIZE .80
                      00007 #define HLOE_STACK2_SIZE .80
                      00008 
                      00009 
                      00010 #include <p16f690.inc>
                      00001         LIST
                      00002 ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00607         LIST
                      00011 #include <f:\beau\frostcompiler\kernel.inc>
                      00001 PUSH macro ;Push to the main stack for the programmer's parms and dyn. data;
                      00002  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
                      00003  movwf INDF ; code of any sort will not overwrite the data. 
                      00004  endm 
                      00005  
                      00006 POP macro ;Pop from main stack; "decf" is the de-allocator and thus happens last to 
                      00007  movfw INDF ; preserve the safety of this code under interruptible conditions. 
                      00008  decf FSR,f 
                      00009  endm
                      00010  
                      00011 DISCARD macro ;Remove items from the main stack and throw them away w/o affecting W
                      00012  decf FSR,f 
                      00013  endm
                      00014  
                      00015 KDISCARD macro ;Remove items from stack 2 and throw them away w/o affecting W
                      00016  decf alt_fsr,f 
                      00017  endm
                      00018 
                      00019 COPY macro ;Duplicate stack top
                      00020  movfw INDF
                      00021  incf FSR,f 
                      00022  movwf INDF 
                      00023  endm
                      00024 
                      00025 #define HLFSR FSR
                      00026  
                      00027 #define HLINDF INDF
                      00028 
                      00029   
                      00030 FAR_CALL macro caller_os,func_os ;Call destination residing within a different code page
                      00031  pagesel func_os
                      00032  call func_os
                      00033  pagesel caller_os ;This one restores the caller's code page
                      00034  endm
                      00035 
                      00036 ;Call destination residing within a different code page... does not restore the caller's
                      00037 ; code page after return, which may be OK (e.g. if the next operation is another 'Far'
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 ; function call). 
                      00039 HALF_FAR_CALL macro func_os 
                      00040  pagesel func_os        
                      00041  call func_os
                      00042  endm
                      00043  
                      00044 KPOP macro
                      00045  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00046  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00047  btfsc STATUS,Z
                      00048  goto $+0F
                      00049  movfw FSR 
                      00050  movwf softstack0+1 ;Save user stack ptr 
                      00051  movfw alt_fsr ;Get second stack ptr 
                      00052  movwf FSR 
                      00053  movfw INDF ;Dereference it 
                      00054  decf FSR,f ;Decrement it 
                      00055  movwf softstack1+1  ;Save popped value for ret urn 
                      00056  movfw FSR ;Save second stack ptr 
                      00057  movwf alt_fsr 
                      00058  movfw softstack0+1  ;Restore user stack ptr 
                      00059  movwf FSR 
                      00060  clrf softstack0+1
                      00061  movfw softstack1+1  ;Bring back popped value for ret urn 
                      00062  goto $+0E
                      00063  movfw FSR 
                      00064  movwf softstack0 ;Save user stack ptr 
                      00065  movfw alt_fsr ;Get second stack ptr 
                      00066  movwf FSR 
                      00067  movfw INDF ;Dereference it 
                      00068  decf FSR,f ;Decrement it 
                      00069  movwf softstack1  ;Save popped value for ret urn 
                      00070  movfw FSR ;Save second stack ptr 
                      00071  movwf alt_fsr 
                      00072  movfw softstack0  ;Restore user stack ptr 
                      00073  movwf FSR 
                      00074  clrf softstack0
                      00075  movfw softstack1  ;Bring back popped value for ret urn 
                      00076  bankisel stack
                      00077  endm 
                      00078 
                      00079 KPUSH macro
                      00080  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00081  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00082  btfsc STATUS,Z
                      00083  goto $+0E
                      00084  movwf softstack1+1 ;softstack1 holds parm value being pushed
                      00085  movfw FSR  
                      00086  movwf softstack0+1  ;softstack0 holds FSR
                      00087  movfw alt_fsr 
                      00088  movwf FSR 
                      00089  movfw softstack1+1
                      00090  incf alt_fsr,f 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00092  movwf INDF 
                      00093  movfw softstack0+1
                      00094  movwf FSR 
                      00095  clrf softstack0+1 
                      00096  goto $+0D
                      00097  movwf softstack1 ;softstack1 holds parm value being pushed
                      00098  movfw FSR  
                      00099  movwf softstack0  ;softstack0 holds FSR
                      00100  movfw alt_fsr 
                      00101  movwf FSR 
                      00102  movfw softstack1
                      00103  incf alt_fsr,f 
                      00104  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00105  movwf INDF 
                      00106  movfw softstack0
                      00107  movwf FSR 
                      00108  clrf softstack0
                      00109  bankisel stack
                      00110  endm
                      00111  
                      00112 PREEMPT macro
                      00113 #ifdef HLLMULTITASK 
                      00114  movwf W_Save ; save context- save W in "W_save" file reg.
                      00115  ;From datasheet... save STATUS properly
                      00116  swapf STATUS,W 
                      00117  movwf STATUS_Save 
                      00118  movf FSR,w 
                      00119  movwf FSR_Save 
                      00120  movf PCLATH,w ; save status in "STATUS_Save" file reg.
                      00121  movwf PC_Save 
                      00122  movf alt_fsr,w 
                      00123  movwf ALT_Save
                      00124  incf in_isr,f
                      00125  pagesel ISR
                      00126  bankisel stack 
                      00127  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
                      00128  movf softstack0,f        ; (coded to preserve constant interrupt latency)
                      00129  btfss STATUS,Z       
                      00130  movf softstack0,w  
                      00131  movwf FSR          
                      00132 #endif 
                      00133  endm
                      00134  
                      00135 RESUME macro
                      00136  
                      00137 #ifdef HLLMULTITASK 
                      00138  clrf in_isr
                      00139  movf ALT_Save,w
                      00140  movwf alt_fsr 
                      00141  movf PC_Save,w ; restore context (W and STATUS)
                      00142  movwf PCLATH
                      00143  movf FSR_Save,w 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00144  movwf FSR
                      00145  ;Per the datasheet...
                      00146  swapf STATUS_Save,W
                      00147  movwf STATUS ;Move W into Status reg
                      00148  swapf W_Save,F ;Swap W_TEMP
                      00149  swapf W_Save,W ;Swap W_TEMP into W
                      00150 #endif
                      00151 
                      00152  endm
                      00153  
                      00154 ; Table macro.. this followed by any series of RETLW calls
                      00155 ; transforms said call list into a function that takes an offset
                      00156 ; and returns that entry in the table (takes 1 byte, returns 1
                      00157 ; byte... this goes atop the HLL feature which allows generation 
                      00158 ; of tables. It can also go atop RETLW tables entered into assembly 
                      00159 ; files in a very basic fashion when doing assembly programming. In 
                      00160 ; either case, the overall result can be called exactly as if it were any 
                      00161 ; other HLOE function
                      00162 HLTABLE macro mmnme
                      00163 mmnme:
                      00164  movlw high mmnme#v(2) ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00165  movwf PCLATH ; and PAGESEL doesn't take care of all 5
                      00166  movlw low mmnme#v(2) ; Perform pointer arithmetic
                      00167  addwf INDF,w 
                      00168  decf FSR,f
                      00169  btfsc STATUS,C ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00170  incf PCLATH,f 
                      00171  movwf PCL 
                      00172 mmnme#v(2): 
                      00173  ;retlw K, retlw K, etc. go here
                      00174  endm
                      00175  
                      00012 
                      00013 
                      00014 #define HLLMULTITASK
                      00003 
                      00004 
                      00005 ;
                      00006 ; R O B O T
                      00007 ;
                      00008 ; C O N F I G
                      00009 ;
                      00010 
                      00011 
2007   30C6           00012  __config (_EXTRC_OSC_NOCLKOUT& _WDT_OFF  & _MCLRE_OFF & _IESO_OFF & _FCMEN_OFF  & _PWRTE_ON & _BOR_OFF)
                      00013 
                      00014 
                      00015 hllv2setf UDATA
0000                  00016 hllsetfl RES .1
                      00017 
                      00018 #define setf hllsetfl
                      00019 
                      00020 hllv2setg UDATA
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000                  00021 hllsetgl RES .1
                      00022 
                      00023 #define setg hllsetgl
                      00024 
                      00025 hllv2ticked UDATA
0000                  00026 hlltickedl RES .1
                      00027 
                      00028 #define ticked hlltickedl
                      00029 
                      00030 
                      00031 
                      00032 Resetv code 0 
0000   138B           00033  bcf INTCON,GIE
0001   ????           00034  pagesel hloego
0002   2???           00035  goto hloego
                      00036  
                      00037 #ifdef HLLMULTITASK
                      00038 vectr code 4     ;Device specific
0004                  00039 ISR:
                      00040 
                      00041 
                      00042  PREEMPT
                          M #ifdef HLLMULTITASK 
0004   00??               M  movwf W_Save ; save context- save W in "W_save" file reg.
                          M  ;From datasheet... save STATUS properly
0005   0E03               M  swapf STATUS,W 
0006   00??               M  movwf STATUS_Save 
0007   0804               M  movf FSR,w 
0008   00??               M  movwf FSR_Save 
0009   080A               M  movf PCLATH,w ; save status in "STATUS_Save" file reg.
000A   00??               M  movwf PC_Save 
000B   08??               M  movf alt_fsr,w 
000C   00??               M  movwf ALT_Save
000D   0A??               M  incf in_isr,f
000E   ????               M  pagesel ISR
000F   ????               M  bankisel stack 
0010   0804               M  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
0011   08??               M  movf softstack0,f        ; (coded to preserve constant interrupt latency)
0012   1D03               M  btfss STATUS,Z       
0013   08??               M  movf softstack0,w  
0014   0084               M  movwf FSR          
                          M #endif 
                      00043 #endif
0015   1283 1303      00044  banksel PIR1
0017   1C0C           00045  btfss PIR1,TMR1IF
0018   2???           00046  goto hllnotisr49       
0019   100C           00047  bcf PIR1,TMR1IF
                      00048 
                      00049 
001A   3001           00050  movlw .1
                      00051  
001B   ???? ????      00052  banksel ticked
001D   00??           00053  movwf ticked
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054  
                      00055 
                      00056 
001E   300F           00057  movlw .15 
                      00058  PUSH 
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00059 
0021   ???? ????      00060    banksel setf
0023   08??           00061    movfw setf
                      00062    
                      00063    
                      00064  PUSH 
0024   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0025   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00065 
                      00066 
0026   303C           00067  movlw .60 
                      00068  PUSH 
0027   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0028   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00069 
                      00070 
0029   300F           00071  movlw .15 
                      00072  PUSH 
002A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00073 
                      00074 
                      00075  
                      00076  FAR_CALL ISR,graphx
002C   ????               M  pagesel graphx
002D   2???               M  call graphx
002E   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00077 
                      00078  ; char 'S'
                      00079 
                      00080 
002F   3053           00081  movlw .83
                      00082 
                      00083  PUSH 
0030   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0031   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00084 
                      00085 
                      00086  
                      00087  FAR_CALL ISR,printch
0032   ????               M  pagesel printch
0033   2???               M  call printch
0034   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00088 
                      00089  ; char 'e'
                      00090 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091 
0035   3065           00092  movlw .101
                      00093 
                      00094  PUSH 
0036   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0037   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00095 
                      00096 
                      00097  
                      00098  FAR_CALL ISR,printch
0038   ????               M  pagesel printch
0039   2???               M  call printch
003A   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00099 
                      00100  ; char 't'
                      00101 
                      00102 
003B   3074           00103  movlw .116
                      00104 
                      00105  PUSH 
003C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00106 
                      00107 
                      00108  
                      00109  FAR_CALL ISR,printch
003E   ????               M  pagesel printch
003F   2???               M  call printch
0040   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00110 
                      00111 
0041   300F           00112  movlw .15 
                      00113  PUSH 
0042   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0043   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00114 
0044   ???? ????      00115    banksel setg
0046   08??           00116    movfw setg
                      00117    
                      00118    
                      00119  PUSH 
0047   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0048   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00120 
                      00121 
0049   303C           00122  movlw .60 
                      00123  PUSH 
004A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00124 
                      00125 
004C   3010           00126  movlw .16 
                      00127  PUSH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00128 
                      00129 
                      00130  
                      00131  FAR_CALL ISR,graphx
004F   ????               M  pagesel graphx
0050   2???               M  call graphx
0051   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00132 
                      00133  ; char 'P'
                      00134 
                      00135 
0052   3050           00136  movlw .80
                      00137 
                      00138  PUSH 
0053   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0054   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00139 
                      00140 
                      00141  
                      00142  FAR_CALL ISR,printch
0055   ????               M  pagesel printch
0056   2???               M  call printch
0057   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00143 
                      00144  ; char 'o'
                      00145 
                      00146 
0058   306F           00147  movlw .111
                      00148 
                      00149  PUSH 
0059   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00150 
                      00151 
                      00152  
                      00153  FAR_CALL ISR,printch
005B   ????               M  pagesel printch
005C   2???               M  call printch
005D   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00154 
                      00155  ; char 's'
                      00156 
                      00157 
005E   3073           00158  movlw .115
                      00159 
                      00160  PUSH 
005F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0060   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00161 
                      00162 
                      00163  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00164  FAR_CALL ISR,printch
0061   ????               M  pagesel printch
0062   2???               M  call printch
0063   ????               M  pagesel ISR       ;This one restores the caller's code page
                      00165 
                      00166 
0064                  00167 hllnotisr49:
                      00168 
                      00169 
                      00170 ;
                      00171 ; R O B O T
                      00172 ;
                      00173 ; H E A D E R
                      00174 ;
                      00175 
                      00176 #ifdef HLLMULTITASK
0064                  00177 ExitISR:    
                      00178  RESUME 
                          M  
                          M #ifdef HLLMULTITASK 
0064   01??               M  clrf in_isr
0065   08??               M  movf ALT_Save,w
0066   00??               M  movwf alt_fsr 
0067   08??               M  movf PC_Save,w ; restore context (W and STATUS)
0068   008A               M  movwf PCLATH
0069   08??               M  movf FSR_Save,w 
006A   0084               M  movwf FSR
                          M  ;Per the datasheet...
006B   0E??               M  swapf STATUS_Save,W
006C   0083               M  movwf STATUS ;Move W into Status reg
006D   0E??               M  swapf W_Save,F ;Swap W_TEMP
006E   0E??               M  swapf W_Save,W ;Swap W_TEMP into W
                          M #endif
                          M 
                      00179  
006F   0009           00180   retfie
                      00181 #endif
                      00182 
                      00183 mainvars udata_shr      
                      00184 #ifdef HLLMULTITASK
0000                  00185 pbase res .1                    ; Used for functions w/ numbered pass/return, to clean up parms/push arg
                            s
0001                  00186 pbaseisr res .1 
                      00187 #else
                      00188 pbase res .1
                      00189 #endif
0002                  00190 PC_Save res .1
                      00191 
                      00192 main code
0000                  00193 hloego:
                      00194 
                      00195  
                      00196 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00197   
0000   01??           00198   clrf in_isr
                      00199  
0001   30??           00200   movlw stack-1         ;Set up stack starting position based on literals det. by incremental linker
0002   0084           00201   movwf FSR 
0003   30??           00202   movlw alt_stack-1
0004   00??           00203   movwf alt_fsr 
                      00204  
                      00205  
0005   01??           00206  clrf softstack0 
                      00207  
0006   ????           00208  bankisel stack
0007   ????           00209  pagesel hlluserprog
0008   2???           00210  goto hlluserprog
                      00211 hllupuser CODE
0000                  00212 hlluserprog: 
                      00213  
                      00214 
                      00215  
                      00216  FAR_CALL hlluserprog,main_setup
0000   ????               M  pagesel main_setup
0001   2???               M  call main_setup
0002   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00217 
                      00218 
0003   3000           00219  movlw TMR1ON
                      00220 
                      00221  PUSH 
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00222 
0006   1283 1303      00223    banksel T1CON
0008   0810           00224    movfw T1CON
                      00225    
                      00226    
                      00227  PUSH 
0009   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00228 
                      00229 
                      00230  
                      00231  FAR_CALL hlluserprog,clearbit
000B   ????               M  pagesel clearbit
000C   2???               M  call clearbit
000D   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00232 
                      00233  POP
000E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000F   0384               M  decf FSR,f 
0010   1283 1303      00234  banksel T1CON
0012   0090           00235  movwf T1CON
                      00236  
                      00237 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00238 
                      00239  
                      00240  FAR_CALL hlluserprog,wait_button
0013   ????               M  pagesel wait_button
0014   2???               M  call wait_button
0015   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00241 
                      00242 
0016   3000           00243  movlw .0 
                      00244  
0017   1283 1303      00245  banksel TMR1H
0019   008F           00246  movwf TMR1H
                      00247  
                      00248 
                      00249 
001A   3000           00250  movlw .0 
                      00251  
001B   1283 1303      00252  banksel TMR1L
001D   008E           00253  movwf TMR1L
                      00254  
                      00255 
                      00256 
001E   3000           00257  movlw .0 
                      00258  
001F   ???? ????      00259  banksel ticked
0021   00??           00260  movwf ticked
                      00261  
                      00262 
                      00263 
0022   3007           00264  movlw GIE
                      00265 
                      00266  PUSH 
0023   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0024   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00267 
0025   1283 1303      00268    banksel INTCON
0027   080B           00269    movfw INTCON
                      00270    
                      00271    
                      00272  PUSH 
0028   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0029   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00273 
                      00274 
                      00275  
                      00276  FAR_CALL hlluserprog,setbit
002A   ????               M  pagesel setbit
002B   2???               M  call setbit
002C   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00277 
                      00278  POP
002D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
002E   0384               M  decf FSR,f 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002F   1283 1303      00279  banksel INTCON
0031   008B           00280  movwf INTCON
                      00281  
                      00282 
                      00283 
0032   3008           00284  movlw .8 
                      00285  
0033   1283 1303      00286  banksel TMR1H
0035   008F           00287  movwf TMR1H
                      00288  
                      00289 
                      00290 
0036   3000           00291  movlw TMR1ON
                      00292 
                      00293  PUSH 
0037   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0038   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00294 
0039   1283 1303      00295    banksel T1CON
003B   0810           00296    movfw T1CON
                      00297    
                      00298    
                      00299  PUSH 
003C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00300 
                      00301 
                      00302  
                      00303  FAR_CALL hlluserprog,setbit
003E   ????               M  pagesel setbit
003F   2???               M  call setbit
0040   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00304 
                      00305  POP
0041   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0042   0384               M  decf FSR,f 
0043   1283 1303      00306  banksel T1CON
0045   0090           00307  movwf T1CON
                      00308  
                      00309 
                      00310 
0046   3000           00311  movlw .0
                      00312  
                      00313 
                      00314 
                      00315  PUSH 
0047   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0048   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00316 
                      00317 
0049   3080           00318  movlw .128
                      00319  
                      00320 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00321  PUSH 
004A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00322 
                      00323 
004C   3000           00324  movlw .0
                      00325  
                      00326 
                      00327 
                      00328  PUSH 
004D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00329 
                      00330 
004F   3000           00331  movlw .0
                      00332  
                      00333 
                      00334  PUSH 
0050   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0051   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00335 
                      00336 
0052   3004           00337  movlw .4
                      00338  PUSH 
0053   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0054   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00339 
                      00340 
                      00341  
                      00342  HALF_FAR_CALL samplef
0055   ????               M  pagesel samplef        
0056   2???               M  call samplef
                      00343 
                      00344 
                      00345  
                      00346  FAR_CALL hlluserprog,addf
0057   ????               M  pagesel addf
0058   2???               M  call addf
0059   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00347 
                      00348 
005A   3000           00349  movlw .0
                      00350  
                      00351 
                      00352 
                      00353  PUSH 
005B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00354 
                      00355 
005D   3080           00356  movlw .128
                      00357  
                      00358 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00359  PUSH 
005E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00360 
                      00361 
0060   3017           00362  movlw .23
                      00363  
                      00364 
                      00365 
                      00366  PUSH 
0061   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0062   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00367 
                      00368 
0063   3008           00369  movlw .8
                      00370  
                      00371 
                      00372  PUSH 
0064   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0065   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00373 
                      00374 
                      00375  
                      00376  FAR_CALL hlluserprog,longf
0066   ????               M  pagesel longf
0067   2???               M  call longf
0068   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00377 
                      00378     
0069                  00379 hllprogend:
0069   2???           00380  goto hllprogend
                      00381  
                      00382 
                      00383 hllt452 CODE
0000                  00384 main_setup:
                      00385 
                      00386 
0000   3000           00387  movlw .0 
                      00388  
0001   ???? ????      00389  banksel setf
0003   00??           00390  movwf setf
                      00391  
                      00392 
                      00393 
0004   3000           00394  movlw .0 
                      00395  
0005   ???? ????      00396  banksel setg
0007   00??           00397  movwf setg
                      00398  
                      00399 
                      00400 
0008   3000           00401  movlw .0 
                      00402  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   1283 1303      00403  banksel INTCON
000B   008B           00404  movwf INTCON
                      00405  
                      00406 
                      00407 
000C   3000           00408  movlw .0 
                      00409  
000D   1283 1703      00410  banksel ANSELH
000F   009F           00411  movwf ANSELH
                      00412  
                      00413 
                      00414 
0010   3000           00415  movlw .0 
                      00416  
0011   1283 1703      00417  banksel ANSEL
0013   009E           00418  movwf ANSEL
                      00419  
                      00420 
                      00421 
                      00422  
                      00423  FAR_CALL main_setup,pwmon
0014   ????               M  pagesel pwmon
0015   2???               M  call pwmon
0016   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00424 
                      00425 
0017   3004           00426  movlw SYNC
                      00427 
                      00428  PUSH 
0018   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0019   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00429 
                      00430 
001A   3002           00431  movlw BRGH
                      00432 
                      00433  PUSH 
001B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00434 
001D   1683 1303      00435    banksel TXSTA
001F   0818           00436    movfw TXSTA
                      00437    
                      00438    
                      00439  PUSH 
0020   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0021   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00440 
                      00441 
                      00442  
                      00443  HALF_FAR_CALL setbit
0022   ????               M  pagesel setbit         
0023   2???               M  call setbit
                      00444 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00445 
                      00446  
                      00447  FAR_CALL main_setup,clearbit
0024   ????               M  pagesel clearbit
0025   2???               M  call clearbit
0026   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00448 
                      00449  POP
0027   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0028   0384               M  decf FSR,f 
0029   1683 1303      00450  banksel TXSTA
002B   0098           00451  movwf TXSTA
                      00452  
                      00453 
                      00454 
002C   3003           00455  movlw BRG16
                      00456 
                      00457  PUSH 
002D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00458 
                      00459 
002F   3004           00460  movlw SCKP
                      00461 
                      00462  PUSH 
0030   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0031   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00463 
0032   1683 1303      00464    banksel BAUDCTL
0034   081B           00465    movfw BAUDCTL
                      00466    
                      00467    
                      00468  PUSH 
0035   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0036   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00469 
                      00470 
                      00471  
                      00472  HALF_FAR_CALL setbit
0037   ????               M  pagesel setbit         
0038   2???               M  call setbit
                      00473 
                      00474 
                      00475  
                      00476  FAR_CALL main_setup,setbit
0039   ????               M  pagesel setbit
003A   2???               M  call setbit
003B   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00477 
                      00478  POP
003C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003D   0384               M  decf FSR,f 
003E   1683 1303      00479  banksel BAUDCTL
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0040   009B           00480  movwf BAUDCTL
                      00481  
                      00482 
                      00483 
0041   3004           00484  movlw CREN
                      00485 
                      00486  PUSH 
0042   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0043   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00487 
0044   1283 1303      00488    banksel RCSTA
0046   0818           00489    movfw RCSTA
                      00490    
                      00491    
                      00492  PUSH 
0047   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0048   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00493 
                      00494 
                      00495  
                      00496  FAR_CALL main_setup,clearbit
0049   ????               M  pagesel clearbit
004A   2???               M  call clearbit
004B   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00497 
                      00498  POP
004C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
004D   0384               M  decf FSR,f 
004E   1283 1303      00499  banksel RCSTA
0050   0098           00500  movwf RCSTA
                      00501  
                      00502 
                      00503 
0051   3004           00504  movlw CREN
                      00505 
                      00506  PUSH 
0052   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0053   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00507 
0054   1283 1303      00508    banksel RCSTA
0056   0818           00509    movfw RCSTA
                      00510    
                      00511    
                      00512  PUSH 
0057   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0058   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00513 
                      00514 
                      00515  
                      00516  FAR_CALL main_setup,setbit
0059   ????               M  pagesel setbit
005A   2???               M  call setbit
005B   ????               M  pagesel main_setup ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00517 
                      00518  POP
005C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
005D   0384               M  decf FSR,f 
005E   1283 1303      00519  banksel RCSTA
0060   0098           00520  movwf RCSTA
                      00521  
                      00522 
                      00523 
0061   3019           00524  movlw .25 
                      00525  
0062   1683 1303      00526  banksel SPBRG
0064   0099           00527  movwf SPBRG
                      00528  
                      00529 
                      00530 
0065   3000           00531  movlw .0  
                      00532  
0066   1683 1303      00533  banksel SPBRGH
0068   009A           00534  movwf SPBRGH
                      00535  
                      00536 
                      00537 
0069   3005           00538  movlw TXEN
                      00539 
                      00540  PUSH 
006A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00541 
                      00542 
006C   3006           00543  movlw TX9
                      00544 
                      00545  PUSH 
006D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00546 
006F   1683 1303      00547    banksel TXSTA
0071   0818           00548    movfw TXSTA
                      00549    
                      00550    
                      00551  PUSH 
0072   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0073   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00552 
                      00553 
                      00554  
                      00555  HALF_FAR_CALL clearbit
0074   ????               M  pagesel clearbit       
0075   2???               M  call clearbit
                      00556 
                      00557 
                      00558  
                      00559  FAR_CALL main_setup,setbit
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0076   ????               M  pagesel setbit
0077   2???               M  call setbit
0078   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00560 
                      00561  POP
0079   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
007A   0384               M  decf FSR,f 
007B   1683 1303      00562  banksel TXSTA
007D   0098           00563  movwf TXSTA
                      00564  
                      00565 
                      00566 
007E   3007           00567  movlw SPEN
                      00568 
                      00569  PUSH 
007F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0080   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00570 
0081   1283 1303      00571    banksel RCSTA
0083   0818           00572    movfw RCSTA
                      00573    
                      00574    
                      00575  PUSH 
0084   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0085   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00576 
                      00577 
                      00578  
                      00579  FAR_CALL main_setup,setbit
0086   ????               M  pagesel setbit
0087   2???               M  call setbit
0088   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00580 
                      00581  POP
0089   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
008A   0384               M  decf FSR,f 
008B   1283 1303      00582  banksel RCSTA
008D   0098           00583  movwf RCSTA
                      00584  
                      00585 
                      00586 
008E   3001           00587  movlw .1 
                      00588  
008F   3A00           00589  xorlw .0
0090   1903           00590  btfsc STATUS,Z
0091   2???           00591  goto hlllb51J0 
                      00592  
                      00593 
                      00594  
                      00595  FAR_CALL main_setup,cls
0092   ????               M  pagesel cls
0093   2???               M  call cls
0094   ????               M  pagesel main_setup ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00596 
                      00597  
0095   2???           00598  goto hlllb51J1
                      00599  
                      00600 
0096                  00601 hlllb51J0:
                      00602 
                      00603 
0096                  00604 hlllb51J1:
                      00605 
                      00606 
0096   3001           00607  movlw TMR1CS
                      00608 
                      00609  PUSH 
0097   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0098   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00610 
                      00611 
0099   3006           00612  movlw TMR1GE
                      00613 
                      00614  PUSH 
009A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00615 
                      00616 
009C   3005           00617  movlw T1CKPS1
                      00618 
                      00619  PUSH 
009D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00620 
                      00621 
009F   3004           00622  movlw T1CKPS0
                      00623 
                      00624  PUSH 
00A0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00625 
                      00626 
00A2   3002           00627  movlw NOT_T1SYNC
                      00628 
                      00629  PUSH 
00A3   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A4   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00630 
                      00631 
00A5   3003           00632  movlw T1OSCEN
                      00633 
                      00634  PUSH 
00A6   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A7   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00635 
00A8   1283 1303      00636    banksel T1CON
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AA   0810           00637    movfw T1CON
                      00638    
                      00639    
                      00640  PUSH 
00AB   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00AC   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00641 
                      00642 
                      00643  
                      00644  HALF_FAR_CALL clearbit
00AD   ????               M  pagesel clearbit       
00AE   2???               M  call clearbit
                      00645 
                      00646 
                      00647  
                      00648  HALF_FAR_CALL clearbit
00AF   ????               M  pagesel clearbit       
00B0   2???               M  call clearbit
                      00649 
                      00650 
                      00651  
                      00652  HALF_FAR_CALL setbit
00B1   ????               M  pagesel setbit         
00B2   2???               M  call setbit
                      00653 
                      00654 
                      00655  
                      00656  HALF_FAR_CALL setbit
00B3   ????               M  pagesel setbit         
00B4   2???               M  call setbit
                      00657 
                      00658 
                      00659  
                      00660  HALF_FAR_CALL clearbit
00B5   ????               M  pagesel clearbit       
00B6   2???               M  call clearbit
                      00661 
                      00662 
                      00663  
                      00664  FAR_CALL main_setup,clearbit
00B7   ????               M  pagesel clearbit
00B8   2???               M  call clearbit
00B9   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00665 
                      00666  POP
00BA   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00BB   0384               M  decf FSR,f 
00BC   1283 1303      00667  banksel T1CON
00BE   0090           00668  movwf T1CON
                      00669  
                      00670 
                      00671 
00BF   3000           00672  movlw TMR1IE
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00673 
                      00674  PUSH 
00C0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00675 
00C2   1683 1303      00676    banksel PIE1
00C4   080C           00677    movfw PIE1
                      00678    
                      00679    
                      00680  PUSH 
00C5   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C6   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00681 
                      00682 
                      00683  
                      00684  FAR_CALL main_setup,setbit
00C7   ????               M  pagesel setbit
00C8   2???               M  call setbit
00C9   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00685 
                      00686  POP
00CA   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00CB   0384               M  decf FSR,f 
00CC   1683 1303      00687  banksel PIE1
00CE   008C           00688  movwf PIE1
                      00689  
                      00690 
                      00691 
00CF   3006           00692  movlw PEIE
                      00693 
                      00694  PUSH 
00D0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00D1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00695 
00D2   1283 1303      00696    banksel INTCON
00D4   080B           00697    movfw INTCON
                      00698    
                      00699    
                      00700  PUSH 
00D5   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00D6   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00701 
                      00702 
                      00703  
                      00704  FAR_CALL main_setup,setbit
00D7   ????               M  pagesel setbit
00D8   2???               M  call setbit
00D9   ????               M  pagesel main_setup ;This one restores the caller's code page
                      00705 
                      00706  POP
00DA   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00DB   0384               M  decf FSR,f 
00DC   1283 1303      00707  banksel INTCON
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DE   008B           00708  movwf INTCON
                      00709  
                      00710 
                      00711 
00DF   0008           00712  return
                      00713  
                      00714 
                      00715 hllt457 CODE
0000                  00716 ourftou:
0000   0804           00717  movf FSR,w
                      00718  
                      00719 
                      00720  
                      00721  FAR_CALL ourftou ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00722 
                      00723 
0004   3001           00724  movlw .1
                      00725  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00726 
                      00727 
                      00728  
                      00729  FAR_CALL ourftou,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00730 
                      00731 
000A   3000           00732  movlw .0
                      00733  PUSH 
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00734 
                      00735 
                      00736  
                      00737  FAR_CALL ourftou,parm
000D   ????               M  pagesel parm
000E   2???               M  call parm
000F   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00738 
                      00739 
0010   3070           00740  movlw .112
                      00741  
                      00742 
                      00743 
                      00744  PUSH 
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00745 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00746 
0013   3003           00747  movlw .3
                      00748  
                      00749 
                      00750  PUSH 
0014   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0015   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00751 
                      00752 
                      00753  
                      00754  FAR_CALL ourftou,gtf
0016   ????               M  pagesel gtf
0017   2???               M  call gtf
0018   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00755 
                      00756  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   3A00           00757  xorlw .0
001C   1903           00758  btfsc STATUS,Z
001D   2???           00759  goto hlllb51J5 
                      00760  
                      00761 
001E   300F           00762  movlw .15
                      00763  PUSH 
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00764 
                      00765  
0021   2???           00766  goto hlllb51J6
                      00767  
                      00768 
0022                  00769 hlllb51J5:
                      00770 
                      00771 
0022   3000           00772  movlw .0
                      00773  
                      00774 
                      00775 
                      00776  PUSH 
0023   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0024   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00777 
                      00778 
0025   3080           00779  movlw .128
                      00780  
                      00781 
                      00782  PUSH 
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00783 
                      00784 
0028   3001           00785  movlw .1
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00786  PUSH 
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00787 
                      00788 
                      00789  
                      00790  FAR_CALL ourftou,parm
002B   ????               M  pagesel parm
002C   2???               M  call parm
002D   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00791 
                      00792 
002E   3000           00793  movlw .0
                      00794  PUSH 
002F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0030   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00795 
                      00796 
                      00797  
                      00798  HALF_FAR_CALL parm
0031   ????               M  pagesel parm           
0032   2???               M  call parm
                      00799 
                      00800 
                      00801  
                      00802  FAR_CALL ourftou,gtf
0033   ????               M  pagesel gtf
0034   2???               M  call gtf
0035   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00803 
                      00804  POP
0036   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0037   0384               M  decf FSR,f 
0038   3A00           00805  xorlw .0
0039   1903           00806  btfsc STATUS,Z
003A   2???           00807  goto hlllb51J3 
                      00808  
                      00809 
003B   3000           00810  movlw .0
                      00811  PUSH 
003C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00812 
                      00813  
003E   2???           00814  goto hlllb51J4
                      00815  
                      00816 
003F                  00817 hlllb51J3:
                      00818 
                      00819 
                      00820  
                      00821  FAR_CALL ourftou,ftou
003F   ????               M  pagesel ftou
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0040   2???               M  call ftou
0041   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00822 
                      00823 
0042                  00824 hlllb51J4:
                      00825 
                      00826 
0042                  00827 hlllb51J6:
                      00828 
                      00829 
                      00830  
                      00831  FAR_CALL ourftou,kpop
0042   ????               M  pagesel kpop
0043   2???               M  call kpop
0044   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00832  
                      00833 #ifdef HLLMULTITASK 
0045   08??           00834  movf in_isr,f ;In shared RAM, no need for BANKSEL
0046   1903           00835  btfsc STATUS,Z
0047   2???           00836  goto $+3
0048   00??           00837  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
0049   2???           00838  goto $+2      ; is because isr execution is preemptive, and returns only at the 
004A   00??           00839  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      00840 #else          ; thread, and speeding up isr execution helps this problem. In most of
                      00841  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      00842 #endif 
                      00843 
                      00844 
                      00845  POP
004B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
004C   0384               M  decf FSR,f 
                      00846  
                      00847  FAR_CALL ourftou ,kpush
004D   ????               M  pagesel kpush
004E   2???               M  call kpush
004F   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00848  
                      00849 #ifdef HLLMULTITASK 
0050   08??           00850  movf in_isr,f ;In shared RAM, no need for BANKSEL
0051   1903           00851  btfsc STATUS,Z
0052   2???           00852  goto $+3
0053   08??           00853  movf pbase+1,w                 ;in_isr
0054   2???           00854  goto $+2
0055   08??           00855  movf pbase,w   ;not in_isr
                      00856 #else
                      00857  movf pbase,w   
                      00858 #endif  
                      00859 
                      00860  
                      00861 ;LOAD POINTER
0056   0084           00862  movwf FSR
                      00863  
                      00864 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00865  DISCARD
0057   0384               M  decf FSR,f 
                      00866 
                      00867 
                      00868  DISCARD
0058   0384               M  decf FSR,f 
                      00869 
                      00870 
                      00871  
                      00872  FAR_CALL ourftou ,kpop
0059   ????               M  pagesel kpop
005A   2???               M  call kpop
005B   ????               M  pagesel ourftou   ;This one restores the caller's code page
                      00873 
                      00874  PUSH 
005C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00875 
                      00876 
005E   0008           00877  return
                      00878  
                      00879 
                      00880 hllt458 CODE
0000                  00881 longf:
0000   0804           00882  movf FSR,w
                      00883  
                      00884 
                      00885  
                      00886  FAR_CALL longf ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel longf     ;This one restores the caller's code page
                      00887 
                      00888 
0004   30F9           00889  movlw .249
                      00890  
                      00891 
                      00892 
                      00893  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00894 
                      00895 
0007   3007           00896  movlw .7
                      00897  
                      00898 
                      00899  PUSH 
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00900 
                      00901 
000A   3001           00902  movlw .1
                      00903  PUSH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00904 
                      00905 
                      00906  
                      00907  FAR_CALL longf,parm
000D   ????               M  pagesel parm
000E   2???               M  call parm
000F   ????               M  pagesel longf     ;This one restores the caller's code page
                      00908 
                      00909 
0010   3000           00910  movlw .0
                      00911  PUSH 
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00912 
                      00913 
                      00914  
                      00915  HALF_FAR_CALL parm
0013   ????               M  pagesel parm           
0014   2???               M  call parm
                      00916 
                      00917 
                      00918  
                      00919  FAR_CALL longf,addf
0015   ????               M  pagesel addf
0016   2???               M  call addf
0017   ????               M  pagesel longf     ;This one restores the caller's code page
                      00920 
                      00921 
0018   301A           00922  movlw .26
                      00923  
                      00924 
                      00925 
                      00926  PUSH 
0019   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00927 
                      00928 
001B   30FC           00929  movlw .252
                      00930  
                      00931 
                      00932  PUSH 
001C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00933 
                      00934 
                      00935  
                      00936  HALF_FAR_CALL mulf
001E   ????               M  pagesel mulf           
001F   2???               M  call mulf
                      00937 
                      00938 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00939  
                      00940  FAR_CALL longf,ourftou
0020   ????               M  pagesel ourftou
0021   2???               M  call ourftou
0022   ????               M  pagesel longf     ;This one restores the caller's code page
                      00941 
                      00942  POP
0023   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0024   0384               M  decf FSR,f 
0025   ???? ????      00943  banksel setf
0027   00??           00944  movwf setf
                      00945  
                      00946 
                      00947 
0028   30F9           00948  movlw .249
                      00949  
                      00950 
                      00951 
                      00952  PUSH 
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00953 
                      00954 
002B   3007           00955  movlw .7
                      00956  
                      00957 
                      00958  PUSH 
002C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00959 
                      00960 
002E   3005           00961  movlw .5
                      00962  PUSH 
002F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0030   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00963 
                      00964 
                      00965  
                      00966  FAR_CALL longf,parm
0031   ????               M  pagesel parm
0032   2???               M  call parm
0033   ????               M  pagesel longf     ;This one restores the caller's code page
                      00967 
                      00968 
0034   3004           00969  movlw .4
                      00970  PUSH 
0035   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0036   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00971 
                      00972 
                      00973  
                      00974  HALF_FAR_CALL parm
0037   ????               M  pagesel parm           
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0038   2???               M  call parm
                      00975 
                      00976 
                      00977  
                      00978  FAR_CALL longf,addf
0039   ????               M  pagesel addf
003A   2???               M  call addf
003B   ????               M  pagesel longf     ;This one restores the caller's code page
                      00979 
                      00980 
003C   301A           00981  movlw .26
                      00982  
                      00983 
                      00984 
                      00985  PUSH 
003D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00986 
                      00987 
003F   30FC           00988  movlw .252
                      00989  
                      00990 
                      00991  PUSH 
0040   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0041   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      00992 
                      00993 
                      00994  
                      00995  HALF_FAR_CALL mulf
0042   ????               M  pagesel mulf           
0043   2???               M  call mulf
                      00996 
                      00997 
                      00998  
                      00999  FAR_CALL longf,ourftou
0044   ????               M  pagesel ourftou
0045   2???               M  call ourftou
0046   ????               M  pagesel longf     ;This one restores the caller's code page
                      01000 
                      01001  POP
0047   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0048   0384               M  decf FSR,f 
0049   ???? ????      01002  banksel setg
004B   00??           01003  movwf setg
                      01004  
                      01005 
                      01006 
004C   3000           01007  movlw .0
                      01008  
                      01009 
                      01010 
                      01011  PUSH 
004D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01012 
                      01013 
004F   3000           01014  movlw .0
                      01015  
                      01016 
                      01017  PUSH 
0050   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0051   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01018 
                      01019 
0052   3004           01020  movlw .4
                      01021  PUSH 
0053   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0054   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01022 
                      01023 
                      01024  
                      01025  HALF_FAR_CALL samplef
0055   ????               M  pagesel samplef        
0056   2???               M  call samplef
                      01026 
                      01027 
                      01028  
                      01029  HALF_FAR_CALL addf
0057   ????               M  pagesel addf           
0058   2???               M  call addf
                      01030 
                      01031 
                      01032  
                      01033  FAR_CALL longf,control
0059   ????               M  pagesel control
005A   2???               M  call control
005B   ????               M  pagesel longf     ;This one restores the caller's code page
                      01034 
                      01035 
005C   3000           01036  movlw .0
                      01037  PUSH 
005D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01038 
                      01039 
                      01040  
                      01041  HALF_FAR_CALL samplef
005F   ????               M  pagesel samplef        
0060   2???               M  call samplef
                      01042 
                      01043 
                      01044  
                      01045  FAR_CALL longf,adjust
0061   ????               M  pagesel adjust
0062   2???               M  call adjust
0063   ????               M  pagesel longf     ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01046 
                      01047  ;
                      01048  KDISCARD 
0064   03??               M  decf alt_fsr,f 
0065   2???           01049  goto longf
                      01050 
                      01051  
                      01052 
                      01053 hllt4513 CODE
0000                  01054 adjust:
0000   0804           01055  movf FSR,w
                      01056  
                      01057 
                      01058  
                      01059  FAR_CALL adjust ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01060 
                      01061 
0004   3001           01062  movlw .1
                      01063  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01064 
                      01065 
                      01066  
                      01067  FAR_CALL adjust,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01068 
                      01069 
000A   3000           01070  movlw .0
                      01071  PUSH 
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01072 
                      01073 
                      01074  
                      01075  FAR_CALL adjust,parm
000D   ????               M  pagesel parm
000E   2???               M  call parm
000F   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01076 
                      01077 
0010   300F           01078  movlw .15
                      01079  
                      01080 
                      01081 
                      01082  PUSH 
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01083 
                      01084 
0013   3009           01085  movlw .9
                      01086  
                      01087 
                      01088  PUSH 
0014   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0015   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01089 
                      01090 
                      01091  
                      01092  FAR_CALL adjust,gtf
0016   ????               M  pagesel gtf
0017   2???               M  call gtf
0018   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01093 
                      01094 
0019   305A           01095  movlw .90
                      01096  
                      01097 
                      01098 
                      01099  PUSH 
001A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01100 
                      01101 
001C   3008           01102  movlw .8
                      01103  
                      01104 
                      01105  PUSH 
001D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01106 
                      01107 
001F   3003           01108  movlw .3
                      01109  PUSH 
0020   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0021   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01110 
                      01111 
                      01112  
                      01113  FAR_CALL adjust,parm
0022   ????               M  pagesel parm
0023   2???               M  call parm
0024   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01114 
                      01115 
0025   3002           01116  movlw .2
                      01117  PUSH 
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01118 
                      01119 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01120  
                      01121  HALF_FAR_CALL parm
0028   ????               M  pagesel parm           
0029   2???               M  call parm
                      01122 
                      01123 
                      01124  
                      01125  HALF_FAR_CALL gtf
002A   ????               M  pagesel gtf            
002B   2???               M  call gtf
                      01126 
                      01127 
                      01128  
                      01129  FAR_CALL adjust,andb
002C   ????               M  pagesel andb
002D   2???               M  call andb
002E   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01130 
                      01131  POP
002F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0030   0384               M  decf FSR,f 
0031   3A00           01132  xorlw .0
0032   1903           01133  btfsc STATUS,Z
0033   2???           01134  goto hlllb51J11 
                      01135  
                      01136 
0034   3000           01137  movlw .0
                      01138  
                      01139 
                      01140 
                      01141  PUSH 
0035   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0036   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01142 
                      01143 
0037   3000           01144  movlw .0
                      01145  
                      01146 
                      01147  PUSH 
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01148 
                      01149 
003A   3003           01150  movlw .3
                      01151  PUSH 
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01152 
                      01153 
                      01154  
                      01155  FAR_CALL adjust,parm
003D   ????               M  pagesel parm
003E   2???               M  call parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003F   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01156 
                      01157 
0040   3002           01158  movlw .2
                      01159  PUSH 
0041   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0042   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01160 
                      01161 
                      01162  
                      01163  HALF_FAR_CALL parm
0043   ????               M  pagesel parm           
0044   2???               M  call parm
                      01164 
                      01165 
                      01166  
                      01167  FAR_CALL adjust,addf
0045   ????               M  pagesel addf
0046   2???               M  call addf
0047   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01168 
                      01169  
0048   2???           01170  goto hlllb51J12
                      01171  
                      01172 
0049                  01173 hlllb51J11:
                      01174 
                      01175 
0049   305C           01176  movlw .92
                      01177  
                      01178 
                      01179 
                      01180  PUSH 
004A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01181 
                      01182 
004C   3006           01183  movlw .6
                      01184  
                      01185 
                      01186  PUSH 
004D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01187 
                      01188 
004F   3001           01189  movlw .1
                      01190  PUSH 
0050   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0051   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01191 
                      01192 
                      01193  
                      01194  FAR_CALL adjust,parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0052   ????               M  pagesel parm
0053   2???               M  call parm
0054   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01195 
                      01196 
0055   3000           01197  movlw .0
                      01198  PUSH 
0056   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0057   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01199 
                      01200 
                      01201  
                      01202  HALF_FAR_CALL parm
0058   ????               M  pagesel parm           
0059   2???               M  call parm
                      01203 
                      01204 
                      01205  
                      01206  FAR_CALL adjust,gtf
005A   ????               M  pagesel gtf
005B   2???               M  call gtf
005C   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01207 
                      01208 
005D   3003           01209  movlw .3
                      01210  PUSH 
005E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01211 
                      01212 
                      01213  
                      01214  FAR_CALL adjust,parm
0060   ????               M  pagesel parm
0061   2???               M  call parm
0062   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01215 
                      01216 
0063   3002           01217  movlw .2
                      01218  PUSH 
0064   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0065   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01219 
                      01220 
                      01221  
                      01222  FAR_CALL adjust,parm
0066   ????               M  pagesel parm
0067   2???               M  call parm
0068   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01223 
                      01224 
0069   307A           01225  movlw .122
                      01226  
                      01227 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01228 
                      01229  PUSH 
006A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01230 
                      01231 
006C   3007           01232  movlw .7
                      01233  
                      01234 
                      01235  PUSH 
006D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01236 
                      01237 
                      01238  
                      01239  HALF_FAR_CALL gtf
006F   ????               M  pagesel gtf            
0070   2???               M  call gtf
                      01240 
                      01241 
                      01242  
                      01243  FAR_CALL adjust,andb
0071   ????               M  pagesel andb
0072   2???               M  call andb
0073   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01244 
                      01245  POP
0074   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0075   0384               M  decf FSR,f 
0076   3A00           01246  xorlw .0
0077   1903           01247  btfsc STATUS,Z
0078   2???           01248  goto hlllb51J9 
                      01249  
                      01250 
0079   3080           01251  movlw .128
                      01252  
                      01253 
                      01254 
                      01255  PUSH 
007A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01256 
                      01257 
007C   3000           01258  movlw .0
                      01259  
                      01260 
                      01261  PUSH 
007D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01262 
                      01263 
007F   3003           01264  movlw .3
                      01265  PUSH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0080   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0081   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01266 
                      01267 
                      01268  
                      01269  FAR_CALL adjust,parm
0082   ????               M  pagesel parm
0083   2???               M  call parm
0084   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01270 
                      01271 
0085   3002           01272  movlw .2
                      01273  PUSH 
0086   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0087   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01274 
                      01275 
                      01276  
                      01277  HALF_FAR_CALL parm
0088   ????               M  pagesel parm           
0089   2???               M  call parm
                      01278 
                      01279 
                      01280  
                      01281  FAR_CALL adjust,addf
008A   ????               M  pagesel addf
008B   2???               M  call addf
008C   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01282 
                      01283  
008D   2???           01284  goto hlllb51J10
                      01285  
                      01286 
008E                  01287 hlllb51J9:
                      01288 
                      01289 
008E   3003           01290  movlw .3
                      01291  PUSH 
008F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0090   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01292 
                      01293 
                      01294  
                      01295  FAR_CALL adjust,parm
0091   ????               M  pagesel parm
0092   2???               M  call parm
0093   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01296 
                      01297 
0094   3002           01298  movlw .2
                      01299  PUSH 
0095   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0096   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01300 
                      01301 
                      01302  
                      01303  FAR_CALL adjust,parm
0097   ????               M  pagesel parm
0098   2???               M  call parm
0099   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01304 
                      01305 
009A                  01306 hlllb51J10:
                      01307 
                      01308 
009A                  01309 hlllb51J12:
                      01310 
                      01311 
                      01312  
                      01313  FAR_CALL adjust,kpop
009A   ????               M  pagesel kpop
009B   2???               M  call kpop
009C   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01314  
                      01315 #ifdef HLLMULTITASK 
009D   08??           01316  movf in_isr,f ;In shared RAM, no need for BANKSEL
009E   1903           01317  btfsc STATUS,Z
009F   2???           01318  goto $+3
00A0   00??           01319  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
00A1   2???           01320  goto $+2      ; is because isr execution is preemptive, and returns only at the 
00A2   00??           01321  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      01322 #else          ; thread, and speeding up isr execution helps this problem. In most of
                      01323  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      01324 #endif 
                      01325 
                      01326 
                      01327  POP
00A3   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A4   0384               M  decf FSR,f 
                      01328  
                      01329  FAR_CALL adjust ,kpush
00A5   ????               M  pagesel kpush
00A6   2???               M  call kpush
00A7   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01330  
                      01331 
                      01332  POP
00A8   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A9   0384               M  decf FSR,f 
                      01333  
                      01334  FAR_CALL adjust ,kpush
00AA   ????               M  pagesel kpush
00AB   2???               M  call kpush
00AC   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01335  
                      01336 #ifdef HLLMULTITASK 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AD   08??           01337  movf in_isr,f ;In shared RAM, no need for BANKSEL
00AE   1903           01338  btfsc STATUS,Z
00AF   2???           01339  goto $+3
00B0   08??           01340  movf pbase+1,w                 ;in_isr
00B1   2???           01341  goto $+2
00B2   08??           01342  movf pbase,w   ;not in_isr
                      01343 #else
                      01344  movf pbase,w   
                      01345 #endif  
                      01346 
                      01347  
                      01348 ;LOAD POINTER
00B3   0084           01349  movwf FSR
                      01350  
                      01351 
                      01352  DISCARD
00B4   0384               M  decf FSR,f 
                      01353 
                      01354 
                      01355  DISCARD
00B5   0384               M  decf FSR,f 
                      01356 
                      01357 
                      01358  DISCARD
00B6   0384               M  decf FSR,f 
                      01359 
                      01360 
                      01361  DISCARD
00B7   0384               M  decf FSR,f 
                      01362 
                      01363 
                      01364  
                      01365  FAR_CALL adjust ,kpop
00B8   ????               M  pagesel kpop
00B9   2???               M  call kpop
00BA   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01366 
                      01367  PUSH 
00BB   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00BC   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01368 
                      01369 
                      01370  
                      01371  FAR_CALL adjust ,kpop
00BD   ????               M  pagesel kpop
00BE   2???               M  call kpop
00BF   ????               M  pagesel adjust    ;This one restores the caller's code page
                      01372 
                      01373  PUSH 
00C0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01374 
                      01375 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C2   0008           01376  return
                      01377  
                      01378 
                      01379 hllt4520 CODE
0000                  01380 usrpwm:
0000   0804           01381  movf FSR,w
                      01382  
                      01383 
                      01384  
                      01385  FAR_CALL usrpwm ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01386 
                      01387 
0004   3070           01388  movlw .112
                      01389  
                      01390 
                      01391 
                      01392  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01393 
                      01394 
0007   3005           01395  movlw .5
                      01396  
                      01397 
                      01398  PUSH 
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01399 
                      01400 
000A   3001           01401  movlw .1
                      01402  PUSH 
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01403 
                      01404 
                      01405  
                      01406  FAR_CALL usrpwm,parm
000D   ????               M  pagesel parm
000E   2???               M  call parm
000F   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01407 
                      01408 
0010   3000           01409  movlw .0
                      01410  PUSH 
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01411 
                      01412 
                      01413  
                      01414  HALF_FAR_CALL parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013   ????               M  pagesel parm           
0014   2???               M  call parm
                      01415 
                      01416 
                      01417  
                      01418  FAR_CALL usrpwm,mulf
0015   ????               M  pagesel mulf
0016   2???               M  call mulf
0017   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01419 
                      01420 
0018   3000           01421  movlw .0
                      01422  
                      01423 
                      01424 
                      01425  PUSH 
0019   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01426 
                      01427 
001B   30FD           01428  movlw .253
                      01429  
                      01430 
                      01431  PUSH 
001C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01432 
                      01433 
001E   3003           01434  movlw .3
                      01435  PUSH 
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01436 
                      01437 
                      01438  
                      01439  FAR_CALL usrpwm,parm
0021   ????               M  pagesel parm
0022   2???               M  call parm
0023   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01440 
                      01441 
0024   3002           01442  movlw .2
                      01443  PUSH 
0025   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0026   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01444 
                      01445 
                      01446  
                      01447  HALF_FAR_CALL parm
0027   ????               M  pagesel parm           
0028   2???               M  call parm
                      01448 
                      01449 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01450  
                      01451  FAR_CALL usrpwm,mulf
0029   ????               M  pagesel mulf
002A   2???               M  call mulf
002B   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01452 
                      01453 
002C   307A           01454  movlw .122
                      01455  
                      01456 
                      01457 
                      01458  PUSH 
002D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01459 
                      01460 
002F   300B           01461  movlw .11
                      01462  
                      01463 
                      01464  PUSH 
0030   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0031   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01465 
                      01466 
0032   3005           01467  movlw .5
                      01468  PUSH 
0033   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0034   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01469 
                      01470 
                      01471  
                      01472  FAR_CALL usrpwm,parm
0035   ????               M  pagesel parm
0036   2???               M  call parm
0037   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01473 
                      01474 
0038   3004           01475  movlw .4
                      01476  PUSH 
0039   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01477 
                      01478 
                      01479  
                      01480  HALF_FAR_CALL parm
003B   ????               M  pagesel parm           
003C   2???               M  call parm
                      01481 
                      01482 
                      01483  
                      01484  HALF_FAR_CALL mulf
003D   ????               M  pagesel mulf           
003E   2???               M  call mulf
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01485 
                      01486 
                      01487  
                      01488  HALF_FAR_CALL addf
003F   ????               M  pagesel addf           
0040   2???               M  call addf
                      01489 
                      01490 
                      01491  
                      01492  HALF_FAR_CALL addf
0041   ????               M  pagesel addf           
0042   2???               M  call addf
                      01493 
                      01494 
                      01495  
                      01496  HALF_FAR_CALL copyf
0043   ????               M  pagesel copyf          
0044   2???               M  call copyf
                      01497 
                      01498 
                      01499  
                      01500  FAR_CALL usrpwm,copyf
0045   ????               M  pagesel copyf
0046   2???               M  call copyf
0047   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01501 
                      01502 
0048   3000           01503  movlw .0
                      01504  
                      01505 
                      01506 
                      01507  PUSH 
0049   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01508 
                      01509 
004B   3080           01510  movlw .128
                      01511  
                      01512 
                      01513  PUSH 
004C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01514 
                      01515 
                      01516  
                      01517  FAR_CALL usrpwm,gtf
004E   ????               M  pagesel gtf
004F   2???               M  call gtf
0050   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01518 
                      01519  POP
0051   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0052   0384               M  decf FSR,f 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0053   3A00           01520  xorlw .0
0054   1903           01521  btfsc STATUS,Z
0055   2???           01522  goto hlllb51J18 
                      01523  
                      01524 
0056   3000           01525  movlw .0
                      01526  
                      01527 
                      01528 
                      01529  PUSH 
0057   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0058   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01530 
                      01531 
0059   300A           01532  movlw .10
                      01533  
                      01534 
                      01535  PUSH 
005A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01536 
                      01537 
                      01538  
                      01539  FAR_CALL usrpwm,gtf
005C   ????               M  pagesel gtf
005D   2???               M  call gtf
005E   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01540 
                      01541  POP
005F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0060   0384               M  decf FSR,f 
0061   3A00           01542  xorlw .0
0062   1903           01543  btfsc STATUS,Z
0063   2???           01544  goto hlllb51J14 
                      01545  
                      01546 
0064   3000           01547  movlw .0
                      01548  
                      01549 
                      01550 
                      01551  PUSH 
0065   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0066   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01552 
                      01553 
0067   300A           01554  movlw .10
                      01555  
                      01556 
                      01557  PUSH 
0068   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0069   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01558 
                      01559 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006A   3001           01560  movlw .1
                      01561  PUSH 
006B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01562 
                      01563 
                      01564  
                      01565  FAR_CALL usrpwm,pwmf
006D   ????               M  pagesel pwmf
006E   2???               M  call pwmf
006F   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01566 
                      01567  
0070   2???           01568  goto hlllb51J15
                      01569  
                      01570 
0071                  01571 hlllb51J14:
                      01572 
                      01573 
0071   3001           01574  movlw .1
                      01575  PUSH 
0072   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0073   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01576 
                      01577 
                      01578  
                      01579  FAR_CALL usrpwm,pwmf
0074   ????               M  pagesel pwmf
0075   2???               M  call pwmf
0076   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01580 
                      01581 
0077                  01582 hlllb51J15:
                      01583 
                      01584  
0077   2???           01585  goto hlllb51J19
                      01586  
                      01587 
0078                  01588 hlllb51J18:
                      01589 
                      01590 
0078   3080           01591  movlw .128
                      01592  
                      01593 
                      01594 
                      01595  PUSH 
0079   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01596 
                      01597 
007B   300A           01598  movlw .10
                      01599  
                      01600 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01601  PUSH 
007C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01602 
                      01603 
                      01604  
                      01605  FAR_CALL usrpwm,gtf
007E   ????               M  pagesel gtf
007F   2???               M  call gtf
0080   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01606 
                      01607  POP
0081   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0082   0384               M  decf FSR,f 
0083   3A00           01608  xorlw .0
0084   1903           01609  btfsc STATUS,Z
0085   2???           01610  goto hlllb51J16 
                      01611  
                      01612 
0086   3080           01613  movlw .128
                      01614  
                      01615 
                      01616 
                      01617  PUSH 
0087   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0088   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01618 
                      01619 
0089   3000           01620  movlw .0
                      01621  
                      01622 
                      01623  PUSH 
008A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
008B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01624 
                      01625 
                      01626  
                      01627  FAR_CALL usrpwm,mulf
008C   ????               M  pagesel mulf
008D   2???               M  call mulf
008E   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01628 
                      01629 
008F   3000           01630  movlw .0
                      01631  PUSH 
0090   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0091   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01632 
                      01633 
                      01634  
                      01635  FAR_CALL usrpwm,pwmf
0092   ????               M  pagesel pwmf
0093   2???               M  call pwmf
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0094   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01636 
                      01637  
0095   2???           01638  goto hlllb51J17
                      01639  
                      01640 
0096                  01641 hlllb51J16:
                      01642 
                      01643 
0096   3000           01644  movlw .0
                      01645  
                      01646 
                      01647 
                      01648  PUSH 
0097   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0098   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01649 
                      01650 
0099   300A           01651  movlw .10
                      01652  
                      01653 
                      01654  PUSH 
009A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01655 
                      01656 
009C   3000           01657  movlw .0
                      01658  PUSH 
009D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01659 
                      01660 
                      01661  
                      01662  FAR_CALL usrpwm,pwmf
009F   ????               M  pagesel pwmf
00A0   2???               M  call pwmf
00A1   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01663 
                      01664 
00A2                  01665 hlllb51J17:
                      01666 
                      01667 
00A2                  01668 hlllb51J19:
                      01669 
                      01670 
                      01671  
                      01672  FAR_CALL usrpwm,kpop
00A2   ????               M  pagesel kpop
00A3   2???               M  call kpop
00A4   ????               M  pagesel usrpwm    ;This one restores the caller's code page
                      01673 
                      01674 ;LOAD POINTER
00A5   0084           01675  movwf FSR
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01676  
                      01677 
                      01678  DISCARD
00A6   0384               M  decf FSR,f 
                      01679 
                      01680 
                      01681  DISCARD
00A7   0384               M  decf FSR,f 
                      01682 
                      01683 
                      01684  DISCARD
00A8   0384               M  decf FSR,f 
                      01685 
                      01686 
                      01687  DISCARD
00A9   0384               M  decf FSR,f 
                      01688 
                      01689 
                      01690  DISCARD
00AA   0384               M  decf FSR,f 
                      01691 
                      01692 
                      01693  DISCARD
00AB   0384               M  decf FSR,f 
                      01694 
                      01695 
00AC   0008           01696  return
                      01697  
                      01698 
                      01699 hllt4527 CODE
0000                  01700 conform_i:
0000   0804           01701  movf FSR,w
                      01702  
                      01703 
                      01704  
                      01705  FAR_CALL conform_i ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01706 
                      01707 
0004   3001           01708  movlw .1
                      01709  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01710 
                      01711 
                      01712  
                      01713  FAR_CALL conform_i,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01714 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01715 
000A   3000           01716  movlw .0
                      01717  PUSH 
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01718 
                      01719 
                      01720  
                      01721  FAR_CALL conform_i,parm
000D   ????               M  pagesel parm
000E   2???               M  call parm
000F   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01722 
                      01723 
0010   3000           01724  movlw .0
                      01725  
                      01726 
                      01727 
                      01728  PUSH 
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01729 
                      01730 
0013   3080           01731  movlw .128
                      01732  
                      01733 
                      01734  PUSH 
0014   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0015   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01735 
                      01736 
                      01737  
                      01738  FAR_CALL conform_i,gtf
0016   ????               M  pagesel gtf
0017   2???               M  call gtf
0018   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01739 
                      01740  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   3A00           01741  xorlw .0
001C   1903           01742  btfsc STATUS,Z
001D   2???           01743  goto hlllb51J25 
                      01744  
                      01745 
001E   3001           01746  movlw .1
                      01747  PUSH 
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01748 
                      01749 
                      01750  
                      01751  FAR_CALL conform_i,parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021   ????               M  pagesel parm
0022   2???               M  call parm
0023   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01752 
                      01753 
0024   3000           01754  movlw .0
                      01755  PUSH 
0025   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0026   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01756 
                      01757 
                      01758  
                      01759  FAR_CALL conform_i,parm
0027   ????               M  pagesel parm
0028   2???               M  call parm
0029   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01760 
                      01761 
002A   307A           01762  movlw .122
                      01763  
                      01764 
                      01765 
                      01766  PUSH 
002B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01767 
                      01768 
002D   300B           01769  movlw .11
                      01770  
                      01771 
                      01772  PUSH 
002E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01773 
                      01774 
                      01775  
                      01776  FAR_CALL conform_i,gtf
0030   ????               M  pagesel gtf
0031   2???               M  call gtf
0032   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01777 
                      01778  POP
0033   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0034   0384               M  decf FSR,f 
0035   3A00           01779  xorlw .0
0036   1903           01780  btfsc STATUS,Z
0037   2???           01781  goto hlllb51J21 
                      01782  
                      01783 
0038   307A           01784  movlw .122
                      01785  
                      01786 
                      01787 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01788  PUSH 
0039   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01789 
                      01790 
003B   300B           01791  movlw .11
                      01792  
                      01793 
                      01794  PUSH 
003C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01795 
                      01796  
003E   2???           01797  goto hlllb51J22
                      01798  
                      01799 
003F                  01800 hlllb51J21:
                      01801 
                      01802 
003F                  01803 hlllb51J22:
                      01804 
                      01805  
003F   2???           01806  goto hlllb51J26
                      01807  
                      01808 
0040                  01809 hlllb51J25:
                      01810 
                      01811 
0040   30FA           01812  movlw .250
                      01813  
                      01814 
                      01815 
                      01816  PUSH 
0041   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0042   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01817 
                      01818 
0043   300B           01819  movlw .11
                      01820  
                      01821 
                      01822  PUSH 
0044   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0045   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01823 
                      01824 
0046   3001           01825  movlw .1
                      01826  PUSH 
0047   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0048   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01827 
                      01828 
                      01829  
                      01830  FAR_CALL conform_i,parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0049   ????               M  pagesel parm
004A   2???               M  call parm
004B   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01831 
                      01832 
004C   3000           01833  movlw .0
                      01834  PUSH 
004D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01835 
                      01836 
                      01837  
                      01838  HALF_FAR_CALL parm
004F   ????               M  pagesel parm           
0050   2???               M  call parm
                      01839 
                      01840 
                      01841  
                      01842  FAR_CALL conform_i,gtf
0051   ????               M  pagesel gtf
0052   2???               M  call gtf
0053   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01843 
                      01844  POP
0054   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0055   0384               M  decf FSR,f 
0056   3A00           01845  xorlw .0
0057   1903           01846  btfsc STATUS,Z
0058   2???           01847  goto hlllb51J23 
                      01848  
                      01849 
0059   30FA           01850  movlw .250
                      01851  
                      01852 
                      01853 
                      01854  PUSH 
005A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01855 
                      01856 
005C   300B           01857  movlw .11
                      01858  
                      01859 
                      01860  PUSH 
005D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01861 
                      01862  
005F   2???           01863  goto hlllb51J24
                      01864  
                      01865 
0060                  01866 hlllb51J23:
                      01867 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01868 
0060                  01869 hlllb51J24:
                      01870 
                      01871 
0060                  01872 hlllb51J26:
                      01873 
                      01874 
                      01875  
                      01876  FAR_CALL conform_i,kpop
0060   ????               M  pagesel kpop
0061   2???               M  call kpop
0062   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01877  
                      01878 #ifdef HLLMULTITASK 
0063   08??           01879  movf in_isr,f ;In shared RAM, no need for BANKSEL
0064   1903           01880  btfsc STATUS,Z
0065   2???           01881  goto $+3
0066   00??           01882  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
0067   2???           01883  goto $+2      ; is because isr execution is preemptive, and returns only at the 
0068   00??           01884  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      01885 #else          ; thread, and speeding up isr execution helps this problem. In most of
                      01886  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      01887 #endif 
                      01888 
                      01889 
                      01890  POP
0069   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
006A   0384               M  decf FSR,f 
                      01891  
                      01892  FAR_CALL conform_i ,kpush
006B   ????               M  pagesel kpush
006C   2???               M  call kpush
006D   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01893  
                      01894 
                      01895  POP
006E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
006F   0384               M  decf FSR,f 
                      01896  
                      01897  FAR_CALL conform_i ,kpush
0070   ????               M  pagesel kpush
0071   2???               M  call kpush
0072   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01898  
                      01899 #ifdef HLLMULTITASK 
0073   08??           01900  movf in_isr,f ;In shared RAM, no need for BANKSEL
0074   1903           01901  btfsc STATUS,Z
0075   2???           01902  goto $+3
0076   08??           01903  movf pbase+1,w                 ;in_isr
0077   2???           01904  goto $+2
0078   08??           01905  movf pbase,w   ;not in_isr
                      01906 #else
                      01907  movf pbase,w   
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01908 #endif  
                      01909 
                      01910  
                      01911 ;LOAD POINTER
0079   0084           01912  movwf FSR
                      01913  
                      01914 
                      01915  DISCARD
007A   0384               M  decf FSR,f 
                      01916 
                      01917 
                      01918  DISCARD
007B   0384               M  decf FSR,f 
                      01919 
                      01920 
                      01921  
                      01922  FAR_CALL conform_i ,kpop
007C   ????               M  pagesel kpop
007D   2???               M  call kpop
007E   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01923 
                      01924  PUSH 
007F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0080   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01925 
                      01926 
                      01927  
                      01928  FAR_CALL conform_i ,kpop
0081   ????               M  pagesel kpop
0082   2???               M  call kpop
0083   ????               M  pagesel conform_i ;This one restores the caller's code page
                      01929 
                      01930  PUSH 
0084   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0085   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01931 
                      01932 
0086   0008           01933  return
                      01934  
                      01935 
                      01936 hllt4538 CODE
0000                  01937 control:
0000   0804           01938  movf FSR,w
                      01939  
                      01940 
                      01941  
                      01942  FAR_CALL control ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel control   ;This one restores the caller's code page
                      01943 
0004   1283 1303      01944    banksel TMR1H
0006   080F           01945    movfw TMR1H
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01946    
                      01947    
                      01948  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01949 
                      01950 
                      01951  
                      01952  FAR_CALL control,utof
0009   ????               M  pagesel utof
000A   2???               M  call utof
000B   ????               M  pagesel control   ;This one restores the caller's code page
                      01953 
                      01954 
000C   30FF           01955  movlw -.1
                      01956  PUSH 
000D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01957 
                      01958 
                      01959  
                      01960  FAR_CALL control,parm
000F   ????               M  pagesel parm
0010   2???               M  call parm
0011   ????               M  pagesel control   ;This one restores the caller's code page
                      01961 
                      01962 
0012   30FE           01963  movlw -.2
                      01964  PUSH 
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01965 
                      01966 
                      01967  
                      01968  FAR_CALL control,parm
0015   ????               M  pagesel parm
0016   2???               M  call parm
0017   ????               M  pagesel control   ;This one restores the caller's code page
                      01969 
                      01970 
0018   3080           01971  movlw .128
                      01972  
                      01973 
                      01974 
                      01975  PUSH 
0019   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01976 
                      01977 
001B   3000           01978  movlw .0
                      01979  
                      01980 
                      01981  PUSH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01982 
                      01983 
001E   3009           01984  movlw .9
                      01985  PUSH 
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01986 
                      01987 
                      01988  
                      01989  FAR_CALL control,parm
0021   ????               M  pagesel parm
0022   2???               M  call parm
0023   ????               M  pagesel control   ;This one restores the caller's code page
                      01990 
                      01991 
0024   3008           01992  movlw .8
                      01993  PUSH 
0025   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0026   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01994 
                      01995 
                      01996  
                      01997  HALF_FAR_CALL parm
0027   ????               M  pagesel parm           
0028   2???               M  call parm
                      01998 
                      01999 
                      02000  
                      02001  HALF_FAR_CALL mulf
0029   ????               M  pagesel mulf           
002A   2???               M  call mulf
                      02002 
                      02003 
                      02004  
                      02005  FAR_CALL control,addf
002B   ????               M  pagesel addf
002C   2???               M  call addf
002D   ????               M  pagesel control   ;This one restores the caller's code page
                      02006 
002E   ???? ????      02007    banksel ticked
0030   08??           02008    movfw ticked
                      02009    
                      02010    
                      02011  
0031   3A00           02012  xorlw .0
0032   1903           02013  btfsc STATUS,Z
0033   2???           02014  goto hlllb51J28 
                      02015  
                      02016 
0034   3001           02017  movlw .1 
                      02018  PUSH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0035   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0036   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02019 
                      02020 
0037   3000           02021  movlw .0 
                      02022  
0038   ???? ????      02023  banksel ticked
003A   00??           02024  movwf ticked
                      02025  
                      02026 
                      02027  
003B   2???           02028  goto hlllb51J29
                      02029  
                      02030 
003C                  02031 hlllb51J28:
                      02032 
                      02033 
003C   3000           02034  movlw .0
                      02035  PUSH 
003D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02036 
                      02037 
003F                  02038 hlllb51J29:
                      02039 
                      02040 
003F   30FB           02041  movlw -.5
                      02042  PUSH 
0040   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0041   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02043 
                      02044 
                      02045  
                      02046  FAR_CALL control,parm
0042   ????               M  pagesel parm
0043   2???               M  call parm
0044   ????               M  pagesel control   ;This one restores the caller's code page
                      02047 
                      02048  POP
0045   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0046   0384               M  decf FSR,f 
0047   3A00           02049  xorlw .0
0048   1903           02050  btfsc STATUS,Z
0049   2???           02051  goto hlllb51J30 
                      02052  
                      02053 
004A   3008           02054  movlw .8
                      02055  
                      02056 
                      02057 
                      02058  PUSH 
004B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02059 
                      02060 
004D   3004           02061  movlw .4
                      02062  
                      02063 
                      02064  PUSH 
004E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02065 
                      02066  
0050   2???           02067  goto hlllb51J31
                      02068  
                      02069 
0051                  02070 hlllb51J30:
                      02071 
                      02072 
0051   30FD           02073  movlw -.3
                      02074  PUSH 
0052   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0053   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02075 
                      02076 
                      02077  
                      02078  FAR_CALL control,parm
0054   ????               M  pagesel parm
0055   2???               M  call parm
0056   ????               M  pagesel control   ;This one restores the caller's code page
                      02079 
                      02080 
0057   30FC           02081  movlw -.4
                      02082  PUSH 
0058   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0059   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02083 
                      02084 
                      02085  
                      02086  FAR_CALL control,parm
005A   ????               M  pagesel parm
005B   2???               M  call parm
005C   ????               M  pagesel control   ;This one restores the caller's code page
                      02087 
                      02088 
005D                  02089 hlllb51J31:
                      02090 
                      02091 
005D   30FB           02092  movlw -.5
                      02093  PUSH 
005E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02094 
                      02095 
                      02096  
                      02097  FAR_CALL control,parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0060   ????               M  pagesel parm
0061   2???               M  call parm
0062   ????               M  pagesel control   ;This one restores the caller's code page
                      02098 
                      02099  POP
0063   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0064   0384               M  decf FSR,f 
0065   3A00           02100  xorlw .0
0066   1903           02101  btfsc STATUS,Z
0067   2???           02102  goto hlllb51J32 
                      02103  
                      02104 
0068   3000           02105  movlw .0
                      02106  
                      02107 
                      02108 
                      02109  PUSH 
0069   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02110 
                      02111 
006B   3000           02112  movlw .0
                      02113  
                      02114 
                      02115  PUSH 
006C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02116 
                      02117 
006E   3004           02118  movlw .4
                      02119  PUSH 
006F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0070   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02120 
                      02121 
                      02122  
                      02123  HALF_FAR_CALL samplef
0071   ????               M  pagesel samplef        
0072   2???               M  call samplef
                      02124 
                      02125 
                      02126  
                      02127  FAR_CALL control,addf
0073   ????               M  pagesel addf
0074   2???               M  call addf
0075   ????               M  pagesel control   ;This one restores the caller's code page
                      02128 
                      02129  
0076   2???           02130  goto hlllb51J33
                      02131  
                      02132 
0077                  02133 hlllb51J32:
                      02134 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02135 
0077   3001           02136  movlw .1
                      02137  PUSH 
0078   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0079   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02138 
                      02139 
                      02140  
                      02141  FAR_CALL control,parm
007A   ????               M  pagesel parm
007B   2???               M  call parm
007C   ????               M  pagesel control   ;This one restores the caller's code page
                      02142 
                      02143 
007D   3000           02144  movlw .0
                      02145  PUSH 
007E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02146 
                      02147 
                      02148  
                      02149  FAR_CALL control,parm
0080   ????               M  pagesel parm
0081   2???               M  call parm
0082   ????               M  pagesel control   ;This one restores the caller's code page
                      02150 
                      02151 
0083                  02152 hlllb51J33:
                      02153 
                      02154 
0083   3007           02155  movlw .7
                      02156  PUSH 
0084   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0085   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02157 
                      02158 
                      02159  
                      02160  FAR_CALL control,parm
0086   ????               M  pagesel parm
0087   2???               M  call parm
0088   ????               M  pagesel control   ;This one restores the caller's code page
                      02161 
                      02162 
0089   3006           02163  movlw .6
                      02164  PUSH 
008A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
008B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02165 
                      02166 
                      02167  
                      02168  FAR_CALL control,parm
008C   ????               M  pagesel parm
008D   2???               M  call parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008E   ????               M  pagesel control   ;This one restores the caller's code page
                      02169 
                      02170 
008F   3080           02171  movlw .128
                      02172  
                      02173 
                      02174 
                      02175  PUSH 
0090   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0091   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02176 
                      02177 
0092   3000           02178  movlw .0
                      02179  
                      02180 
                      02181  PUSH 
0093   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0094   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02182 
                      02183 
0095   30F8           02184  movlw -.8
                      02185  PUSH 
0096   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0097   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02186 
                      02187 
                      02188  
                      02189  FAR_CALL control,parm
0098   ????               M  pagesel parm
0099   2???               M  call parm
009A   ????               M  pagesel control   ;This one restores the caller's code page
                      02190 
                      02191 
009B   30F7           02192  movlw -.9
                      02193  PUSH 
009C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02194 
                      02195 
                      02196  
                      02197  HALF_FAR_CALL parm
009E   ????               M  pagesel parm           
009F   2???               M  call parm
                      02198 
                      02199 
                      02200  
                      02201  HALF_FAR_CALL mulf
00A0   ????               M  pagesel mulf           
00A1   2???               M  call mulf
                      02202 
                      02203 
                      02204  
                      02205  FAR_CALL control,addf
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A2   ????               M  pagesel addf
00A3   2???               M  call addf
00A4   ????               M  pagesel control   ;This one restores the caller's code page
                      02206 
                      02207 
00A5   3003           02208  movlw .3
                      02209  PUSH 
00A6   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A7   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02210 
                      02211 
                      02212  
                      02213  FAR_CALL control,parm
00A8   ????               M  pagesel parm
00A9   2???               M  call parm
00AA   ????               M  pagesel control   ;This one restores the caller's code page
                      02214 
                      02215 
00AB   3002           02216  movlw .2
                      02217  PUSH 
00AC   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00AD   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02218 
                      02219 
                      02220  
                      02221  FAR_CALL control,parm
00AE   ????               M  pagesel parm
00AF   2???               M  call parm
00B0   ????               M  pagesel control   ;This one restores the caller's code page
                      02222 
                      02223 
00B1   3080           02224  movlw .128
                      02225  
                      02226 
                      02227 
                      02228  PUSH 
00B2   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00B3   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02229 
                      02230 
00B4   3000           02231  movlw .0
                      02232  
                      02233 
                      02234  PUSH 
00B5   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00B6   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02235 
                      02236 
00B7   30F8           02237  movlw -.8
                      02238  PUSH 
00B8   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00B9   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02239 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02240 
                      02241  
                      02242  FAR_CALL control,parm
00BA   ????               M  pagesel parm
00BB   2???               M  call parm
00BC   ????               M  pagesel control   ;This one restores the caller's code page
                      02243 
                      02244 
00BD   30F7           02245  movlw -.9
                      02246  PUSH 
00BE   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00BF   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02247 
                      02248 
                      02249  
                      02250  HALF_FAR_CALL parm
00C0   ????               M  pagesel parm           
00C1   2???               M  call parm
                      02251 
                      02252 
                      02253  
                      02254  HALF_FAR_CALL mulf
00C2   ????               M  pagesel mulf           
00C3   2???               M  call mulf
                      02255 
                      02256 
                      02257  
                      02258  FAR_CALL control,addf
00C4   ????               M  pagesel addf
00C5   2???               M  call addf
00C6   ????               M  pagesel control   ;This one restores the caller's code page
                      02259 
                      02260 
00C7   3005           02261  movlw .5
                      02262  PUSH 
00C8   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C9   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02263 
                      02264 
                      02265  
                      02266  FAR_CALL control,parm
00CA   ????               M  pagesel parm
00CB   2???               M  call parm
00CC   ????               M  pagesel control   ;This one restores the caller's code page
                      02267 
                      02268 
00CD   3004           02269  movlw .4
                      02270  PUSH 
00CE   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00CF   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02271 
                      02272 
                      02273  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02274  FAR_CALL control,parm
00D0   ????               M  pagesel parm
00D1   2???               M  call parm
00D2   ????               M  pagesel control   ;This one restores the caller's code page
                      02275 
                      02276 
00D3   30F4           02277  movlw -.12
                      02278  PUSH 
00D4   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00D5   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02279 
                      02280 
                      02281  
                      02282  FAR_CALL control,parm
00D6   ????               M  pagesel parm
00D7   2???               M  call parm
00D8   ????               M  pagesel control   ;This one restores the caller's code page
                      02283 
                      02284 
00D9   30F3           02285  movlw -.13
                      02286  PUSH 
00DA   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00DB   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02287 
                      02288 
                      02289  
                      02290  FAR_CALL control,parm
00DC   ????               M  pagesel parm
00DD   2???               M  call parm
00DE   ????               M  pagesel control   ;This one restores the caller's code page
                      02291 
                      02292 
00DF   30FA           02293  movlw -.6
                      02294  PUSH 
00E0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00E1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02295 
                      02296 
                      02297  
                      02298  FAR_CALL control,parm
00E2   ????               M  pagesel parm
00E3   2???               M  call parm
00E4   ????               M  pagesel control   ;This one restores the caller's code page
                      02299 
                      02300 
00E5   30F9           02301  movlw -.7
                      02302  PUSH 
00E6   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00E7   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02303 
                      02304 
                      02305  
                      02306  HALF_FAR_CALL parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E8   ????               M  pagesel parm           
00E9   2???               M  call parm
                      02307 
                      02308 
                      02309  
                      02310  HALF_FAR_CALL mulf
00EA   ????               M  pagesel mulf           
00EB   2???               M  call mulf
                      02311 
                      02312 
                      02313  
                      02314  HALF_FAR_CALL addf
00EC   ????               M  pagesel addf           
00ED   2???               M  call addf
                      02315 
                      02316 
                      02317  
                      02318  FAR_CALL control,conform_i
00EE   ????               M  pagesel conform_i
00EF   2???               M  call conform_i
00F0   ????               M  pagesel control   ;This one restores the caller's code page
                      02319 
                      02320 
00F1   30F6           02321  movlw -.10
                      02322  PUSH 
00F2   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00F3   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02323 
                      02324 
                      02325  
                      02326  FAR_CALL control,parm
00F4   ????               M  pagesel parm
00F5   2???               M  call parm
00F6   ????               M  pagesel control   ;This one restores the caller's code page
                      02327 
                      02328 
00F7   30F5           02329  movlw -.11
                      02330  PUSH 
00F8   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00F9   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02331 
                      02332 
                      02333  
                      02334  HALF_FAR_CALL parm
00FA   ????               M  pagesel parm           
00FB   2???               M  call parm
                      02335 
                      02336 
                      02337  
                      02338  FAR_CALL control,iszerof
00FC   ????               M  pagesel iszerof
00FD   2???               M  call iszerof
00FE   ????               M  pagesel control   ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02339 
                      02340  POP
00FF   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0100   0384               M  decf FSR,f 
0101   3A00           02341  xorlw .0
0102   1903           02342  btfsc STATUS,Z
0103   2???           02343  goto hlllb51J34 
                      02344  
                      02345 
0104   3000           02346  movlw .0
                      02347  
                      02348 
                      02349 
                      02350  PUSH 
0105   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0106   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02351 
                      02352 
0107   3080           02353  movlw .128
                      02354  
                      02355 
                      02356  PUSH 
0108   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0109   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02357 
                      02358  
010A   2???           02359  goto hlllb51J35
                      02360  
                      02361 
010B                  02362 hlllb51J34:
                      02363 
                      02364 
010B   30F6           02365  movlw -.10
                      02366  PUSH 
010C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
010D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02367 
                      02368 
                      02369  
                      02370  FAR_CALL control,parm
010E   ????               M  pagesel parm
010F   2???               M  call parm
0110   ????               M  pagesel control   ;This one restores the caller's code page
                      02371 
                      02372 
0111   30F5           02373  movlw -.11
                      02374  PUSH 
0112   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0113   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02375 
                      02376 
                      02377  
                      02378  FAR_CALL control,parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0114   ????               M  pagesel parm
0115   2???               M  call parm
0116   ????               M  pagesel control   ;This one restores the caller's code page
                      02379 
                      02380 
0117   30FA           02381  movlw -.6
                      02382  PUSH 
0118   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0119   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02383 
                      02384 
                      02385  
                      02386  FAR_CALL control,parm
011A   ????               M  pagesel parm
011B   2???               M  call parm
011C   ????               M  pagesel control   ;This one restores the caller's code page
                      02387 
                      02388 
011D   30F9           02389  movlw -.7
                      02390  PUSH 
011E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
011F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02391 
                      02392 
                      02393  
                      02394  HALF_FAR_CALL parm
0120   ????               M  pagesel parm           
0121   2???               M  call parm
                      02395 
                      02396 
                      02397  
                      02398  FAR_CALL control,divf
0122   ????               M  pagesel divf
0123   2???               M  call divf
0124   ????               M  pagesel control   ;This one restores the caller's code page
                      02399 
                      02400 
0125                  02401 hlllb51J35:
                      02402 
                      02403 
0125   30F2           02404  movlw -.14
                      02405  PUSH 
0126   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0127   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02406 
                      02407 
                      02408  
                      02409  FAR_CALL control,parm
0128   ????               M  pagesel parm
0129   2???               M  call parm
012A   ????               M  pagesel control   ;This one restores the caller's code page
                      02410 
                      02411 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

012B   30F1           02412  movlw -.15
                      02413  PUSH 
012C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
012D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02414 
                      02415 
                      02416  
                      02417  FAR_CALL control,parm
012E   ????               M  pagesel parm
012F   2???               M  call parm
0130   ????               M  pagesel control   ;This one restores the caller's code page
                      02418 
                      02419 
0131   30F4           02420  movlw -.12
                      02421  PUSH 
0132   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0133   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02422 
                      02423 
                      02424  
                      02425  FAR_CALL control,parm
0134   ????               M  pagesel parm
0135   2???               M  call parm
0136   ????               M  pagesel control   ;This one restores the caller's code page
                      02426 
                      02427 
0137   30F3           02428  movlw -.13
                      02429  PUSH 
0138   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0139   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02430 
                      02431 
                      02432  
                      02433  HALF_FAR_CALL parm
013A   ????               M  pagesel parm           
013B   2???               M  call parm
                      02434 
                      02435 
                      02436  
                      02437  FAR_CALL control,usrpwm
013C   ????               M  pagesel usrpwm
013D   2???               M  call usrpwm
013E   ????               M  pagesel control   ;This one restores the caller's code page
                      02438 
                      02439 
013F   30FB           02440  movlw -.5
                      02441  PUSH 
0140   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0141   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02442 
                      02443 
                      02444  
                      02445  FAR_CALL control,parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0142   ????               M  pagesel parm
0143   2???               M  call parm
0144   ????               M  pagesel control   ;This one restores the caller's code page
                      02446 
                      02447  POP
0145   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0146   0384               M  decf FSR,f 
0147   3A00           02448  xorlw .0
0148   1903           02449  btfsc STATUS,Z
0149   2???           02450  goto hlllb51J36 
                      02451  
                      02452 
014A   3060           02453  movlw .96
                      02454  
                      02455 
                      02456 
                      02457  PUSH 
014B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
014C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02458 
                      02459 
014D   3003           02460  movlw .3
                      02461  
                      02462 
                      02463  PUSH 
014E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
014F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02464 
                      02465  
0150   2???           02466  goto hlllb51J37
                      02467  
                      02468 
0151                  02469 hlllb51J36:
                      02470 
                      02471 
0151   30FF           02472  movlw -.1
                      02473  PUSH 
0152   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0153   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02474 
                      02475 
                      02476  
                      02477  FAR_CALL control,parm
0154   ????               M  pagesel parm
0155   2???               M  call parm
0156   ????               M  pagesel control   ;This one restores the caller's code page
                      02478 
                      02479 
0157   30FE           02480  movlw -.2
                      02481  PUSH 
0158   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0159   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02482 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02483 
                      02484  
                      02485  FAR_CALL control,parm
015A   ????               M  pagesel parm
015B   2???               M  call parm
015C   ????               M  pagesel control   ;This one restores the caller's code page
                      02486 
                      02487 
015D                  02488 hlllb51J37:
                      02489 
                      02490 
015D   30F8           02491  movlw -.8
                      02492  PUSH 
015E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
015F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02493 
                      02494 
                      02495  
                      02496  FAR_CALL control,parm
0160   ????               M  pagesel parm
0161   2???               M  call parm
0162   ????               M  pagesel control   ;This one restores the caller's code page
                      02497 
                      02498 
0163   30F7           02499  movlw -.9
                      02500  PUSH 
0164   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0165   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02501 
                      02502 
                      02503  
                      02504  FAR_CALL control,parm
0166   ????               M  pagesel parm
0167   2???               M  call parm
0168   ????               M  pagesel control   ;This one restores the caller's code page
                      02505 
                      02506 
0169   30F2           02507  movlw -.14
                      02508  PUSH 
016A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
016B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02509 
                      02510 
                      02511  
                      02512  FAR_CALL control,parm
016C   ????               M  pagesel parm
016D   2???               M  call parm
016E   ????               M  pagesel control   ;This one restores the caller's code page
                      02513 
                      02514 
016F   30F1           02515  movlw -.15
                      02516  PUSH 
0170   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0171   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02517 
                      02518 
                      02519  
                      02520  FAR_CALL control,parm
0172   ????               M  pagesel parm
0173   2???               M  call parm
0174   ????               M  pagesel control   ;This one restores the caller's code page
                      02521 
                      02522 
0175   3003           02523  movlw .3
                      02524  PUSH 
0176   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0177   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02525 
                      02526 
                      02527  
                      02528  FAR_CALL control,parm
0178   ????               M  pagesel parm
0179   2???               M  call parm
017A   ????               M  pagesel control   ;This one restores the caller's code page
                      02529 
                      02530 
017B   3002           02531  movlw .2
                      02532  PUSH 
017C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
017D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02533 
                      02534 
                      02535  
                      02536  HALF_FAR_CALL parm
017E   ????               M  pagesel parm           
017F   2???               M  call parm
                      02537 
                      02538 
                      02539  
                      02540  FAR_CALL control,kpop
0180   ????               M  pagesel kpop
0181   2???               M  call kpop
0182   ????               M  pagesel control   ;This one restores the caller's code page
                      02541  
                      02542 #ifdef HLLMULTITASK 
0183   08??           02543  movf in_isr,f ;In shared RAM, no need for BANKSEL
0184   1903           02544  btfsc STATUS,Z
0185   2???           02545  goto $+3
0186   00??           02546  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
0187   2???           02547  goto $+2      ; is because isr execution is preemptive, and returns only at the 
0188   00??           02548  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      02549 #else          ; thread, and speeding up isr execution helps this problem. In most of
                      02550  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      02551 #endif 
                      02552 
                      02553 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02554  POP
0189   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
018A   0384               M  decf FSR,f 
                      02555  
                      02556  FAR_CALL control ,kpush
018B   ????               M  pagesel kpush
018C   2???               M  call kpush
018D   ????               M  pagesel control   ;This one restores the caller's code page
                      02557  
                      02558 
                      02559  POP
018E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
018F   0384               M  decf FSR,f 
                      02560  
                      02561  FAR_CALL control ,kpush
0190   ????               M  pagesel kpush
0191   2???               M  call kpush
0192   ????               M  pagesel control   ;This one restores the caller's code page
                      02562  
                      02563 
                      02564  POP
0193   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0194   0384               M  decf FSR,f 
                      02565  
                      02566  FAR_CALL control ,kpush
0195   ????               M  pagesel kpush
0196   2???               M  call kpush
0197   ????               M  pagesel control   ;This one restores the caller's code page
                      02567  
                      02568 
                      02569  POP
0198   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0199   0384               M  decf FSR,f 
                      02570  
                      02571  FAR_CALL control ,kpush
019A   ????               M  pagesel kpush
019B   2???               M  call kpush
019C   ????               M  pagesel control   ;This one restores the caller's code page
                      02572  
                      02573 
                      02574  POP
019D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
019E   0384               M  decf FSR,f 
                      02575  
                      02576  FAR_CALL control ,kpush
019F   ????               M  pagesel kpush
01A0   2???               M  call kpush
01A1   ????               M  pagesel control   ;This one restores the caller's code page
                      02577  
                      02578 
                      02579  POP
01A2   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
01A3   0384               M  decf FSR,f 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02580  
                      02581  FAR_CALL control ,kpush
01A4   ????               M  pagesel kpush
01A5   2???               M  call kpush
01A6   ????               M  pagesel control   ;This one restores the caller's code page
                      02582  
                      02583 
                      02584  POP
01A7   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
01A8   0384               M  decf FSR,f 
                      02585  
                      02586  FAR_CALL control ,kpush
01A9   ????               M  pagesel kpush
01AA   2???               M  call kpush
01AB   ????               M  pagesel control   ;This one restores the caller's code page
                      02587  
                      02588 
                      02589  POP
01AC   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
01AD   0384               M  decf FSR,f 
                      02590  
                      02591  FAR_CALL control ,kpush
01AE   ????               M  pagesel kpush
01AF   2???               M  call kpush
01B0   ????               M  pagesel control   ;This one restores the caller's code page
                      02592  
                      02593 #ifdef HLLMULTITASK 
01B1   08??           02594  movf in_isr,f ;In shared RAM, no need for BANKSEL
01B2   1903           02595  btfsc STATUS,Z
01B3   2???           02596  goto $+3
01B4   08??           02597  movf pbase+1,w                 ;in_isr
01B5   2???           02598  goto $+2
01B6   08??           02599  movf pbase,w   ;not in_isr
                      02600 #else
                      02601  movf pbase,w   
                      02602 #endif  
                      02603 
                      02604  
                      02605 ;LOAD POINTER
01B7   0084           02606  movwf FSR
                      02607  
                      02608 
                      02609  DISCARD
01B8   0384               M  decf FSR,f 
                      02610 
                      02611 
                      02612  DISCARD
01B9   0384               M  decf FSR,f 
                      02613 
                      02614 
                      02615  DISCARD
01BA   0384               M  decf FSR,f 
                      02616 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02617 
                      02618  DISCARD
01BB   0384               M  decf FSR,f 
                      02619 
                      02620 
                      02621  DISCARD
01BC   0384               M  decf FSR,f 
                      02622 
                      02623 
                      02624  DISCARD
01BD   0384               M  decf FSR,f 
                      02625 
                      02626 
                      02627  DISCARD
01BE   0384               M  decf FSR,f 
                      02628 
                      02629 
                      02630  DISCARD
01BF   0384               M  decf FSR,f 
                      02631 
                      02632 
                      02633  DISCARD
01C0   0384               M  decf FSR,f 
                      02634 
                      02635 
                      02636  DISCARD
01C1   0384               M  decf FSR,f 
                      02637 
                      02638 
                      02639  
                      02640  FAR_CALL control ,kpop
01C2   ????               M  pagesel kpop
01C3   2???               M  call kpop
01C4   ????               M  pagesel control   ;This one restores the caller's code page
                      02641 
                      02642  PUSH 
01C5   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01C6   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02643 
                      02644 
                      02645  
                      02646  FAR_CALL control ,kpop
01C7   ????               M  pagesel kpop
01C8   2???               M  call kpop
01C9   ????               M  pagesel control   ;This one restores the caller's code page
                      02647 
                      02648  PUSH 
01CA   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01CB   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02649 
                      02650 
                      02651  
                      02652  FAR_CALL control ,kpop
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CC   ????               M  pagesel kpop
01CD   2???               M  call kpop
01CE   ????               M  pagesel control   ;This one restores the caller's code page
                      02653 
                      02654  PUSH 
01CF   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01D0   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02655 
                      02656 
                      02657  
                      02658  FAR_CALL control ,kpop
01D1   ????               M  pagesel kpop
01D2   2???               M  call kpop
01D3   ????               M  pagesel control   ;This one restores the caller's code page
                      02659 
                      02660  PUSH 
01D4   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01D5   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02661 
                      02662 
                      02663  
                      02664  FAR_CALL control ,kpop
01D6   ????               M  pagesel kpop
01D7   2???               M  call kpop
01D8   ????               M  pagesel control   ;This one restores the caller's code page
                      02665 
                      02666  PUSH 
01D9   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01DA   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02667 
                      02668 
                      02669  
                      02670  FAR_CALL control ,kpop
01DB   ????               M  pagesel kpop
01DC   2???               M  call kpop
01DD   ????               M  pagesel control   ;This one restores the caller's code page
                      02671 
                      02672  PUSH 
01DE   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01DF   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02673 
                      02674 
                      02675  
                      02676  FAR_CALL control ,kpop
01E0   ????               M  pagesel kpop
01E1   2???               M  call kpop
01E2   ????               M  pagesel control   ;This one restores the caller's code page
                      02677 
                      02678  PUSH 
01E3   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01E4   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02679 
                      02680 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02681  
                      02682  FAR_CALL control ,kpop
01E5   ????               M  pagesel kpop
01E6   2???               M  call kpop
01E7   ????               M  pagesel control   ;This one restores the caller's code page
                      02683 
                      02684  PUSH 
01E8   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
01E9   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02685 
                      02686 
01EA   0008           02687  return
                      02688  
                      02689 
                      02690 hllt4541 CODE
0000                  02691 wait_button:
                      02692 
0000   1283 1303      02693    banksel PORTA
0002   0805           02694    movfw PORTA
                      02695    
                      02696    
                      02697  PUSH 
0003   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0004   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02698 
                      02699 
0005   3010           02700  movlw .16
                      02701  PUSH 
0006   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0007   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02702 
                      02703 
                      02704  
                      02705  FAR_CALL wait_button,andu
0008   ????               M  pagesel andu
0009   2???               M  call andu
000A   ????               M  pagesel wait_button ;This one restores the caller's code page
                      02706 
                      02707  POP
000B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000C   0384               M  decf FSR,f 
000D   3A00           02708  xorlw .0
000E   1903           02709  btfsc STATUS,Z
000F   2???           02710  goto hlllb51J39 
                      02711  
                      02712  ;
                      02713 
                      02714 
0010   2???           02715  goto wait_button
0011                  02716 hlllb51J39:
0011                  02717 hlllb51J40:
                      02718 
0011   0008           02719  return 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02720 
                      02721  
                      02722 
                      02723 hllt4542 CODE
0000                  02724 pwmon:
                      02725 
                      02726 
0000   30FF           02727  movlw .255 
                      02728  
0001   1683 1303      02729  banksel PR2
0003   0092           02730  movwf PR2
                      02731  
                      02732 
                      02733 
0004   3002           02734  movlw .2 
                      02735  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02736 
                      02737 
0007   3003           02738  movlw .3 
                      02739  PUSH 
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02740 
                      02741 
000A   3000           02742  movlw .0
                      02743  PUSH 
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02744 
                      02745 
                      02746  
                      02747  HALF_FAR_CALL setbit
000D   ????               M  pagesel setbit         
000E   2???               M  call setbit
                      02748 
                      02749 
                      02750  
                      02751  FAR_CALL pwmon,setbit
000F   ????               M  pagesel setbit
0010   2???               M  call setbit
0011   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02752 
                      02753  POP
0012   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0013   0384               M  decf FSR,f 
0014   1283 1303      02754  banksel CCP1CON
0016   0097           02755  movwf CCP1CON
                      02756  
                      02757 
                      02758 
0017   3000           02759  movlw .0 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02760  
0018   1283 1303      02761  banksel CCPR1L
001A   0095           02762  movwf CCPR1L
                      02763  
                      02764 
                      02765 
001B   3001           02766  movlw .1 
                      02767  PUSH 
001C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02768 
001E   1283 1303      02769    banksel PIR1
0020   080C           02770    movfw PIR1
                      02771    
                      02772    
                      02773  PUSH 
0021   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0022   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02774 
                      02775 
                      02776  
                      02777  FAR_CALL pwmon,clearbit
0023   ????               M  pagesel clearbit
0024   2???               M  call clearbit
0025   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02778 
                      02779  POP
0026   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0027   0384               M  decf FSR,f 
0028   1283 1303      02780  banksel PIR1
002A   008C           02781  movwf PIR1
                      02782  
                      02783 
                      02784 
002B   3000           02785  movlw .0 
                      02786  PUSH 
002C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02787 
                      02788 
002E   3001           02789  movlw .1 
                      02790  PUSH 
002F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0030   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02791 
0031   1283 1303      02792    banksel T2CON
0033   0812           02793    movfw T2CON
                      02794    
                      02795    
                      02796  PUSH 
0034   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0035   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02797 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02798 
                      02799  
                      02800  HALF_FAR_CALL clearbit
0036   ????               M  pagesel clearbit       
0037   2???               M  call clearbit
                      02801 
                      02802 
                      02803  
                      02804  FAR_CALL pwmon,clearbit
0038   ????               M  pagesel clearbit
0039   2???               M  call clearbit
003A   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02805 
                      02806  POP
003B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003C   0384               M  decf FSR,f 
003D   1283 1303      02807  banksel T2CON
003F   0092           02808  movwf T2CON
                      02809  
                      02810 
                      02811 
0040   3002           02812  movlw .2 
                      02813  PUSH 
0041   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0042   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02814 
0043   1283 1303      02815    banksel T2CON
0045   0812           02816    movfw T2CON
                      02817    
                      02818    
                      02819  PUSH 
0046   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0047   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02820 
                      02821 
                      02822  
                      02823  FAR_CALL pwmon,setbit
0048   ????               M  pagesel setbit
0049   2???               M  call setbit
004A   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02824 
                      02825  POP
004B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
004C   0384               M  decf FSR,f 
004D   1283 1303      02826  banksel T2CON
004F   0092           02827  movwf T2CON
                      02828  
                      02829 
                      02830 
0050   3001           02831  movlw .1 
                      02832  PUSH 
0051   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0052   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02833 
0053   1283 1303      02834    banksel PIR1
0055   080C           02835    movfw PIR1
                      02836    
                      02837    
                      02838  PUSH 
0056   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0057   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02839 
                      02840 
                      02841  
                      02842  FAR_CALL pwmon,clearbit
0058   ????               M  pagesel clearbit
0059   2???               M  call clearbit
005A   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02843 
                      02844  POP
005B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
005C   0384               M  decf FSR,f 
005D   1283 1303      02845  banksel PIR1
005F   008C           02846  movwf PIR1
                      02847  
                      02848 
                      02849 
                      02850  
                      02851  FAR_CALL pwmon,pwmin
0060   ????               M  pagesel pwmin
0061   2???               M  call pwmin
0062   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02852 
                      02853 
0063   3005           02854  movlw .5 
                      02855  PUSH 
0064   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0065   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02856 
                      02857 
0066   3004           02858  movlw .4 
                      02859  PUSH 
0067   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0068   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02860 
0069   1683 1303      02861    banksel TRISC
006B   0807           02862    movfw TRISC
                      02863    
                      02864    
                      02865  PUSH 
006C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02866 
                      02867 
                      02868  
                      02869  HALF_FAR_CALL clearbit
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006E   ????               M  pagesel clearbit       
006F   2???               M  call clearbit
                      02870 
                      02871 
                      02872  
                      02873  FAR_CALL pwmon,clearbit
0070   ????               M  pagesel clearbit
0071   2???               M  call clearbit
0072   ????               M  pagesel pwmon     ;This one restores the caller's code page
                      02874 
                      02875  POP
0073   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0074   0384               M  decf FSR,f 
0075   1683 1303      02876  banksel TRISC
0077   0087           02877  movwf TRISC
                      02878  
                      02879 
                      02880 
0078   3000           02881  movlw .0 
                      02882  
0079   1283 1303      02883  banksel PORTC
007B   0087           02884  movwf PORTC
                      02885  
                      02886 
                      02887 
007C   0008           02888  return
                      02889  
                      02890 
                      02891 hllt4555 CODE
0000                  02892 pwmf:
0000   0804           02893  movf FSR,w
                      02894  
                      02895 
                      02896  
                      02897  FAR_CALL pwmf ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      02898 
                      02899 
0004   3000           02900  movlw .0
                      02901  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02902 
                      02903 
                      02904  
                      02905  FAR_CALL pwmf,parm
0007   ????               M  pagesel parm
0008   2???               M  call parm
0009   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      02906 
                      02907  POP
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000B   0384               M  decf FSR,f 
000C   3A00           02908  xorlw .0
000D   1903           02909  btfsc STATUS,Z
000E   2???           02910  goto hlllb51J43 
                      02911  
                      02912 
000F   3000           02913  movlw .0 
                      02914  PUSH 
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02915 
                      02916 
0012   3001           02917  movlw .1 
                      02918  PUSH 
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02919 
0015   1683 1703      02920    banksel PSTRCON
0017   081D           02921    movfw PSTRCON
                      02922    
                      02923    
                      02924  PUSH 
0018   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0019   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02925 
                      02926 
                      02927  
                      02928  HALF_FAR_CALL clearbit
001A   ????               M  pagesel clearbit       
001B   2???               M  call clearbit
                      02929 
                      02930 
                      02931  
                      02932  FAR_CALL pwmf,setbit
001C   ????               M  pagesel setbit
001D   2???               M  call setbit
001E   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      02933 
                      02934  POP
001F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0020   0384               M  decf FSR,f 
0021   1683 1703      02935  banksel PSTRCON
0023   009D           02936  movwf PSTRCON
                      02937  
                      02938 
                      02939  
0024   2???           02940  goto hlllb51J44
                      02941  
                      02942 
0025                  02943 hlllb51J43:
                      02944 
                      02945 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   3001           02946  movlw .1 
                      02947  PUSH 
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02948 
                      02949 
0028   3000           02950  movlw .0 
                      02951  PUSH 
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02952 
002B   1683 1703      02953    banksel PSTRCON
002D   081D           02954    movfw PSTRCON
                      02955    
                      02956    
                      02957  PUSH 
002E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02958 
                      02959 
                      02960  
                      02961  HALF_FAR_CALL clearbit
0030   ????               M  pagesel clearbit       
0031   2???               M  call clearbit
                      02962 
                      02963 
                      02964  
                      02965  FAR_CALL pwmf,setbit
0032   ????               M  pagesel setbit
0033   2???               M  call setbit
0034   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      02966 
                      02967  POP
0035   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0036   0384               M  decf FSR,f 
0037   1683 1703      02968  banksel PSTRCON
0039   009D           02969  movwf PSTRCON
                      02970  
                      02971 
                      02972 
003A                  02973 hlllb51J44:
                      02974 
                      02975 
003A   3002           02976  movlw .2
                      02977  PUSH 
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02978 
                      02979 
                      02980  
                      02981  FAR_CALL pwmf,parm
003D   ????               M  pagesel parm
003E   2???               M  call parm
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003F   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      02982 
                      02983 
0040   3001           02984  movlw .1
                      02985  PUSH 
0041   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0042   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      02986 
                      02987 
                      02988  
                      02989  HALF_FAR_CALL parm
0043   ????               M  pagesel parm           
0044   2???               M  call parm
                      02990 
                      02991 
                      02992  
                      02993  FAR_CALL pwmf,iszerof
0045   ????               M  pagesel iszerof
0046   2???               M  call iszerof
0047   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      02994 
                      02995  POP
0048   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0049   0384               M  decf FSR,f 
004A   3A00           02996  xorlw .0
004B   1903           02997  btfsc STATUS,Z
004C   2???           02998  goto hlllb51J47 
                      02999  
                      03000 
004D   3000           03001  movlw .0
                      03002  PUSH 
004E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03003 
                      03004  
0050   2???           03005  goto hlllb51J48
                      03006  
                      03007 
0051                  03008 hlllb51J47:
                      03009 
                      03010 
0051   3002           03011  movlw .2
                      03012  PUSH 
0052   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0053   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03013 
                      03014 
                      03015  
                      03016  FAR_CALL pwmf,parm
0054   ????               M  pagesel parm
0055   2???               M  call parm
0056   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03017 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03018 
0057   3001           03019  movlw .1
                      03020  PUSH 
0058   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0059   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03021 
                      03022 
                      03023  
                      03024  FAR_CALL pwmf,parm
005A   ????               M  pagesel parm
005B   2???               M  call parm
005C   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03025 
                      03026 
005D   307A           03027  movlw .122
                      03028  
                      03029 
                      03030 
                      03031  PUSH 
005E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03032 
                      03033 
0060   3009           03034  movlw .9
                      03035  
                      03036 
                      03037  PUSH 
0061   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0062   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03038 
                      03039 
                      03040  
                      03041  FAR_CALL pwmf,gtf
0063   ????               M  pagesel gtf
0064   2???               M  call gtf
0065   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03042 
                      03043  POP
0066   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0067   0384               M  decf FSR,f 
0068   3A00           03044  xorlw .0
0069   1903           03045  btfsc STATUS,Z
006A   2???           03046  goto hlllb51J45 
                      03047  
                      03048 
006B   30FF           03049  movlw .255
                      03050  PUSH 
006C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03051 
                      03052  
006E   2???           03053  goto hlllb51J46
                      03054  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03055 
006F                  03056 hlllb51J45:
                      03057 
                      03058 
006F   3002           03059  movlw .2
                      03060  PUSH 
0070   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0071   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03061 
                      03062 
                      03063  
                      03064  FAR_CALL pwmf,parm
0072   ????               M  pagesel parm
0073   2???               M  call parm
0074   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03065 
                      03066 
0075   3001           03067  movlw .1
                      03068  PUSH 
0076   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0077   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03069 
                      03070 
                      03071  
                      03072  FAR_CALL pwmf,parm
0078   ????               M  pagesel parm
0079   2???               M  call parm
007A   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03073 
                      03074 
007B   3000           03075  movlw .0
                      03076  
                      03077 
                      03078 
                      03079  PUSH 
007C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03080 
                      03081 
007E   3002           03082  movlw .2
                      03083  
                      03084 
                      03085  PUSH 
007F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0080   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03086 
                      03087 
                      03088  
                      03089  HALF_FAR_CALL divf
0081   ????               M  pagesel divf           
0082   2???               M  call divf
                      03090 
                      03091 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03092  
                      03093  FAR_CALL pwmf,ftou
0083   ????               M  pagesel ftou
0084   2???               M  call ftou
0085   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03094 
                      03095 
0086                  03096 hlllb51J46:
                      03097 
                      03098 
0086                  03099 hlllb51J48:
                      03100 
                      03101  POP
0086   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0087   0384               M  decf FSR,f 
0088   1283 1303      03102  banksel CCPR1L
008A   0095           03103  movwf CCPR1L
                      03104  
                      03105 
                      03106 
008B   3002           03107  movlw .2
                      03108  PUSH 
008C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
008D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03109 
                      03110 
                      03111  
                      03112  FAR_CALL pwmf,parm
008E   ????               M  pagesel parm
008F   2???               M  call parm
0090   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03113 
                      03114 
0091   3001           03115  movlw .1
                      03116  PUSH 
0092   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0093   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03117 
                      03118 
                      03119  
                      03120  FAR_CALL pwmf,parm
0094   ????               M  pagesel parm
0095   2???               M  call parm
0096   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03121 
                      03122 
0097   3080           03123  movlw .128
                      03124  
                      03125 
                      03126 
                      03127  PUSH 
0098   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0099   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03128 
                      03129 
009A   3000           03130  movlw .0
                      03131  
                      03132 
                      03133  PUSH 
009B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03134 
                      03135 
009D   3000           03136  movlw .0
                      03137  
                      03138 
                      03139 
                      03140  PUSH 
009E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03141 
                      03142 
00A0   3002           03143  movlw .2
                      03144  
                      03145 
                      03146  PUSH 
00A1   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A2   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03147 
00A3   1283 1303      03148    banksel CCPR1L
00A5   0815           03149    movfw CCPR1L
                      03150    
                      03151    
                      03152  PUSH 
00A6   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A7   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03153 
                      03154 
                      03155  
                      03156  HALF_FAR_CALL utof
00A8   ????               M  pagesel utof           
00A9   2???               M  call utof
                      03157 
                      03158 
                      03159  
                      03160  HALF_FAR_CALL mulf
00AA   ????               M  pagesel mulf           
00AB   2???               M  call mulf
                      03161 
                      03162 
                      03163  
                      03164  HALF_FAR_CALL mulf
00AC   ????               M  pagesel mulf           
00AD   2???               M  call mulf
                      03165 
                      03166 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03167  
                      03168  HALF_FAR_CALL addf
00AE   ????               M  pagesel addf           
00AF   2???               M  call addf
                      03169 
                      03170 
                      03171  
                      03172  FAR_CALL pwmf,copyf
00B0   ????               M  pagesel copyf
00B1   2???               M  call copyf
00B2   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03173 
                      03174 
00B3   3020           03175  movlw .32
                      03176  
                      03177 
                      03178 
                      03179  PUSH 
00B4   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00B5   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03180 
                      03181 
00B6   3001           03182  movlw .1
                      03183  
                      03184 
                      03185  PUSH 
00B7   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00B8   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03186 
                      03187 
                      03188  
                      03189  FAR_CALL pwmf,gtf
00B9   ????               M  pagesel gtf
00BA   2???               M  call gtf
00BB   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03190 
                      03191  POP
00BC   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00BD   0384               M  decf FSR,f 
00BE   3A00           03192  xorlw .0
00BF   1903           03193  btfsc STATUS,Z
00C0   2???           03194  goto hlllb51J53 
                      03195  
                      03196 
00C1   3005           03197  movlw DC1B1
                      03198 
                      03199  PUSH 
00C2   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C3   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03200 
                      03201 
00C4   3004           03202  movlw DC1B0
                      03203 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03204  PUSH 
00C5   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00C6   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03205 
00C7   1283 1303      03206    banksel CCP1CON
00C9   0817           03207    movfw CCP1CON
                      03208    
                      03209    
                      03210  PUSH 
00CA   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00CB   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03211 
                      03212 
                      03213  
                      03214  HALF_FAR_CALL setbit
00CC   ????               M  pagesel setbit         
00CD   2???               M  call setbit
                      03215 
                      03216 
                      03217  
                      03218  FAR_CALL pwmf,setbit
00CE   ????               M  pagesel setbit
00CF   2???               M  call setbit
00D0   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03219 
                      03220  POP
00D1   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00D2   0384               M  decf FSR,f 
00D3   1283 1303      03221  banksel CCP1CON
00D5   0097           03222  movwf CCP1CON
                      03223  
                      03224 
                      03225  
00D6   2???           03226  goto hlllb51J54
                      03227  
                      03228 
00D7                  03229 hlllb51J53:
                      03230 
                      03231 
                      03232  
                      03233  FAR_CALL pwmf,copyf
00D7   ????               M  pagesel copyf
00D8   2???               M  call copyf
00D9   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03234 
                      03235 
00DA   3040           03236  movlw .64
                      03237  
                      03238 
                      03239 
                      03240  PUSH 
00DB   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00DC   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03241 
                      03242 
00DD   3000           03243  movlw .0
                      03244  
                      03245 
                      03246  PUSH 
00DE   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00DF   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03247 
                      03248 
                      03249  
                      03250  FAR_CALL pwmf,gtf
00E0   ????               M  pagesel gtf
00E1   2???               M  call gtf
00E2   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03251 
                      03252  POP
00E3   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00E4   0384               M  decf FSR,f 
00E5   3A00           03253  xorlw .0
00E6   1903           03254  btfsc STATUS,Z
00E7   2???           03255  goto hlllb51J51 
                      03256  
                      03257 
00E8   3005           03258  movlw DC1B1
                      03259 
                      03260  PUSH 
00E9   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00EA   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03261 
00EB   1283 1303      03262    banksel CCP1CON
00ED   0817           03263    movfw CCP1CON
                      03264    
                      03265    
                      03266  PUSH 
00EE   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00EF   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03267 
                      03268 
                      03269  
                      03270  FAR_CALL pwmf,setbit
00F0   ????               M  pagesel setbit
00F1   2???               M  call setbit
00F2   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03271 
                      03272  POP
00F3   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00F4   0384               M  decf FSR,f 
00F5   1283 1303      03273  banksel CCP1CON
00F7   0097           03274  movwf CCP1CON
                      03275  
                      03276 
                      03277  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F8   2???           03278  goto hlllb51J52
                      03279  
                      03280 
00F9                  03281 hlllb51J51:
                      03282 
                      03283 
                      03284  
                      03285  FAR_CALL pwmf,copyf
00F9   ????               M  pagesel copyf
00FA   2???               M  call copyf
00FB   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03286 
                      03287 
00FC   3000           03288  movlw .0
                      03289  
                      03290 
                      03291 
                      03292  PUSH 
00FD   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00FE   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03293 
                      03294 
00FF   30FF           03295  movlw .255
                      03296  
                      03297 
                      03298  PUSH 
0100   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0101   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03299 
                      03300 
                      03301  
                      03302  FAR_CALL pwmf,gtf
0102   ????               M  pagesel gtf
0103   2???               M  call gtf
0104   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03303 
                      03304  POP
0105   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0106   0384               M  decf FSR,f 
0107   3A00           03305  xorlw .0
0108   1903           03306  btfsc STATUS,Z
0109   2???           03307  goto hlllb51J49 
                      03308  
                      03309 
010A   3004           03310  movlw DC1B0
                      03311 
                      03312  PUSH 
010B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
010C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03313 
010D   1283 1303      03314    banksel CCP1CON
010F   0817           03315    movfw CCP1CON
                      03316    
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03317    
                      03318  PUSH 
0110   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0111   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03319 
                      03320 
                      03321  
                      03322  FAR_CALL pwmf,setbit
0112   ????               M  pagesel setbit
0113   2???               M  call setbit
0114   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03323 
                      03324  POP
0115   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0116   0384               M  decf FSR,f 
0117   1283 1303      03325  banksel CCP1CON
0119   0097           03326  movwf CCP1CON
                      03327  
                      03328 
                      03329  
011A   2???           03330  goto hlllb51J50
                      03331  
                      03332 
011B                  03333 hlllb51J49:
                      03334 
                      03335 
011B                  03336 hlllb51J50:
                      03337 
                      03338 
011B                  03339 hlllb51J52:
                      03340 
                      03341 
011B                  03342 hlllb51J54:
                      03343 
                      03344 
                      03345  
                      03346  FAR_CALL pwmf,kpop
011B   ????               M  pagesel kpop
011C   2???               M  call kpop
011D   ????               M  pagesel pwmf      ;This one restores the caller's code page
                      03347 
                      03348 ;LOAD POINTER
011E   0084           03349  movwf FSR
                      03350  
                      03351 
                      03352  DISCARD
011F   0384               M  decf FSR,f 
                      03353 
                      03354 
                      03355  DISCARD
0120   0384               M  decf FSR,f 
                      03356 
                      03357 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03358  DISCARD
0121   0384               M  decf FSR,f 
                      03359 
                      03360 
0122   0008           03361  return
                      03362  
                      03363 
                      03364 hllt4558 CODE
0000                  03365 pwmin:
                      03366 
0000   1283 1303      03367    banksel PIR1
0002   080C           03368    movfw PIR1
                      03369    
                      03370    
                      03371  PUSH 
0003   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0004   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03372 
                      03373 
0005   3002           03374  movlw .2
                      03375  PUSH 
0006   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0007   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03376 
                      03377 
                      03378  
                      03379  FAR_CALL pwmin,andu
0008   ????               M  pagesel andu
0009   2???               M  call andu
000A   ????               M  pagesel pwmin     ;This one restores the caller's code page
                      03380 
                      03381  POP
000B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000C   0384               M  decf FSR,f 
000D   3A00           03382  xorlw .0
000E   1903           03383  btfsc STATUS,Z
000F   2???           03384  goto hlllb51J56 
                      03385  
                      03386  
0010   2???           03387  goto hlllb51J57
                      03388  
                      03389 
0011                  03390 hlllb51J56:
                      03391 
                      03392  ;
                      03393 
0011   2???           03394  goto pwmin
0012                  03395 hlllb51J57:
                      03396 
0012   0008           03397  return 
                      03398 
                      03399  
                      03400 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03401 hllt4561 CODE
0000                  03402 samplef:
0000   0804           03403  movf FSR,w
                      03404  
                      03405 
                      03406  
                      03407  FAR_CALL samplef ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03408 
                      03409 
0004   3006           03410  movlw .6 
                      03411  PUSH 
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03412 
                      03413 
0007   3005           03414  movlw .5 
                      03415  PUSH 
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03416 
                      03417 
000A   3004           03418  movlw .4 
                      03419  PUSH 
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03420 
000D   1683 1303      03421    banksel ADCON1
000F   081F           03422    movfw ADCON1
                      03423    
                      03424    
                      03425  PUSH 
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03426 
                      03427 
                      03428  
                      03429  HALF_FAR_CALL setbit
0012   ????               M  pagesel setbit         
0013   2???               M  call setbit
                      03430 
                      03431 
                      03432  
                      03433  HALF_FAR_CALL clearbit
0014   ????               M  pagesel clearbit       
0015   2???               M  call clearbit
                      03434 
                      03435 
                      03436  
                      03437  FAR_CALL samplef,setbit
0016   ????               M  pagesel setbit
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0017   2???               M  call setbit
0018   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03438 
                      03439  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   1683 1303      03440  banksel ADCON1
001D   009F           03441  movwf ADCON1
                      03442  
                      03443 
                      03444 
001E   3000           03445  movlw .0
                      03446  PUSH 
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03447 
                      03448 
                      03449  
                      03450  FAR_CALL samplef,parm
0021   ????               M  pagesel parm
0022   2???               M  call parm
0023   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03451 
                      03452 
0024   3000           03453  movlw .0
                      03454  PUSH 
0025   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0026   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03455 
                      03456 
                      03457  
                      03458  FAR_CALL samplef,eq
0027   ????               M  pagesel eq
0028   2???               M  call eq
0029   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03459 
                      03460  POP
002A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
002B   0384               M  decf FSR,f 
002C   3A00           03461  xorlw .0
002D   1903           03462  btfsc STATUS,Z
002E   2???           03463  goto hlllb51J59 
                      03464  
                      03465 
002F   3002           03466  movlw .2 
                      03467  PUSH 
0030   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0031   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03468 
                      03469 
0032   3003           03470  movlw .3 
                      03471  PUSH 
0033   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0034   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03472 
                      03473 
0035   3004           03474  movlw .4 
                      03475  PUSH 
0036   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0037   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03476 
0038   1283 1303      03477    banksel ADCON0
003A   081F           03478    movfw ADCON0
                      03479    
                      03480    
                      03481  PUSH 
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03482 
                      03483 
                      03484  
                      03485  HALF_FAR_CALL clearbit
003D   ????               M  pagesel clearbit       
003E   2???               M  call clearbit
                      03486 
                      03487 
                      03488  
                      03489  HALF_FAR_CALL clearbit
003F   ????               M  pagesel clearbit       
0040   2???               M  call clearbit
                      03490 
                      03491 
                      03492  
                      03493  FAR_CALL samplef,clearbit
0041   ????               M  pagesel clearbit
0042   2???               M  call clearbit
0043   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03494 
                      03495  
0044   2???           03496  goto hlllb51J60
                      03497  
                      03498 
0045                  03499 hlllb51J59:
                      03500 
                      03501 
0045   3002           03502  movlw .2 
                      03503  PUSH 
0046   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0047   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03504 
                      03505 
0048   3003           03506  movlw .3 
                      03507  PUSH 
0049   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03508 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03509 
004B   3004           03510  movlw .4 
                      03511  PUSH 
004C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03512 
004E   1283 1303      03513    banksel ADCON0
0050   081F           03514    movfw ADCON0
                      03515    
                      03516    
                      03517  PUSH 
0051   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0052   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03518 
                      03519 
                      03520  
                      03521  HALF_FAR_CALL setbit
0053   ????               M  pagesel setbit         
0054   2???               M  call setbit
                      03522 
                      03523 
                      03524  
                      03525  HALF_FAR_CALL clearbit
0055   ????               M  pagesel clearbit       
0056   2???               M  call clearbit
                      03526 
                      03527 
                      03528  
                      03529  FAR_CALL samplef,clearbit
0057   ????               M  pagesel clearbit
0058   2???               M  call clearbit
0059   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03530 
                      03531 
005A                  03532 hlllb51J60:
                      03533 
                      03534  POP
005A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
005B   0384               M  decf FSR,f 
005C   1283 1303      03535  banksel ADCON0
005E   009F           03536  movwf ADCON0
                      03537  
                      03538 
                      03539 
                      03540  
                      03541  FAR_CALL samplef,dispose
005F   ????               M  pagesel dispose
0060   2???               M  call dispose
0061   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03542 
                      03543 
0062   3001           03544  movlw .1 
                      03545  PUSH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0063   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0064   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03546 
                      03547 
0065   3007           03548  movlw .7 
                      03549  PUSH 
0066   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0067   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03550 
                      03551 
0068   3000           03552  movlw .0 
                      03553  PUSH 
0069   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03554 
006B   1283 1303      03555    banksel ADCON0
006D   081F           03556    movfw ADCON0
                      03557    
                      03558    
                      03559  PUSH 
006E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03560 
                      03561 
                      03562  
                      03563  HALF_FAR_CALL setbit
0070   ????               M  pagesel setbit         
0071   2???               M  call setbit
                      03564 
                      03565 
                      03566  
                      03567  HALF_FAR_CALL setbit
0072   ????               M  pagesel setbit         
0073   2???               M  call setbit
                      03568 
                      03569 
                      03570  
                      03571  FAR_CALL samplef,clearbit
0074   ????               M  pagesel clearbit
0075   2???               M  call clearbit
0076   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03572 
                      03573  POP
0077   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0078   0384               M  decf FSR,f 
0079   1283 1303      03574  banksel ADCON0
007B   009F           03575  movwf ADCON0
                      03576  
                      03577 
                      03578 
007C   3000           03579  movlw .0 
                      03580  PUSH 
007D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03581 
007F   1283 1703      03582    banksel ANSEL
0081   081E           03583    movfw ANSEL
                      03584    
                      03585    
                      03586  PUSH 
0082   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0083   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03587 
                      03588 
                      03589  
                      03590  FAR_CALL samplef,setbit
0084   ????               M  pagesel setbit
0085   2???               M  call setbit
0086   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03591 
                      03592  POP
0087   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0088   0384               M  decf FSR,f 
0089   1283 1703      03593  banksel ANSEL
008B   009E           03594  movwf ANSEL
                      03595  
                      03596 
                      03597 
008C   3001           03598  movlw .1 
                      03599  PUSH 
008D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
008E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03600 
008F   1283 1303      03601    banksel ADCON0
0091   081F           03602    movfw ADCON0
                      03603    
                      03604    
                      03605  PUSH 
0092   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0093   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03606 
                      03607 
                      03608  
                      03609  FAR_CALL samplef,setbit
0094   ????               M  pagesel setbit
0095   2???               M  call setbit
0096   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03610 
                      03611  POP
0097   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0098   0384               M  decf FSR,f 
0099   1283 1303      03612  banksel ADCON0
009B   009F           03613  movwf ADCON0
                      03614  
                      03615 
                      03616 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03617  
                      03618  FAR_CALL samplef,ourwait
009C   ????               M  pagesel ourwait
009D   2???               M  call ourwait
009E   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03619 
                      03620 
009F   3000           03621  movlw .0
                      03622  
                      03623 
                      03624 
                      03625  PUSH 
00A0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03626 
                      03627 
00A2   3008           03628  movlw .8
                      03629  
                      03630 
                      03631  PUSH 
00A3   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A4   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03632 
                      03633 
00A5   3003           03634  movlw .3 
                      03635  PUSH 
00A6   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A7   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03636 
00A8   1283 1303      03637    banksel ADRESH
00AA   081E           03638    movfw ADRESH
                      03639    
                      03640    
                      03641  PUSH 
00AB   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00AC   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03642 
                      03643 
                      03644  
                      03645  HALF_FAR_CALL andu
00AD   ????               M  pagesel andu           
00AE   2???               M  call andu
                      03646 
                      03647 
                      03648  
                      03649  HALF_FAR_CALL utof
00AF   ????               M  pagesel utof           
00B0   2???               M  call utof
                      03650 
                      03651 
                      03652  
                      03653  FAR_CALL samplef,mulf
00B1   ????               M  pagesel mulf
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B2   2???               M  call mulf
00B3   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03654 
00B4   1683 1303      03655    banksel ADRESL
00B6   081E           03656    movfw ADRESL
                      03657    
                      03658    
                      03659  PUSH 
00B7   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00B8   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03660 
                      03661 
                      03662  
                      03663  HALF_FAR_CALL utof
00B9   ????               M  pagesel utof           
00BA   2???               M  call utof
                      03664 
                      03665 
                      03666  
                      03667  HALF_FAR_CALL addf
00BB   ????               M  pagesel addf           
00BC   2???               M  call addf
                      03668 
                      03669 
                      03670  
                      03671  FAR_CALL samplef,kpop
00BD   ????               M  pagesel kpop
00BE   2???               M  call kpop
00BF   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03672  
                      03673 #ifdef HLLMULTITASK 
00C0   08??           03674  movf in_isr,f ;In shared RAM, no need for BANKSEL
00C1   1903           03675  btfsc STATUS,Z
00C2   2???           03676  goto $+3
00C3   00??           03677  movwf pbase+1 ;in_isr... the "in isr" clause comes first in all of these macros. This
00C4   2???           03678  goto $+2      ; is because isr execution is preemptive, and returns only at the 
00C5   00??           03679  movwf pbase   ; completion of all triggered routines. So, it can starve out the main
                      03680 #else          ; thread, and speeding up isr execution helps this problem. In most of
                      03681  movwf pbase   ; these macros, in-isr execution takes just 4 instruction cycles.
                      03682 #endif 
                      03683 
                      03684 
                      03685  POP
00C6   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00C7   0384               M  decf FSR,f 
                      03686  
                      03687  FAR_CALL samplef ,kpush
00C8   ????               M  pagesel kpush
00C9   2???               M  call kpush
00CA   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03688  
                      03689 
                      03690  POP
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CB   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00CC   0384               M  decf FSR,f 
                      03691  
                      03692  FAR_CALL samplef ,kpush
00CD   ????               M  pagesel kpush
00CE   2???               M  call kpush
00CF   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03693  
                      03694 #ifdef HLLMULTITASK 
00D0   08??           03695  movf in_isr,f ;In shared RAM, no need for BANKSEL
00D1   1903           03696  btfsc STATUS,Z
00D2   2???           03697  goto $+3
00D3   08??           03698  movf pbase+1,w                 ;in_isr
00D4   2???           03699  goto $+2
00D5   08??           03700  movf pbase,w   ;not in_isr
                      03701 #else
                      03702  movf pbase,w   
                      03703 #endif  
                      03704 
                      03705  
                      03706 ;LOAD POINTER
00D6   0084           03707  movwf FSR
                      03708  
                      03709 
                      03710  DISCARD
00D7   0384               M  decf FSR,f 
                      03711 
                      03712 
                      03713  
                      03714  FAR_CALL samplef ,kpop
00D8   ????               M  pagesel kpop
00D9   2???               M  call kpop
00DA   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03715 
                      03716  PUSH 
00DB   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00DC   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03717 
                      03718 
                      03719  
                      03720  FAR_CALL samplef ,kpop
00DD   ????               M  pagesel kpop
00DE   2???               M  call kpop
00DF   ????               M  pagesel samplef   ;This one restores the caller's code page
                      03721 
                      03722  PUSH 
00E0   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00E1   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03723 
                      03724 
00E2   0008           03725  return
                      03726  
                      03727 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03728 hllt4564 CODE
0000                  03729 ourwait:
                      03730 
                      03731 
0000   3002           03732  movlw .2 
                      03733  PUSH 
0001   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0002   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03734 
0003   1283 1303      03735    banksel ADCON0
0005   081F           03736    movfw ADCON0
                      03737    
                      03738    
                      03739  PUSH 
0006   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0007   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03740 
                      03741 
                      03742  
                      03743  FAR_CALL ourwait,andu
0008   ????               M  pagesel andu
0009   2???               M  call andu
000A   ????               M  pagesel ourwait   ;This one restores the caller's code page
                      03744 
                      03745  POP
000B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000C   0384               M  decf FSR,f 
000D   3A00           03746  xorlw .0
000E   1903           03747  btfsc STATUS,Z
000F   2???           03748  goto hlllb51J62 
                      03749  
                      03750  ;
                      03751 
                      03752 
0010   2???           03753  goto ourwait
0011                  03754 hlllb51J62:
0011                  03755 hlllb51J63:
                      03756 
0011   0008           03757  return 
                      03758 
                      03759  
0012                  03760 hllprgen2:
0012   2???           03761  goto hllprgen2
                      03762  
                      03763 
                      03764 
                      03765 
                      03766 
                      03767 
                      03768  
                      03769 
                      03770 
                      03771  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03772 hlog1g CODE
                      03773  
0000                  03774 andb: 
0000   ????           03775  pagesel mul
0001   2???           03776  goto mul
                      03777 
                      03778  
                      03779 
                      03780 
                      03781 
                      03782 
                      03783 
                      03784  
                      03785 
                      03786  
                      03787 hlog1h CODE
0000                  03788 andu: 
                      03789  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0500           03790  andwf HLINDF,w
0003   0384           03791  decf HLFSR,f 
                      03792  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           03793  return
                      03794  
                      03795 
                      03796 
                      03797 
                      03798 
                      03799 
                      03800 
                      03801 
                      03802  
                      03803  
                      03804 
                      03805  
                      03806 
                      03807 
                      03808 ansiadt udata
0000                  03809 aart00 RES .1
                      03810 #ifdef HLLMULTITASK
                      03811 #ifdef HLLGUARDaart
                      03812 aart00isr RES .1
                      03813 #endif 
                      03814 #endif 
0001                  03815 aart01 RES .1
                      03816 #ifdef HLLMULTITASK
                      03817 #ifdef HLLGUARDaart
                      03818 aart01isr RES .1
                      03819 #endif 
                      03820 #endif 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002                  03821 aart02 RES .1
                      03822 #ifdef HLLMULTITASK
                      03823 #ifdef HLLGUARDaart
                      03824 aart02isr RES .1
                      03825 #endif 
                      03826 #endif 
                      03827 
                      03828  
                      03829 ansiara CODE
                      03830 
                      03831 ansiadu udata
0000                  03832 aartpr00 RES .1
                      03833 #ifdef HLLMULTITASK
                      03834 #ifdef HLLGUARDaartpr
                      03835 aart00prisr RES .1
                      03836 #endif 
                      03837 #endif 
                      03838 
                      03839 cprntuc CODE
                      03840 
                      03841 
                      03842 
                      03843 #define margpi aartpr00
                      03844 
                      03845 
0000                  03846 printu:  
                      03847 #ifdef HLLMULTITASK
                      03848 #ifdef HLLGUARDaartpr 
                      03849  movf in_isr,f  
                      03850  btfsc STATUS,Z
                      03851  
                      03852 
                      03853 
                      03854  goto printu0
                      03855 
                      03856  POP
                      03857  banksel margpi
                      03858  movwf margpi
                      03859  PUSH
                      03860  movlw .100 
                      03861  PUSH
                      03862  
                      03863  FAR_CALL printu,divu
                      03864  POP
                      03865  addlw '0' 
                      03866  PUSH
                      03867  
                      03868  FAR_CALL printu,printch
                      03869  banksel margpi 
                      03870  movfw margpi
                      03871  PUSH
                      03872  movlw .100 
                      03873  PUSH
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03874  
                      03875  FAR_CALL printu,modu
                      03876  movlw .10
                      03877  PUSH
                      03878  
                      03879  FAR_CALL printu,divu
                      03880  POP
                      03881  addlw '0' 
                      03882  PUSH
                      03883  
                      03884  FAR_CALL printu,printch
                      03885  banksel margpi
                      03886  movfw margpi
                      03887  PUSH
                      03888  movlw .10 
                      03889  PUSH
                      03890  
                      03891  FAR_CALL printu,modu
                      03892  POP
                      03893  addlw '0' 
                      03894  PUSH
                      03895  
                      03896  FAR_CALL printu,printch  
                      03897  return
                      03898 
                      03899 
                      03900 
                      03901 #undefine margpi
                      03902 
                      03903 
                      03904 #define margpi aartpr00+1
                      03905 
                      03906 
                      03907 printu0:
                      03908 #endif
                      03909 #endif
                      03910 
                      03911  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      03912  banksel margpi
0004   00??           03913  movwf margpi
                      03914  PUSH
0005   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0006   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0007   3064           03915  movlw .100 
                      03916  PUSH
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03917  
                      03918  FAR_CALL printu,divu
000A   ????               M  pagesel divu
000B   2???               M  call divu
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C   ????               M  pagesel printu    ;This one restores the caller's code page
                      03919  POP
000D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000E   0384               M  decf FSR,f 
000F   3E30           03920  addlw '0' 
                      03921  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03922  
                      03923  FAR_CALL printu,printch
0012   ????               M  pagesel printch
0013   2???               M  call printch
0014   ????               M  pagesel printu    ;This one restores the caller's code page
0015   ???? ????      03924  banksel margpi 
0017   08??           03925  movfw margpi
                      03926  PUSH
0018   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0019   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
001A   3064           03927  movlw .100 
                      03928  PUSH
001B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03929  
                      03930  FAR_CALL printu,modu
001D   ????               M  pagesel modu
001E   2???               M  call modu
001F   ????               M  pagesel printu    ;This one restores the caller's code page
0020   300A           03931  movlw .10
                      03932  PUSH
0021   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0022   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03933  
                      03934  FAR_CALL printu,divu
0023   ????               M  pagesel divu
0024   2???               M  call divu
0025   ????               M  pagesel printu    ;This one restores the caller's code page
                      03935  POP
0026   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0027   0384               M  decf FSR,f 
0028   3E30           03936  addlw '0' 
                      03937  PUSH
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03938  
                      03939  FAR_CALL printu,printch
002B   ????               M  pagesel printch
002C   2???               M  call printch
002D   ????               M  pagesel printu    ;This one restores the caller's code page
002E   ???? ????      03940  banksel margpi
0030   08??           03941  movfw margpi
                      03942  PUSH
0031   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0032   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0033   300A           03943  movlw .10 
                      03944  PUSH
0034   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0035   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03945  
                      03946  FAR_CALL printu,modu
0036   ????               M  pagesel modu
0037   2???               M  call modu
0038   ????               M  pagesel printu    ;This one restores the caller's code page
                      03947  POP
0039   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003A   0384               M  decf FSR,f 
003B   3E30           03948  addlw '0' 
                      03949  PUSH
003C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      03950  
                      03951  FAR_CALL printu,printch  
003E   ????               M  pagesel printch
003F   2???               M  call printch
0040   ????               M  pagesel printu    ;This one restores the caller's code page
0041   0008           03952  return
                      03953 
                      03954 
                      03955 
                      03956 #undefine margpi
                      03957 
                      03958 
                      03959 
                      03960 
                      03961 
                      03962 
                      03963 
                      03964  
                      03965 
                      03966  
                      03967 
                      03968 
                      03969 
                      03970 
                      03971 
                      03972 
                      03973 
                      03974 
                      03975 
                      03976 
                      03977 
                      03978 
                      03979 
                      03980 
                      03981 
                      03982 
                      03983  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03984 ansiard CODE
                      03985 
                      03986 
                      03987 
                      03988 
                      03989 #define charx aart00
                      03990 
                      03991 
                      03992 #define ansiG aart01
                      03993 
                      03994 
0000                  03995 graphx:  
                      03996 #ifdef HLLMULTITASK
                      03997 #ifdef HLLGUARDaart 
                      03998  movf in_isr,f  
                      03999  btfsc STATUS,Z
                      04000  
                      04001 
                      04002 
                      04003  goto graphx0
                      04004 
                      04005 
                      04006 
                      04007  
                      04008  movlw 0x1b
                      04009  PUSH
                      04010  
                      04011  FAR_CALL graphx,printch
                      04012  movlw '['
                      04013  PUSH
                      04014  
                      04015  HALF_FAR_CALL printch
                      04016  
                      04017  FAR_CALL graphx,printu
                      04018  movlw ';'
                      04019  PUSH
                      04020  
                      04021  HALF_FAR_CALL printch
                      04022  
                      04023  FAR_CALL graphx,printu
                      04024  movlw 'H'
                      04025  PUSH
                      04026  
                      04027  FAR_CALL graphx,printch
                      04028  
                      04029 
                      04030  POP
                      04031  banksel charx
                      04032  movwf charx
                      04033  
                      04034  xorlw .0 
                      04035  btfsc STATUS,Z
                      04036  goto allgxy
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04037  banksel ansiG
                      04038  movwf ansiG
                      04039 lblgxy22:
                      04040  movlw 0xDB
                      04041  PUSH
                      04042  
                      04043  FAR_CALL graphx,printch
                      04044  banksel ansiG
                      04045  decfsz ansiG,f
                      04046  goto lblgxy22
                      04047  
                      04048 allgxy: 
                      04049  banksel charx
                      04050  movf charx,w
                      04051  subwf HLINDF,f
                      04052  POP
                      04053  xorlw .0 
                      04054  btfsc STATUS,Z
                      04055  goto retgxy
                      04056  banksel ansiG
                      04057  movwf ansiG
                      04058 lblgxy3:
                      04059  movlw 0xB0 
                      04060  PUSH
                      04061  
                      04062  FAR_CALL graphx,printch
                      04063  banksel ansiG
                      04064  decfsz ansiG,f
                      04065  goto lblgxy3
                      04066 retgxy:
                      04067 
                      04068  
                      04069  return
                      04070 
                      04071 
                      04072 
                      04073 #undefine charx
                      04074 
                      04075 
                      04076 #undefine ansiG
                      04077 
                      04078 
                      04079 #define charx aart00+1
                      04080 
                      04081 
                      04082 #define ansiG aart01+1
                      04083 
                      04084 
                      04085 graphx0:
                      04086 #endif
                      04087 #endif
                      04088 
                      04089 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04090 
                      04091  
0000   301B           04092  movlw 0x1b
                      04093  PUSH
0001   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0002   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04094  
                      04095  FAR_CALL graphx,printch
0003   ????               M  pagesel printch
0004   2???               M  call printch
0005   ????               M  pagesel graphx    ;This one restores the caller's code page
0006   305B           04096  movlw '['
                      04097  PUSH
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04098  
                      04099  HALF_FAR_CALL printch
0009   ????               M  pagesel printch        
000A   2???               M  call printch
                      04100  
                      04101  FAR_CALL graphx,printu
000B   ????               M  pagesel printu
000C   2???               M  call printu
000D   ????               M  pagesel graphx    ;This one restores the caller's code page
000E   303B           04102  movlw ';'
                      04103  PUSH
000F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0010   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04104  
                      04105  HALF_FAR_CALL printch
0011   ????               M  pagesel printch        
0012   2???               M  call printch
                      04106  
                      04107  FAR_CALL graphx,printu
0013   ????               M  pagesel printu
0014   2???               M  call printu
0015   ????               M  pagesel graphx    ;This one restores the caller's code page
0016   3048           04108  movlw 'H'
                      04109  PUSH
0017   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0018   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04110  
                      04111  FAR_CALL graphx,printch
0019   ????               M  pagesel printch
001A   2???               M  call printch
001B   ????               M  pagesel graphx    ;This one restores the caller's code page
                      04112  
                      04113 
                      04114  POP
001C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001D   0384               M  decf FSR,f 
001E   ???? ????      04115  banksel charx
0020   00??           04116  movwf charx
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04117  
0021   3A00           04118  xorlw .0 
0022   1903           04119  btfsc STATUS,Z
0023   2???           04120  goto hllBAAAA
0024   ???? ????      04121  banksel ansiG
0026   00??           04122  movwf ansiG
0027                  04123 hllAAAAA:
0027   30DB           04124  movlw 0xDB
                      04125  PUSH
0028   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0029   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04126  
                      04127  FAR_CALL graphx,printch
002A   ????               M  pagesel printch
002B   2???               M  call printch
002C   ????               M  pagesel graphx    ;This one restores the caller's code page
002D   ???? ????      04128  banksel ansiG
002F   0B??           04129  decfsz ansiG,f
0030   2???           04130  goto hllAAAAA
                      04131  
0031                  04132 hllBAAAA: 
0031   ???? ????      04133  banksel charx
0033   08??           04134  movf charx,w
0034   0280           04135  subwf HLINDF,f
                      04136  POP
0035   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0036   0384               M  decf FSR,f 
0037   3A00           04137  xorlw .0 
0038   1903           04138  btfsc STATUS,Z
0039   2???           04139  goto hllDAAAA
003A   ???? ????      04140  banksel ansiG
003C   00??           04141  movwf ansiG
003D                  04142 hllCAAAA:
003D   30B0           04143  movlw 0xB0 
                      04144  PUSH
003E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04145  
                      04146  FAR_CALL graphx,printch
0040   ????               M  pagesel printch
0041   2???               M  call printch
0042   ????               M  pagesel graphx    ;This one restores the caller's code page
0043   ???? ????      04147  banksel ansiG
0045   0B??           04148  decfsz ansiG,f
0046   2???           04149  goto hllCAAAA
0047                  04150 hllDAAAA:
                      04151 
                      04152  
0047   0008           04153  return
                      04154 
                      04155 
                      04156 
                      04157 #undefine charx
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04158 
                      04159 
                      04160 #undefine ansiG
                      04161 
                      04162 
                      04163 
                      04164 
                      04165 
                      04166 
                      04167  
                      04168 
                      04169 
                      04170 hlog1a CODE
                      04171 
                      04172 
                      04173 
                      04174 #define margp2 hllblss00
                      04175 
                      04176 
0000                  04177 clearbit:  
                      04178 #ifdef HLLMULTITASK
                      04179 #ifdef HLLGUARDhllblss 
0000   08??           04180  movf in_isr,f  
0001   1903           04181  btfsc STATUS,Z
                      04182  
                      04183 
                      04184 
0002   2???           04185  goto clearbit0
                      04186 
                      04187  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   ???? ????      04188  banksel margp2
0007   00??           04189  movwf margp2
                      04190  POP 
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   3A00           04191  xorlw .0
000B   1D03           04192  btfss STATUS,Z
000C   2???           04193  goto tff00h
                      04194  
000D   08??           04195  movfw margp2
000E   39FE           04196  andlw .255-.1
000F   2???           04197  goto tff99h
0010                  04198 tff00h: 
                      04199  
0010   3A01           04200  xorlw .1
0011   1D03           04201  btfss STATUS,Z
0012   2???           04202  goto tff01h
                      04203  
0013   08??           04204  movfw margp2
0014   39FD           04205  andlw .255-.2
0015   2???           04206  goto tff99h
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016                  04207 tff01h: 
0016   3A01           04208  xorlw .1
0017   3A02           04209  xorlw .2
0018   1D03           04210  btfss STATUS,Z
0019   2???           04211  goto tff02h
                      04212  
001A   08??           04213  movfw margp2
001B   39FB           04214  andlw .255-.4
001C   2???           04215  goto tff99h
001D                  04216 tff02h: 
001D   3A02           04217  xorlw .2
001E   3A03           04218  xorlw .3
001F   1D03           04219  btfss STATUS,Z
0020   2???           04220  goto tff03h
                      04221  
0021   08??           04222  movfw margp2
0022   39F7           04223  andlw .255-.8
0023   2???           04224  goto tff99h
0024                  04225 tff03h: 
0024   3A03           04226  xorlw .3
0025   3A04           04227  xorlw .4
0026   1D03           04228  btfss STATUS,Z
0027   2???           04229  goto tff04h
                      04230  
0028   08??           04231  movfw margp2
0029   39EF           04232  andlw .255-.16
002A   2???           04233  goto tff99h
002B                  04234 tff04h: 
002B   3A04           04235  xorlw .4
002C   3A05           04236  xorlw .5
002D   1D03           04237  btfss STATUS,Z
002E   2???           04238  goto tff05h
                      04239  
002F   08??           04240  movfw margp2
0030   39DF           04241  andlw .255-.32
0031   2???           04242  goto tff99h
0032                  04243 tff05h: 
0032   3A05           04244  xorlw .5
0033   3A06           04245  xorlw .6
0034   1D03           04246  btfss STATUS,Z
0035   2???           04247  goto tff07h
                      04248  
0036   08??           04249  movfw margp2
0037   39BF           04250  andlw .255-.64
0038   2???           04251  goto tff99h
0039                  04252 tff07h: 
                      04253  
0039   08??           04254  movfw margp2
003A   397F           04255  andlw .255-.128
003B                  04256 tff99h:  
                      04257  PUSH
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003D   0008           04258  return
                      04259 
                      04260 
                      04261 
                      04262 
                      04263 #undefine margp2
                      04264 
                      04265 
                      04266 #define margp2 hllblss00+1
                      04267 
                      04268 
003E                  04269 clearbit0:
                      04270 #endif
                      04271 #endif
                      04272 
                      04273  POP
003E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003F   0384               M  decf FSR,f 
0040   ???? ????      04274  banksel margp2
0042   00??           04275  movwf margp2
                      04276  POP 
0043   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0044   0384               M  decf FSR,f 
0045   3A00           04277  xorlw .0
0046   1D03           04278  btfss STATUS,Z
0047   2???           04279  goto hllLAAAA
                      04280  
0048   08??           04281  movfw margp2
0049   39FE           04282  andlw .255-.1
004A   2???           04283  goto hllSAAAA
004B                  04284 hllLAAAA: 
                      04285  
004B   3A01           04286  xorlw .1
004C   1D03           04287  btfss STATUS,Z
004D   2???           04288  goto hllMAAAA
                      04289  
004E   08??           04290  movfw margp2
004F   39FD           04291  andlw .255-.2
0050   2???           04292  goto hllSAAAA
0051                  04293 hllMAAAA: 
0051   3A01           04294  xorlw .1
0052   3A02           04295  xorlw .2
0053   1D03           04296  btfss STATUS,Z
0054   2???           04297  goto hllNAAAA
                      04298  
0055   08??           04299  movfw margp2
0056   39FB           04300  andlw .255-.4
0057   2???           04301  goto hllSAAAA
0058                  04302 hllNAAAA: 
0058   3A02           04303  xorlw .2
0059   3A03           04304  xorlw .3
005A   1D03           04305  btfss STATUS,Z
005B   2???           04306  goto hllOAAAA
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04307  
005C   08??           04308  movfw margp2
005D   39F7           04309  andlw .255-.8
005E   2???           04310  goto hllSAAAA
005F                  04311 hllOAAAA: 
005F   3A03           04312  xorlw .3
0060   3A04           04313  xorlw .4
0061   1D03           04314  btfss STATUS,Z
0062   2???           04315  goto hllPAAAA
                      04316  
0063   08??           04317  movfw margp2
0064   39EF           04318  andlw .255-.16
0065   2???           04319  goto hllSAAAA
0066                  04320 hllPAAAA: 
0066   3A04           04321  xorlw .4
0067   3A05           04322  xorlw .5
0068   1D03           04323  btfss STATUS,Z
0069   2???           04324  goto hllQAAAA
                      04325  
006A   08??           04326  movfw margp2
006B   39DF           04327  andlw .255-.32
006C   2???           04328  goto hllSAAAA
006D                  04329 hllQAAAA: 
006D   3A05           04330  xorlw .5
006E   3A06           04331  xorlw .6
006F   1D03           04332  btfss STATUS,Z
0070   2???           04333  goto hllRAAAA
                      04334  
0071   08??           04335  movfw margp2
0072   39BF           04336  andlw .255-.64
0073   2???           04337  goto hllSAAAA
0074                  04338 hllRAAAA: 
                      04339  
0074   08??           04340  movfw margp2
0075   397F           04341  andlw .255-.128
0076                  04342 hllSAAAA:  
                      04343  PUSH
0076   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0077   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0078   0008           04344  return
                      04345 
                      04346 
                      04347 
                      04348 
                      04349 #undefine margp2
                      04350 
                      04351 
                      04352 
                      04353 
                      04354 
                      04355 
                      04356  
                      04357 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04358  
                      04359 ansiarb CODE
                      04360  
                      04361  
0000                  04362 cls:
                      04363  
0000   301B           04364  movlw 0x1b
                      04365  PUSH
0001   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0002   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04366  
                      04367  FAR_CALL cls,printch
0003   ????               M  pagesel printch
0004   2???               M  call printch
0005   ????               M  pagesel cls       ;This one restores the caller's code page
0006   305B           04368  movlw '['
                      04369  PUSH
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04370  
                      04371  FAR_CALL cls,printch
0009   ????               M  pagesel printch
000A   2???               M  call printch
000B   ????               M  pagesel cls       ;This one restores the caller's code page
000C   3032           04372  movlw '2'
                      04373  PUSH
000D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04374  
                      04375  FAR_CALL cls,printch
000F   ????               M  pagesel printch
0010   2???               M  call printch
0011   ????               M  pagesel cls       ;This one restores the caller's code page
0012   304B           04376  movlw 'K'
                      04377  PUSH
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04378  
                      04379  FAR_CALL cls,printch
0015   ????               M  pagesel printch
0016   2???               M  call printch
0017   ????               M  pagesel cls       ;This one restores the caller's code page
                      04380 
                      04381 
0018   301B           04382  movlw 0x1b
                      04383  PUSH
0019   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04384  
                      04385  FAR_CALL cls,printch
001B   ????               M  pagesel printch
001C   2???               M  call printch
001D   ????               M  pagesel cls       ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001E   305B           04386  movlw '['
                      04387  PUSH
001F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0020   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04388  
                      04389  FAR_CALL cls,printch
0021   ????               M  pagesel printch
0022   2???               M  call printch
0023   ????               M  pagesel cls       ;This one restores the caller's code page
0024   304A           04390  movlw 'J'
                      04391  PUSH
0025   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0026   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04392  
                      04393  FAR_CALL cls,printch
0027   ????               M  pagesel printch
0028   2???               M  call printch
0029   ????               M  pagesel cls       ;This one restores the caller's code page
                      04394  
                      04395  
                      04396  
002A   301B           04397  movlw 0x1b
                      04398  PUSH
002B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04399  
                      04400  FAR_CALL cls,printch
002D   ????               M  pagesel printch
002E   2???               M  call printch
002F   ????               M  pagesel cls       ;This one restores the caller's code page
0030   305B           04401  movlw '['
                      04402  PUSH
0031   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0032   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04403  
                      04404  FAR_CALL cls,printch
0033   ????               M  pagesel printch
0034   2???               M  call printch
0035   ????               M  pagesel cls       ;This one restores the caller's code page
0036   3031           04405  movlw '1'
                      04406  PUSH
0037   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0038   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04407  
                      04408  FAR_CALL cls,printch
0039   ????               M  pagesel printch
003A   2???               M  call printch
003B   ????               M  pagesel cls       ;This one restores the caller's code page
003C   304A           04409  movlw 'J'
                      04410  PUSH
003D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04411  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04412  FAR_CALL cls,printch
003F   ????               M  pagesel printch
0040   2???               M  call printch
0041   ????               M  pagesel cls       ;This one restores the caller's code page
                      04413 
                      04414 
0042   301B           04415  movlw 0x1b
                      04416  PUSH
0043   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0044   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04417  
                      04418  FAR_CALL cls,printch
0045   ????               M  pagesel printch
0046   2???               M  call printch
0047   ????               M  pagesel cls       ;This one restores the caller's code page
0048   305B           04419  movlw '['
                      04420  PUSH
0049   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04421  
                      04422  FAR_CALL cls,printch
004B   ????               M  pagesel printch
004C   2???               M  call printch
004D   ????               M  pagesel cls       ;This one restores the caller's code page
004E   3032           04423  movlw '2'
                      04424  PUSH
004F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0050   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04425  
                      04426  FAR_CALL cls,printch
0051   ????               M  pagesel printch
0052   2???               M  call printch
0053   ????               M  pagesel cls       ;This one restores the caller's code page
0054   304B           04427  movlw 'K'
                      04428  PUSH
0055   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0056   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04429  
                      04430  FAR_CALL cls,printch
0057   ????               M  pagesel printch
0058   2???               M  call printch
0059   ????               M  pagesel cls       ;This one restores the caller's code page
                      04431 
                      04432 
005A   301B           04433  movlw 0x1b
                      04434  PUSH
005B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04435  
                      04436  FAR_CALL cls,printch
005D   ????               M  pagesel printch
005E   2???               M  call printch
005F   ????               M  pagesel cls       ;This one restores the caller's code page
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0060   305B           04437  movlw '['
                      04438  PUSH
0061   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0062   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04439  
                      04440  FAR_CALL cls,printch
0063   ????               M  pagesel printch
0064   2???               M  call printch
0065   ????               M  pagesel cls       ;This one restores the caller's code page
0066   304A           04441  movlw 'J'
                      04442  PUSH
0067   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0068   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04443  
                      04444  FAR_CALL cls,printch
0069   ????               M  pagesel printch
006A   2???               M  call printch
006B   ????               M  pagesel cls       ;This one restores the caller's code page
                      04445  
                      04446  
                      04447  
006C   301B           04448  movlw 0x1b
                      04449  PUSH
006D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04450  
                      04451  FAR_CALL cls,printch
006F   ????               M  pagesel printch
0070   2???               M  call printch
0071   ????               M  pagesel cls       ;This one restores the caller's code page
0072   305B           04452  movlw '['
                      04453  PUSH
0073   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0074   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04454  
                      04455  FAR_CALL cls,printch
0075   ????               M  pagesel printch
0076   2???               M  call printch
0077   ????               M  pagesel cls       ;This one restores the caller's code page
0078   3031           04456  movlw '1'
                      04457  PUSH
0079   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04458  
                      04459  FAR_CALL cls,printch
007B   ????               M  pagesel printch
007C   2???               M  call printch
007D   ????               M  pagesel cls       ;This one restores the caller's code page
007E   304A           04460  movlw 'J'
                      04461  PUSH
007F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0080   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      04462  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04463  FAR_CALL cls,printch
0081   ????               M  pagesel printch
0082   2???               M  call printch
0083   ????               M  pagesel cls       ;This one restores the caller's code page
                      04464 
0084   0008           04465  return
                      04466 
                      04467  
                      04468 
                      04469 
                      04470 
                      04471 
                      04472 
                      04473 
                      04474 
                      04475  
                      04476 
                      04477 
                      04478 
                      04479 ukrnl2 UDATA
0000                  04480 stack res HLOE_STACK_SIZE
                      04481  
                      04482 ukrnl3 UDATA 
0000                  04483 alt_stack res HLOE_STACK2_SIZE
                      04484  
                      04485 
                      04486 
                      04487 ukernl udata 
                      04488 
                      04489 
                      04490 
                      04491 
                      04492 
0000                  04493 hllblss00 res 1           
                      04494 #ifdef HLLMULTITASK
                      04495 #ifdef HLLGUARDhllblss
0001                  04496 hllblss00isr res 1      
                      04497 #endif
                      04498 #endif
                      04499 
0002                  04500 hllblss01 res 1    
                      04501 #ifdef HLLMULTITASK
                      04502 #ifdef HLLGUARDhllblss
0003                  04503 hllblss01isr res 1      
                      04504 #endif
                      04505 #endif
                      04506 
0004                  04507 hllblss02 res 1    
                      04508 #ifdef HLLMULTITASK
                      04509 #ifdef HLLGUARDhllblss
0005                  04510 hllblss02isr res 1      
                      04511 #endif
                      04512 #endif
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04513   
                      04514 ukrshr udata_shr
                      04515 
                      04516 
0000                  04517 softstack0 res 1                
                      04518 #ifdef HLLMULTITASK
0001                  04519 softstack0isr res 1
                      04520 #endif
                      04521 
0002                  04522 softstack1 res 1                
                      04523 #ifdef HLLMULTITASK
0003                  04524 softstack1isr res 1
                      04525 #endif
                      04526 
0004                  04527 softstack2 res 1                
                      04528 #ifdef HLLMULTITASK
0005                  04529 softstack2isr res 1
                      04530 #endif
                      04531 
0006                  04532 alt_fsr res 1
0007                  04533 W_Save res 1 
0008                  04534 STATUS_Save res 1
0009                  04535 FSR_Save res 1
000A                  04536 ALT_Save res 1
000B                  04537 in_isr res 1
                      04538 
                      04539 hllkrna00 CODE
                      04540 
                      04541  
                      04542 
                      04543 
                      04544 #define mterm hllblss00
                      04545 
                      04546 
0000                  04547 mul:  
                      04548 #ifdef HLLMULTITASK
                      04549 #ifdef HLLGUARDhllblss 
0000   08??           04550  movf in_isr,f  
0001   1903           04551  btfsc STATUS,Z
                      04552  
                      04553 
                      04554 
0002   2???           04555  goto mul0
                      04556 
                      04557  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   ???? ????      04558  banksel mterm 
0007   00??           04559  movwf mterm
0008   0103           04560  clrw 
0009   0700           04561  addwf HLINDF,w 
000A   03??           04562  decf mterm,f 
000B   1D03           04563  btfss STATUS,Z 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C   2???           04564  goto $-3
000D   0080           04565  movwf HLINDF
000E   0008           04566  return
                      04567 
                      04568 
                      04569 
                      04570 #undefine mterm
                      04571 
                      04572 
                      04573 #define mterm hllblss00+1
                      04574 
                      04575 
000F                  04576 mul0:
                      04577 #endif
                      04578 #endif
                      04579 
                      04580  POP
000F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0010   0384               M  decf FSR,f 
0011   ???? ????      04581  banksel mterm 
0013   00??           04582  movwf mterm
0014   0103           04583  clrw 
0015   0700           04584  addwf HLINDF,w 
0016   03??           04585  decf mterm,f 
0017   1D03           04586  btfss STATUS,Z 
0018   2???           04587  goto $-3
0019   0080           04588  movwf HLINDF
001A   0008           04589  return
                      04590 
                      04591 
                      04592 
                      04593 #undefine mterm
                      04594 hllkrna01 CODE
                      04595 
0000                  04596 add: 
                      04597  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0700           04598  addwf HLINDF,w
0003   0384           04599  decf HLFSR,f 
                      04600  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           04601  return
                      04602  
                      04603 hllkrna02 CODE 
                      04604 
0000                  04605 negti:  
0000   0980           04606  comf HLINDF,f
0001   0A80           04607  incf HLINDF,f
0002   0008           04608  return
                      04609  
                      04610 hllkrna03 CODE 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04611  
0000                  04612 printch:
                      04613  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      04614 #ifdef HLLMULTITASK 
                      04615  
0002   1283 1303      04616  banksel PIR1
0004   1E0C           04617  btfss PIR1,TXIF  
0005   2???           04618  goto $-1 
                      04619 #endif 
                      04620  
0006   1283 1303      04621  banksel TXREG
0008   0099           04622  movwf TXREG  
                      04623  
0009   1283 1303      04624  banksel PIR1
000B   1E0C           04625  btfss PIR1,TXIF  
000C   2???           04626  goto $-1  
000D   0008           04627  return  
                      04628  
                      04629 
                      04630 hllkrna04 CODE
                      04631  
                      04632 
                      04633 
                      04634 #define mterm hllblss00
                      04635 
                      04636 
                      04637 #define mdiv hllblss01
                      04638 
                      04639 
                      04640 #define mquot hllblss02
                      04641 
                      04642 
0000                  04643 modu:  
                      04644 #ifdef HLLMULTITASK
                      04645 #ifdef HLLGUARDhllblss 
0000   08??           04646  movf in_isr,f  
0001   1903           04647  btfsc STATUS,Z
                      04648  
                      04649 
                      04650 
0002   2???           04651  goto modu0
                      04652 
0003   ???? ????      04653  banksel mquot 
0005   01??           04654  clrf mquot
                      04655  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           04656  movwf mdiv
                      04657  POP
0009   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000A   0384               M  decf FSR,f 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B   00??           04658  movwf mterm
000C   08??           04659  movfw mdiv
000D   02??           04660  subwf mterm,f
000E   1C03           04661  btfss STATUS,C 
000F   2???           04662  goto $+3
0010   0A??           04663  incf mquot,f 
0011   2???           04664  goto $-4
0012   07??           04665  addwf mterm,w
                      04666  PUSH
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0015   0008           04667  return 
                      04668 
                      04669 
                      04670 
                      04671 #undefine mterm
                      04672 
                      04673 
                      04674 #undefine mdiv
                      04675 
                      04676 
                      04677 #undefine mquot
                      04678 
                      04679 
                      04680 #define mterm hllblss00+1
                      04681 
                      04682 
                      04683 #define mdiv hllblss01+1
                      04684 
                      04685 
                      04686 #define mquot hllblss02+1
                      04687 
                      04688 
0016                  04689 modu0:
                      04690 #endif
                      04691 #endif
                      04692 
0016   ???? ????      04693  banksel mquot 
0018   01??           04694  clrf mquot
                      04695  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   00??           04696  movwf mdiv
                      04697  POP
001C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001D   0384               M  decf FSR,f 
001E   00??           04698  movwf mterm
001F   08??           04699  movfw mdiv
0020   02??           04700  subwf mterm,f
0021   1C03           04701  btfss STATUS,C 
0022   2???           04702  goto $+3
0023   0A??           04703  incf mquot,f 
0024   2???           04704  goto $-4
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   07??           04705  addwf mterm,w
                      04706  PUSH
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0028   0008           04707  return 
                      04708 
                      04709 
                      04710 
                      04711 #undefine mterm
                      04712 
                      04713 
                      04714 #undefine mdiv
                      04715 
                      04716 
                      04717 #undefine mquot
                      04718 hllkrna05 CODE
                      04719 
                      04720 
                      04721 
                      04722 #define mterm hllblss00
                      04723 
                      04724 
                      04725 #define mdiv hllblss01
                      04726 
                      04727 
                      04728 #define mquot hllblss02
                      04729 
                      04730 
0000                  04731 divu:  
                      04732 #ifdef HLLMULTITASK
                      04733 #ifdef HLLGUARDhllblss 
0000   08??           04734  movf in_isr,f  
0001   1903           04735  btfsc STATUS,Z
                      04736  
                      04737 
                      04738 
0002   2???           04739  goto divu0
                      04740 
0003   ???? ????      04741  banksel mquot 
0005   01??           04742  clrf mquot
                      04743  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           04744  movwf mdiv
                      04745  POP
0009   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000A   0384               M  decf FSR,f 
000B   00??           04746  movwf mterm
000C   08??           04747  movfw mdiv
000D   02??           04748  subwf mterm,f
000E   1C03           04749  btfss STATUS,C 
000F   2???           04750  goto $+3
0010   0A??           04751  incf mquot,f 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011   2???           04752  goto $-4
0012   08??           04753  movfw mquot
                      04754  PUSH
0013   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0014   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0015   0008           04755  return 
                      04756 
                      04757 
                      04758 
                      04759 #undefine mterm
                      04760 
                      04761 
                      04762 #undefine mdiv
                      04763 
                      04764 
                      04765 #undefine mquot
                      04766 
                      04767 
                      04768 #define mterm hllblss00+1
                      04769 
                      04770 
                      04771 #define mdiv hllblss01+1
                      04772 
                      04773 
                      04774 #define mquot hllblss02+1
                      04775 
                      04776 
0016                  04777 divu0:
                      04778 #endif
                      04779 #endif
                      04780 
0016   ???? ????      04781  banksel mquot 
0018   01??           04782  clrf mquot
                      04783  POP
0019   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001A   0384               M  decf FSR,f 
001B   00??           04784  movwf mdiv
                      04785  POP
001C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001D   0384               M  decf FSR,f 
001E   00??           04786  movwf mterm
001F   08??           04787  movfw mdiv
0020   02??           04788  subwf mterm,f
0021   1C03           04789  btfss STATUS,C 
0022   2???           04790  goto $+3
0023   0A??           04791  incf mquot,f 
0024   2???           04792  goto $-4
0025   08??           04793  movfw mquot
                      04794  PUSH
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0028   0008           04795  return 
                      04796 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04797 
                      04798 
                      04799 #undefine mterm
                      04800 
                      04801 
                      04802 #undefine mdiv
                      04803 
                      04804 
                      04805 #undefine mquot
                      04806 hllkrna06 CODE
                      04807 
                      04808  
                      04809  
                      04810  
0000                  04811 getch:
0000   1283 1303      04812  banksel PIR1
0002                  04813 geth2: 
0002   1E8C           04814  btfss PIR1,RCIF
0003   2???           04815  goto geth2
0004   1283 1303      04816  banksel RCREG
0006   081A           04817  movf RCREG,w
                      04818  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           04819  return
                      04820  
                      04821 hllkrna07 CODE 
                      04822  
0000                  04823 eq: 
                      04824  POP 
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0600           04825  xorwf HLINDF,w
0003   3001           04826  movlw .1 
0004   1D03           04827  btfss STATUS,Z
0005   3000           04828  movlw .0 
0006   0384           04829  decf HLFSR,f 
                      04830  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           04831  return
                      04832  
                      04833  
                      04834  
                      04835 
                      04836 #define sstack0 softstack0 
                      04837 #define sstack1 softstack1 
                      04838 #define sstack2 softstack2 
                      04839 
                      04840 hllparmcore macro 
                      04841  movwf sstack2
                      04842  movfw HLFSR 
                      04843            
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04844                    
                      04845  movwf sstack0
                      04846  movfw HLINDF
                      04847  
                      04848  subwf sstack2,w
                      04849  movwf HLFSR 
                      04850  movfw HLINDF 
                      04851  
                      04852  movwf sstack1
                      04853  
                      04854  movfw sstack0
                      04855  movwf HLFSR 
                      04856  clrf sstack0
                      04857  movfw sstack1 
                      04858  movwf HLINDF
                      04859  
                      04860  movfw sstack2
                      04861  pagesel kpush
                      04862  goto kpush 
                      04863  endm
                      04864 
                      04865  
                      04866 hllkrna08 CODE  
0000                  04867 parm:
                      04868  KPOP 
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
                      04869  
                      04870 #ifdef HLLMULTITASK 
0020   08??           04871  movf in_isr,f 
0021   1D03           04872  btfss STATUS,Z
0022   2???           04873  goto parm4
                      04874  hllparmcore
0023   00??               M  movwf sstack2
0024   0804               M  movfw HLFSR 
                          M            
                          M                    
0025   00??               M  movwf sstack0
0026   0800               M  movfw HLINDF
                          M  
0027   02??               M  subwf sstack2,w
0028   0084               M  movwf HLFSR 
0029   0800               M  movfw HLINDF 
                          M  
002A   00??               M  movwf sstack1
                          M  
002B   08??               M  movfw sstack0
002C   0084               M  movwf HLFSR 
002D   01??               M  clrf sstack0
002E   08??               M  movfw sstack1 
002F   0080               M  movwf HLINDF
                          M  
0030   08??               M  movfw sstack2
0031   ????               M  pagesel kpush
0032   2???               M  goto kpush 
                      04875 #undefine sstack0 
                      04876 #undefine sstack1
                      04877 #undefine sstack2 
                      04878 #define sstack0 softstack0+1
                      04879 #define sstack1 softstack1+1
                      04880 #define sstack2 softstack2+1
0033                  04881 parm4:
                      04882 #endif 
                      04883  hllparmcore
0033   00??               M  movwf sstack2
0034   0804               M  movfw HLFSR 
                          M            
                          M                    
0035   00??               M  movwf sstack0
0036   0800               M  movfw HLINDF
                          M  
0037   02??               M  subwf sstack2,w
0038   0084               M  movwf HLFSR 
0039   0800               M  movfw HLINDF 
                          M  
003A   00??               M  movwf sstack1
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M  
003B   08??               M  movfw sstack0
003C   0084               M  movwf HLFSR 
003D   01??               M  clrf sstack0
003E   08??               M  movfw sstack1 
003F   0080               M  movwf HLINDF
                          M  
0040   08??               M  movfw sstack2
0041   ????               M  pagesel kpush
0042   2???               M  goto kpush 
                      04884 #undefine sstack0 
                      04885 #undefine sstack1
                      04886 #undefine sstack2 
                      04887  
                      04888 hllkrna09 CODE  
0000                  04889 kpop: 
                      04890  KPOP
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
0020   0008           04891  return 
                      04892  
                      04893 hllkrna10 CODE   
0000                  04894 kpush: 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04895  KPUSH
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0E
0004   00??               M  movwf softstack1+1 ;softstack1 holds parm value being pushed
0005   0804               M  movfw FSR  
0006   00??               M  movwf softstack0+1  ;softstack0 holds FSR
0007   08??               M  movfw alt_fsr 
0008   0084               M  movwf FSR 
0009   08??               M  movfw softstack1+1
000A   0A??               M  incf alt_fsr,f 
000B   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
000C   0080               M  movwf INDF 
000D   08??               M  movfw softstack0+1
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1 
0010   2???               M  goto $+0D
0011   00??               M  movwf softstack1 ;softstack1 holds parm value being pushed
0012   0804               M  movfw FSR  
0013   00??               M  movwf softstack0  ;softstack0 holds FSR
0014   08??               M  movfw alt_fsr 
0015   0084               M  movwf FSR 
0016   08??               M  movfw softstack1
0017   0A??               M  incf alt_fsr,f 
0018   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
0019   0080               M  movwf INDF 
001A   08??               M  movfw softstack0
001B   0084               M  movwf FSR 
001C   01??               M  clrf softstack0
001D   ????               M  bankisel stack
001E   0008           04896  return
                      04897 
                      04898 hllkrna11 CODE   
0000                  04899 dispose:
                      04900  DISCARD
0000   0384               M  decf FSR,f 
0001   0008           04901  return 
                      04902  
                      04903  
                      04904 
                      04905 
                      04906 
                      04907 
                      04908 
                      04909  
                      04910  
                      04911 
                      04912  
                      04913 hlog1b CODE
                      04914 
                      04915 
                      04916 #define margp2 hllblss00
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04917 
                      04918 
0000                  04919 setbit:  
                      04920 #ifdef HLLMULTITASK
                      04921 #ifdef HLLGUARDhllblss 
0000   08??           04922  movf in_isr,f  
0001   1903           04923  btfsc STATUS,Z
                      04924  
                      04925 
                      04926 
0002   2???           04927  goto setbit0
                      04928 
                      04929  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   ???? ????      04930  banksel margp2
0007   00??           04931  movwf  margp2
                      04932  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   3A00           04933  xorlw .0
000B   1D03           04934  btfss STATUS,Z
000C   2???           04935  goto tcf00h
                      04936  
000D   08??           04937  movfw  margp2
000E   3801           04938  iorlw .1
000F   2???           04939  goto tcf99h
0010                  04940 tcf00h: 
                      04941  
0010   3A01           04942  xorlw .1
0011   1D03           04943  btfss STATUS,Z
0012   2???           04944  goto tcf01h
                      04945  
0013   08??           04946  movfw  margp2
0014   3802           04947  iorlw .2
0015   2???           04948  goto tcf99h
0016                  04949 tcf01h: 
0016   3A01           04950  xorlw .1
0017   3A02           04951  xorlw .2
0018   1D03           04952  btfss STATUS,Z
0019   2???           04953  goto tcf02h
                      04954  
001A   08??           04955  movfw margp2
001B   3804           04956  iorlw .4
001C   2???           04957  goto tcf99h
001D                  04958 tcf02h: 
001D   3A02           04959  xorlw .2
001E   3A03           04960  xorlw .3
001F   1D03           04961  btfss STATUS,Z
0020   2???           04962  goto tcf03h
                      04963  
0021   08??           04964  movfw margp2
0022   3808           04965  iorlw .8
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0023   2???           04966  goto tcf99h
0024                  04967 tcf03h: 
0024   3A03           04968  xorlw .3
0025   3A04           04969  xorlw .4
0026   1D03           04970  btfss STATUS,Z
0027   2???           04971  goto tcf04h
                      04972  
0028   08??           04973  movfw margp2
0029   3810           04974  iorlw .16
002A   2???           04975  goto tcf99h
002B                  04976 tcf04h: 
002B   3A04           04977  xorlw .4
002C   3A05           04978  xorlw .5
002D   1D03           04979  btfss STATUS,Z
002E   2???           04980  goto tcf05h
                      04981  
002F   08??           04982  movfw margp2
0030   3820           04983  iorlw .32
0031   2???           04984  goto tcf99h
0032                  04985 tcf05h: 
0032   3A05           04986  xorlw .5
0033   3A06           04987  xorlw .6
0034   1D03           04988  btfss STATUS,Z
0035   2???           04989  goto tcf07h
                      04990  
0036   08??           04991  movfw margp2
0037   3840           04992  iorlw .64
0038   2???           04993  goto tcf99h
0039                  04994 tcf07h: 
                      04995  
0039   08??           04996  movfw margp2
003A   3880           04997  iorlw .128 
003B                  04998 tcf99h:  
                      04999  PUSH 
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003D   0008           05000  return
                      05001 
                      05002 
                      05003 
                      05004 
                      05005 #undefine margp2
                      05006 
                      05007 
                      05008 #define margp2 hllblss00+1
                      05009 
                      05010 
003E                  05011 setbit0:
                      05012 #endif
                      05013 #endif
                      05014 
                      05015  POP
003E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003F   0384               M  decf FSR,f 
0040   ???? ????      05016  banksel margp2
0042   00??           05017  movwf  margp2
                      05018  POP
0043   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0044   0384               M  decf FSR,f 
0045   3A00           05019  xorlw .0
0046   1D03           05020  btfss STATUS,Z
0047   2???           05021  goto hllTAAAA
                      05022  
0048   08??           05023  movfw  margp2
0049   3801           05024  iorlw .1
004A   2???           05025  goto hllABAAA
004B                  05026 hllTAAAA: 
                      05027  
004B   3A01           05028  xorlw .1
004C   1D03           05029  btfss STATUS,Z
004D   2???           05030  goto hllUAAAA
                      05031  
004E   08??           05032  movfw  margp2
004F   3802           05033  iorlw .2
0050   2???           05034  goto hllABAAA
0051                  05035 hllUAAAA: 
0051   3A01           05036  xorlw .1
0052   3A02           05037  xorlw .2
0053   1D03           05038  btfss STATUS,Z
0054   2???           05039  goto hllVAAAA
                      05040  
0055   08??           05041  movfw margp2
0056   3804           05042  iorlw .4
0057   2???           05043  goto hllABAAA
0058                  05044 hllVAAAA: 
0058   3A02           05045  xorlw .2
0059   3A03           05046  xorlw .3
005A   1D03           05047  btfss STATUS,Z
005B   2???           05048  goto hllWAAAA
                      05049  
005C   08??           05050  movfw margp2
005D   3808           05051  iorlw .8
005E   2???           05052  goto hllABAAA
005F                  05053 hllWAAAA: 
005F   3A03           05054  xorlw .3
0060   3A04           05055  xorlw .4
0061   1D03           05056  btfss STATUS,Z
0062   2???           05057  goto hllXAAAA
                      05058  
0063   08??           05059  movfw margp2
0064   3810           05060  iorlw .16
0065   2???           05061  goto hllABAAA
0066                  05062 hllXAAAA: 
0066   3A04           05063  xorlw .4
0067   3A05           05064  xorlw .5
0068   1D03           05065  btfss STATUS,Z
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0069   2???           05066  goto hllYAAAA
                      05067  
006A   08??           05068  movfw margp2
006B   3820           05069  iorlw .32
006C   2???           05070  goto hllABAAA
006D                  05071 hllYAAAA: 
006D   3A05           05072  xorlw .5
006E   3A06           05073  xorlw .6
006F   1D03           05074  btfss STATUS,Z
0070   2???           05075  goto hllZAAAA
                      05076  
0071   08??           05077  movfw margp2
0072   3840           05078  iorlw .64
0073   2???           05079  goto hllABAAA
0074                  05080 hllZAAAA: 
                      05081  
0074   08??           05082  movfw margp2
0075   3880           05083  iorlw .128 
0076                  05084 hllABAAA:  
                      05085  PUSH 
0076   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0077   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0078   0008           05086  return
                      05087 
                      05088 
                      05089 
                      05090 
                      05091 #undefine margp2
                      05092 
                      05093 
                      05094 
                      05095 
                      05096 
                      05097 
                      05098 sfpu UDATA
                      05099  
                      05100  
                      05101  
                      05102  
0000                  05103 sfploc00 res .1
0001                  05104 sfpaux00 res .1
                      05105 
                      05106 #ifdef HLLMULTITASK   
                      05107 #ifdef HLLGUARDsfploc
                      05108 sfploc00isr res .1
                      05109 sfpaux00isr res .1
                      05110 #endif
                      05111 #endif
                      05112 
0002                  05113 sfploc01 res .1
0003                  05114 sfpaux01 res .1
                      05115 
                      05116 #ifdef HLLMULTITASK
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05117 #ifdef HLLGUARDsfploc
                      05118 sfploc01isr res .1
                      05119 sfpaux01isr res .1
                      05120 #endif
                      05121 #endif
                      05122 
                      05123 
0004                  05124 sfploc02 res .1
0005                  05125 sfpaux02 res .1
                      05126 
                      05127 #ifdef HLLMULTITASK
                      05128 #ifdef HLLGUARDsfploc
                      05129 sfploc02isr res .1
                      05130 sfpaux02isr res .1
                      05131 #endif
                      05132 #endif
                      05133 
                      05134 
0006                  05135 sfploc03 res .1
0007                  05136 sfpaux03 res .1
                      05137 
                      05138 #ifdef HLLMULTITASK
                      05139 #ifdef HLLGUARDsfploc
                      05140 sfploc03isr res .1
                      05141 sfpaux03isr res .1
                      05142 #endif
                      05143 #endif
                      05144 
                      05145 
0008                  05146 sfploc04 res .1
                      05147 
                      05148 #ifdef HLLMULTITASK
                      05149 #ifdef HLLGUARDsfploc
                      05150 sfploc04isr res .1
                      05151 #endif
                      05152 #endif
                      05153 
                      05154 
0009                  05155 sfploc05 res .1
                      05156 
                      05157 #ifdef HLLMULTITASK
                      05158 #ifdef HLLGUARDsfploc
                      05159 sfploc05isr res .1
                      05160 #endif
                      05161 #endif
                      05162 
                      05163 
000A                  05164 sfploc06 res .1
                      05165 
                      05166 #ifdef HLLMULTITASK
                      05167 #ifdef HLLGUARDsfploc
                      05168 sfploc06isr res .1
                      05169 #endif
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05170 #endif
                      05171 
                      05172 
000B                  05173 sfploc07 res .1
                      05174 
                      05175 #ifdef HLLMULTITASK
                      05176 #ifdef HLLGUARDsfploc
                      05177 sfploc07isr res .1
                      05178 #endif
                      05179 #endif
                      05180 
                      05181 
000C                  05182 sfploc08 res .1
                      05183 
                      05184 #ifdef HLLMULTITASK
                      05185 #ifdef HLLGUARDsfploc
                      05186 sfploc08isr res .1
                      05187 #endif
                      05188 #endif
                      05189 
                      05190 
000D                  05191 sfploc09 res .1
                      05192 
                      05193 #ifdef HLLMULTITASK
                      05194 #ifdef HLLGUARDsfploc
                      05195 sfploc09isr res .1
                      05196 #endif
                      05197 #endif
                      05198 
                      05199 
000E                  05200 sfploc10 res .1
                      05201 
                      05202 #ifdef HLLMULTITASK
                      05203 #ifdef HLLGUARDsfploc
                      05204 sfploc10isr res .1
                      05205 #endif
                      05206 #endif
                      05207 
                      05208 
000F                  05209 sfploc11 res .1
                      05210 
                      05211 #ifdef HLLMULTITASK
                      05212 #ifdef HLLGUARDsfploc
                      05213 sfploc11isr res .1
                      05214 #endif
                      05215 #endif
                      05216 
                      05217 
0010                  05218 sfploc12 res .1
                      05219 
                      05220 #ifdef HLLMULTITASK
                      05221 #ifdef HLLGUARDsfploc
                      05222 sfploc12isr res .1
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05223 #endif
                      05224 #endif
                      05225 
                      05226 
0011                  05227 sfploc13 res .1
                      05228 
                      05229 #ifdef HLLMULTITASK
                      05230 #ifdef HLLGUARDsfploc
                      05231 sfploc13isr res .1
                      05232 #endif
                      05233 #endif
                      05234 
                      05235 
0012                  05236 sfploc14 res .1
                      05237 
                      05238 #ifdef HLLMULTITASK
                      05239 #ifdef HLLGUARDsfploc
                      05240 sfploc14isr res .1
                      05241 #endif
                      05242 #endif
                      05243 
                      05244 
0013                  05245 sfploc15 res .1
                      05246 
                      05247 #ifdef HLLMULTITASK
                      05248 #ifdef HLLGUARDsfploc
                      05249 sfploc15isr res .1
                      05250 #endif
                      05251 #endif
                      05252 
                      05253 
0014                  05254 sfploc16 res .1
                      05255 
                      05256 #ifdef HLLMULTITASK
                      05257 #ifdef HLLGUARDsfploc
                      05258 sfploc16isr res .1
                      05259 #endif
                      05260 #endif
                      05261 
                      05262 
0015                  05263 sfploc17 res .1 
                      05264 
                      05265 #ifdef HLLMULTITASK
                      05266 #ifdef HLLGUARDsfploc
                      05267 sfploc17isr res .1
                      05268 #endif
                      05269 #endif
                      05270 
                      05271 
                      05272  
                      05273 
                      05274 
                      05275 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05276 
                      05277 
                      05278 
                      05279 
                      05280 
                      05281  
                      05282  
                      05283 
                      05284 sfp_add CODE
                      05285 
                      05286 
                      05287 
                      05288 
                      05289 #define mout_hi sfploc00
                      05290 
                      05291 
                      05292 #define big_c sfploc01
                      05293 
                      05294 
                      05295 #define min2_lower sfploc02
                      05296 
                      05297 
                      05298 #define minres sfploc03
                      05299 
                      05300 
                      05301 #define fulmin2H sfploc04
                      05302 
                      05303 
                      05304 #define fulminH sfploc05
                      05305 
                      05306 
                      05307 #define min_lower sfploc06
                      05308 
                      05309 
                      05310 #define rev sfploc07
                      05311 
                      05312 
                      05313 #define fulmin2 sfploc08
                      05314 
                      05315 
                      05316 #define fulmin sfploc09
                      05317 
                      05318 
                      05319 #define multiplier sfploc10
                      05320 
                      05321 
                      05322 #define mout sfploc11
                      05323 
                      05324 
                      05325 #define util sfploc12
                      05326 
                      05327 
                      05328 #define neg sfploc13
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05329 
                      05330 
                      05331 #define ein2 sfploc14
                      05332 
                      05333 
                      05334 #define min2 sfploc15
                      05335 
                      05336 
                      05337 #define ein1 sfploc16
                      05338 
                      05339 
                      05340 #define min sfploc17
                      05341 
                      05342 
0000                  05343 addf:  
                      05344 #ifdef HLLMULTITASK
                      05345 #ifdef HLLGUARDsfploc 
                      05346  movf in_isr,f  
                      05347  btfsc STATUS,Z
                      05348  
                      05349 
                      05350 
                      05351  goto addf0
                      05352 
                      05353 
                      05354  
                      05355  
                      05356  
                      05357  
                      05358  
                      05359  
                      05360  
                      05361  
                      05362  POP
                      05363  banksel min
                      05364  movwf ein2 
                      05365  POP
                      05366  banksel min
                      05367  movwf min2 
                      05368 
                      05369  POP
                      05370  banksel min
                      05371  movwf ein1 
                      05372 
                      05373  POP
                      05374  banksel min
                      05375  movwf min 
                      05376  
                      05377  
                      05378  
                      05379  
                      05380  bcf minres,0 
                      05381  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05382  
                      05383  
                      05384  clrf mout 
                      05385  
                      05386  
                      05387  
                      05388  
                      05389  
                      05390  clrf neg
                      05391  btfsc min,7
                      05392  bsf neg,0
                      05393  
                      05394  
                      05395  
                      05396  btfsc min2,7
                      05397  bsf neg,1
                      05398  
                      05399 
                      05400 
                      05401 
                      05402  btfsc ein2,7  
                      05403  goto yzpt44
                      05404  
                      05405  btfss ein1,7
                      05406  goto yzpt65
                      05407  
                      05408  goto ein_lt_ein2
                      05409 yzpt65: 
                      05410  
                      05411  movfw ein1
                      05412  subwf ein2,w    
                      05413  btfss STATUS,C 
                      05414  goto ein_lt_ein1  
                      05415 lz_ein15:
                      05416  goto ein_lt_ein2  
                      05417 yzpt44:   
                      05418  
                      05419  
                      05420  btfsc ein1,7
                      05421  goto yzpt65  
                      05422 ein_lt_ein1:  
                      05423  
                      05424  
                      05425 
                      05426 
                      05427  movf ein2,w
                      05428  xorwf ein1,f
                      05429 
                      05430  movf ein1,w
                      05431  xorwf ein2,f
                      05432 
                      05433  movf ein2,w
                      05434  xorwf ein1,f
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05435 
                      05436 
                      05437  movf min2,w
                      05438  xorwf min,f
                      05439 
                      05440  movf min,w
                      05441  xorwf min2,f
                      05442 
                      05443  movf min2,w
                      05444  xorwf min,f
                      05445  
                      05446  
                      05447  
                      05448  bsf rev,0 
                      05449  
                      05450  
                      05451  
                      05452  goto ein_lt_ein2_done 
                      05453 ein_lt_ein2: 
                      05454  
                      05455  
                      05456  
                      05457  clrf rev 
                      05458 ein_lt_ein2_done: 
                      05459  
                      05460  
                      05461  
                      05462  
                      05463  movfw min 
                      05464  andlw .127 
                      05465  movwf min 
                      05466  
                      05467  
                      05468  
                      05469  movfw min2 
                      05470  andlw .127 
                      05471  movwf min2 
                      05472  
                      05473  
                      05474  
                      05475  clrf fulminH 
                      05476  movfw min 
                      05477  addlw .128 
                      05478  btfsc STATUS,C 
                      05479  incf fulminH,f 
                      05480  
                      05481  
                      05482  movwf fulmin 
                      05483  
                      05484  
                      05485  
                      05486  clrf fulmin2H 
                      05487  movfw min2 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05488  addlw .128 
                      05489  btfsc STATUS,C 
                      05490  incf fulmin2H,f 
                      05491  
                      05492  movwf fulmin2 
                      05493  
                      05494         
                      05495         
                      05496         
                      05497         
                      05498         
                      05499 
                      05500 
                      05501  clrf min_lower
                      05502 
                      05503  clrf min2_lower
                      05504  
                      05505 whi77:
                      05506 
                      05507 
                      05508  movfw ein1 
                      05509  xorwf ein2,w 
                      05510  btfsc STATUS,Z 
                      05511  goto eein2outw  
                      05512  
                      05513 
                      05514 
                      05515  bcf STATUS,C
                      05516  rrf min_lower,f
                      05517 
                      05518 
                      05519 
                      05520  bcf STATUS,C
                      05521  rrf fulmin,f
                      05522 
                      05523 
                      05524  btfss STATUS,C
                      05525  goto nocar001
                      05526  
                      05527 
                      05528  bsf min_lower,7
                      05529 nocar001:
                      05530 
                      05531 
                      05532 
                      05533 
                      05534  incf ein1,f
                      05535 
                      05536 
                      05537  goto whi77
                      05538  
                      05539 
                      05540 eein2outw:      
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05541 
                      05542  
                      05543  
                      05544  
                      05545  
                      05546  
                      05547  btfss rev,0 
                      05548  goto if_2_done 
                      05549 
                      05550 
                      05551 
                      05552  movf fulmin2,w
                      05553  xorwf fulmin,f
                      05554 
                      05555  movf fulmin,w
                      05556  xorwf fulmin2,f
                      05557 
                      05558  movf fulmin2,w
                      05559  xorwf fulmin,f 
                      05560  
                      05561  
                      05562  movfw min_lower 
                      05563  movwf min2_lower 
                      05564  
                      05565  clrf min_lower
                      05566  
                      05567  
                      05568  
                      05569  
                      05570  
                      05571 if_2_done: 
                      05572 
                      05573  banksel min_lower
                      05574 
                      05575  
                      05576  
                      05577 
                      05578 nrev0:  
                      05579 
                      05580  btfss neg,0
                      05581  goto nextspeci0
                      05582  
                      05583 
                      05584  btfss neg,1
                      05585  goto nextspeci0
                      05586 
                      05587 
                      05588 
                      05589 
                      05590  bsf minres,0
                      05591 
                      05592  goto nextspeci2
                      05593 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05594  
                      05595  
                      05596  
                      05597  
                      05598 nextspeci0:
                      05599  
                      05600 
                      05601  btfss neg,0
                      05602  goto nextspeci1 
                      05603 
                      05604  
                      05605 rrrout0:
                      05606 
                      05607         
                      05608         
                      05609         
                      05610  movfw fulmin 
                      05611  subwf fulmin2,w 
                      05612  movwf mout 
                      05613  
                      05614  
                      05615  btfsc STATUS,C
                      05616  goto nc11rr            
                      05617                 
                      05618         
                      05619  bsf minres,0   
                      05620         
                      05621         
                      05622  goto rrrout1   
                      05623         
                      05624 nc11rr:
                      05625 
                      05626         
                      05627  movf mout,f
                      05628  btfsc STATUS,Z
                      05629  goto specidone0        
                      05630 mouty:
                      05631 
                      05632         
                      05633  btfsc mout,7   
                      05634  goto nn91   
                      05635         
                      05636         
                      05637     
                      05638  bcf STATUS,C
                      05639  rlf mout,f
                      05640         
                      05641         
                      05642  btfss min_lower,7      
                      05643  goto yym43   
                      05644 
                      05645  
                      05646  decf mout,f    
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05647 
                      05648         
                      05649  movlw .255
                      05650  xorwf mout,w
                      05651  btfss STATUS,Z
                      05652  goto yym43     
                      05653         
                      05654      
                      05655  bsf minres,0
                      05656  
                      05657          
                      05658  goto rrrout1
                      05659          
                      05660 
                      05661 yym43:
                      05662 
                      05663    
                      05664  bcf STATUS,C
                      05665  rlf min_lower,f 
                      05666 
                      05667         
                      05668  decf ein1,f    
                      05669 
                      05670         
                      05671  goto mouty
                      05672 
                      05673 nn91:
                      05674         
                      05675  btfss min_lower,7      
                      05676  goto trup5   
                      05677                 
                      05678         
                      05679  decf mout,f
                      05680 
                      05681         
                      05682  movlw .255
                      05683  xorwf mout,w
                      05684  btfss STATUS,Z
                      05685  goto fltu54    
                      05686                 
                      05687      
                      05688  bsf minres,0    
                      05689          
                      05690          
                      05691  goto rrrout1    
                      05692          
                      05693          
                      05694 fltu54:
                      05695         
                      05696  movlw .127
                      05697  xorwf mout,w
                      05698  btfss STATUS,Z
                      05699  goto trup5     
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05700         
                      05701         
                      05702         
                      05703         
                      05704  bcf STATUS,C
                      05705  rlf mout,f
                      05706 
                      05707         
                      05708  decf ein1,f    
                      05709         
                      05710         
                      05711  btfsc min_lower,6
                      05712  goto trup5 
                      05713         
                      05714         
                      05715  incf mout,f    
                      05716         
                      05717 trup5:
                      05718         
                      05719  goto specidone0
                      05720 nextspeci1:
                      05721  
                      05722 
                      05723         
                      05724  btfss neg,1
                      05725  goto nextspeci2 
                      05726  
                      05727         
                      05728 rrrout1:
                      05729 
                      05730         
                      05731  movfw fulmin2
                      05732  subwf fulmin,w 
                      05733  movwf mout 
                      05734 
                      05735  
                      05736  btfsc STATUS,C
                      05737  goto rmxd3             
                      05738         
                      05739         
                      05740         
                      05741         
                      05742  bsf minres,0
                      05743         
                      05744         
                      05745  goto rrrout0   
                      05746 
                      05747 rmxd3:
                      05748 
                      05749         
                      05750  movf mout,f 
                      05751  btfsc STATUS,Z 
                      05752  goto specidone0 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05753         
                      05754 moutx:
                      05755 
                      05756         
                      05757  btfsc mout,7
                      05758  goto nn91b
                      05759  
                      05760         
                      05761         
                      05762     
                      05763  bcf STATUS,C
                      05764  rlf mout,f 
                      05765         
                      05766         
                      05767  btfss min2_lower,7
                      05768  goto spyr5
                      05769 
                      05770         
                      05771         
                      05772  decf mout,f    
                      05773         
                      05774         
                      05775  movlw .255
                      05776  xorwf mout,w
                      05777  btfss STATUS,Z
                      05778  goto spyr5     
                      05779         
                      05780 
                      05781  bsf minres,0
                      05782         
                      05783 
                      05784  goto rrrout0
                      05785         
                      05786 spyr5:
                      05787 
                      05788  
                      05789  bcf STATUS,C
                      05790  rlf min2_lower,f
                      05791  
                      05792 
                      05793  decf ein1,f
                      05794    
                      05795         
                      05796  goto moutx     
                      05797 nn91b:
                      05798 
                      05799         
                      05800  btfss min2_lower,7
                      05801  goto cxaa
                      05802 
                      05803         
                      05804  decf mout,f    
                      05805         
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05806         
                      05807  movlw .255
                      05808  xorwf mout,w
                      05809  btfss STATUS,Z
                      05810  goto iwrtt     
                      05811                 
                      05812         
                      05813  bsf minres,0
                      05814  
                      05815         
                      05816  goto rrrout0
                      05817 iwrtt:
                      05818 
                      05819 
                      05820         
                      05821  movlw .127
                      05822  xorwf mout,w
                      05823  btfss STATUS,Z
                      05824  goto cxaa      
                      05825                 
                      05826         
                      05827         
                      05828         
                      05829  bcf STATUS,C
                      05830  rlf mout,f 
                      05831 
                      05832         
                      05833  decf ein1,f    
                      05834 
                      05835         
                      05836  btfsc min2_lower,6
                      05837  goto cxaa 
                      05838  
                      05839         
                      05840         
                      05841  incf mout,f    
                      05842         
                      05843 cxaa:
                      05844 
                      05845         
                      05846  goto specidone0
                      05847 
                      05848 tpc0lea:
                      05849          
                      05850  movfw fulmin
                      05851  subwf fulmin2,w 
                      05852  movwf mout 
                      05853          
                      05854          
                      05855          
                      05856      
                      05857  bsf minres,0    
                      05858         
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05859  goto specidone0
                      05860 
                      05861         
                      05862 nextspeci2:
                      05863 
                      05864 
                      05865  
                      05866 
                      05867         
                      05868  clrf mout_hi
                      05869         
                      05870         
                      05871         
                      05872  movf fulmin,w
                      05873  addwf fulmin2,w
                      05874  movwf mout
                      05875         
                      05876         
                      05877 
                      05878         
                      05879  btfss STATUS,C 
                      05880  goto cxab                      
                      05881         
                      05882         
                      05883  incf mout_hi,f 
                      05884         
                      05885 cxab:
                      05886 
                      05887 
                      05888 
                      05889         
                      05890  movf min_lower,w
                      05891  addwf min2_lower,w
                      05892  btfsc STATUS,C
                      05893  goto bihhg   
                      05894  
                      05895 
                      05896         
                      05897         
                      05898  andlw .128     
                      05899  btfss STATUS,Z
                      05900  goto bihhg       
                      05901         
                      05902         
                      05903  goto bihh0     
                      05904         
                      05905 bihhg:
                      05906 
                      05907 
                      05908         
                      05909  incf mout,f    
                      05910         
                      05911         
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 154


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05912  movf mout,f
                      05913  btfss STATUS,Z
                      05914  goto bihh0 
                      05915 
                      05916         
                      05917  incf mout_hi,f
                      05918 
                      05919 bihh0:
                      05920         
                      05921  movf mout_hi,f
                      05922  btfsc STATUS,Z
                      05923  goto specidone0 
                      05924 
                      05925         
                      05926         
                      05927         
                      05928         
                      05929  clrf big_c
                      05930  bcf STATUS,C
                      05931  rrf fulmin,f
                      05932  btfsc STATUS,C
                      05933  bsf big_c,0
                      05934         
                      05935         
                      05936  bcf STATUS,C
                      05937  rrf min_lower,f
                      05938 
                      05939         
                      05940         
                      05941  btfss big_c,0
                      05942  goto ddnyy
                      05943         
                      05944         
                      05945         
                      05946  bsf min_lower,7        
                      05947         
                      05948 ddnyy:
                      05949 
                      05950         
                      05951         
                      05952  clrf big_c
                      05953  bcf STATUS,C
                      05954  rrf fulmin2,f
                      05955  btfsc STATUS,C
                      05956  bsf big_c,0
                      05957         
                      05958         
                      05959         
                      05960         
                      05961  bcf STATUS,C
                      05962  rrf min2_lower,f
                      05963         
                      05964         
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 155


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05965         
                      05966  btfss big_c,0
                      05967  goto ddnzz
                      05968 
                      05969         
                      05970         
                      05971         
                      05972  bsf min_lower,7                
                      05973         
                      05974 ddnzz:
                      05975 
                      05976         
                      05977  incf ein1,f    
                      05978         
                      05979         
                      05980  goto nextspeci2
                      05981 
                      05982 
                      05983 specidone0:
                      05984 
                      05985  movfw mout 
                      05986  
                      05987  
                      05988  btfss STATUS,Z 
                      05989  goto nomoutzeer 
                      05990  
                      05991  
                      05992  
                      05993  movlw .0 
                      05994 
                      05995  PUSH
                      05996  
                      05997  
                      05998  
                      05999  movlw 0x80 
                      06000  PUSH
                      06001  
                      06002  
                      06003  
                      06004  goto re455tu
                      06005  
                      06006  
                      06007  
                      06008 nomoutzeer: 
                      06009  
                      06010  
                      06011  
                      06012  
                      06013  movfw mout
                      06014  addlw -.128 
                      06015  movwf mout 
                      06016 
                      06017  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 156


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06018  
                      06019  
                      06020  btfsc minres,0 
                      06021  bsf mout,7
                      06022  
                      06023  movfw mout 
                      06024  PUSH
                      06025  
                      06026  
                      06027  
                      06028  banksel min
                      06029  movfw ein1 
                      06030 
                      06031  PUSH
                      06032  
                      06033 re455tu:
                      06034  
                      06035  return 
                      06036 
                      06037  
                      06038 
                      06039 
                      06040 #undefine mout_hi
                      06041 
                      06042 
                      06043 #undefine big_c
                      06044 
                      06045 
                      06046 #undefine min2_lower
                      06047 
                      06048 
                      06049 #undefine minres
                      06050 
                      06051 
                      06052 #undefine fulmin2H
                      06053 
                      06054 
                      06055 #undefine fulminH
                      06056 
                      06057 
                      06058 #undefine min_lower
                      06059 
                      06060 
                      06061 #undefine rev
                      06062 
                      06063 
                      06064 #undefine fulmin2
                      06065 
                      06066 
                      06067 #undefine fulmin
                      06068 
                      06069 
                      06070 #undefine multiplier
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 157


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06071 
                      06072 
                      06073 #undefine mout
                      06074 
                      06075 
                      06076 #undefine util
                      06077 
                      06078 
                      06079 #undefine neg
                      06080 
                      06081 
                      06082 #undefine ein2
                      06083 
                      06084 
                      06085 #undefine min2
                      06086 
                      06087 
                      06088 #undefine ein1
                      06089 
                      06090 
                      06091 #undefine min
                      06092 
                      06093 
                      06094 #define mout_hi sfploc00+1
                      06095 
                      06096 
                      06097 #define big_c sfploc01+1
                      06098 
                      06099 
                      06100 #define min2_lower sfploc02+1
                      06101 
                      06102 
                      06103 #define minres sfploc03+1
                      06104 
                      06105 
                      06106 #define fulmin2H sfploc04+1
                      06107 
                      06108 
                      06109 #define fulminH sfploc05+1
                      06110 
                      06111 
                      06112 #define min_lower sfploc06+1
                      06113 
                      06114 
                      06115 #define rev sfploc07+1
                      06116 
                      06117 
                      06118 #define fulmin2 sfploc08+1
                      06119 
                      06120 
                      06121 #define fulmin sfploc09+1
                      06122 
                      06123 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 158


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06124 #define multiplier sfploc10+1
                      06125 
                      06126 
                      06127 #define mout sfploc11+1
                      06128 
                      06129 
                      06130 #define util sfploc12+1
                      06131 
                      06132 
                      06133 #define neg sfploc13+1
                      06134 
                      06135 
                      06136 #define ein2 sfploc14+1
                      06137 
                      06138 
                      06139 #define min2 sfploc15+1
                      06140 
                      06141 
                      06142 #define ein1 sfploc16+1
                      06143 
                      06144 
                      06145 #define min sfploc17+1
                      06146 
                      06147 
                      06148 addf0:
                      06149 #endif
                      06150 #endif
                      06151 
                      06152 
                      06153  
                      06154  
                      06155  
                      06156  
                      06157  
                      06158  
                      06159  
                      06160  
                      06161  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      06162  banksel min
0004   00??           06163  movwf ein2 
                      06164  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   ???? ????      06165  banksel min
0009   00??           06166  movwf min2 
                      06167 
                      06168  POP
000A   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000B   0384               M  decf FSR,f 
000C   ???? ????      06169  banksel min
000E   00??           06170  movwf ein1 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 159


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06171 
                      06172  POP
000F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0010   0384               M  decf FSR,f 
0011   ???? ????      06173  banksel min
0013   00??           06174  movwf min 
                      06175  
                      06176  
                      06177  
                      06178  
0014   1000           06179  bcf minres,0 
                      06180  
                      06181  
                      06182  
0015   01??           06183  clrf mout 
                      06184  
                      06185  
                      06186  
                      06187  
                      06188  
0016   01??           06189  clrf neg
0017   1B80           06190  btfsc min,7
0018   1400           06191  bsf neg,0
                      06192  
                      06193  
                      06194  
0019   1B80           06195  btfsc min2,7
001A   1480           06196  bsf neg,1
                      06197  
                      06198 
                      06199 
                      06200 
001B   1B80           06201  btfsc ein2,7  
001C   2???           06202  goto hllDBAAA
                      06203  
001D   1F80           06204  btfss ein1,7
001E   2???           06205  goto hllBBAAA
                      06206  
001F   2???           06207  goto hllFBAAA
0020                  06208 hllBBAAA: 
                      06209  
0020   08??           06210  movfw ein1
0021   02??           06211  subwf ein2,w    
0022   1C03           06212  btfss STATUS,C 
0023   2???           06213  goto hllEBAAA  
0024                  06214 hllCBAAA:
0024   2???           06215  goto hllFBAAA  
0025                  06216 hllDBAAA:   
                      06217  
                      06218  
0025   1B80           06219  btfsc ein1,7
0026   2???           06220  goto hllBBAAA  
0027                  06221 hllEBAAA:  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 160


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06222  
                      06223  
                      06224 
                      06225 
0027   08??           06226  movf ein2,w
0028   06??           06227  xorwf ein1,f
                      06228 
0029   08??           06229  movf ein1,w
002A   06??           06230  xorwf ein2,f
                      06231 
002B   08??           06232  movf ein2,w
002C   06??           06233  xorwf ein1,f
                      06234 
                      06235 
002D   08??           06236  movf min2,w
002E   06??           06237  xorwf min,f
                      06238 
002F   08??           06239  movf min,w
0030   06??           06240  xorwf min2,f
                      06241 
0031   08??           06242  movf min2,w
0032   06??           06243  xorwf min,f
                      06244  
                      06245  
                      06246  
0033   1400           06247  bsf rev,0 
                      06248  
                      06249  
                      06250  
0034   2???           06251  goto hllFBAAA_done 
0035                  06252 hllFBAAA: 
                      06253  
                      06254  
                      06255  
0035   01??           06256  clrf rev 
0036                  06257 hllFBAAA_done: 
                      06258  
                      06259  
                      06260  
                      06261  
0036   08??           06262  movfw min 
0037   397F           06263  andlw .127 
0038   00??           06264  movwf min 
                      06265  
                      06266  
                      06267  
0039   08??           06268  movfw min2 
003A   397F           06269  andlw .127 
003B   00??           06270  movwf min2 
                      06271  
                      06272  
                      06273  
003C   01??           06274  clrf fulminH 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 161


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003D   08??           06275  movfw min 
003E   3E80           06276  addlw .128 
003F   1803           06277  btfsc STATUS,C 
0040   0A??           06278  incf fulminH,f 
                      06279  
                      06280  
0041   00??           06281  movwf fulmin 
                      06282  
                      06283  
                      06284  
0042   01??           06285  clrf fulmin2H 
0043   08??           06286  movfw min2 
0044   3E80           06287  addlw .128 
0045   1803           06288  btfsc STATUS,C 
0046   0A??           06289  incf fulmin2H,f 
                      06290  
0047   00??           06291  movwf fulmin2 
                      06292  
                      06293         
                      06294         
                      06295         
                      06296         
                      06297         
                      06298 
                      06299 
0048   01??           06300  clrf min_lower
                      06301 
0049   01??           06302  clrf min2_lower
                      06303  
004A                  06304 hllHBAAA:
                      06305 
                      06306 
004A   08??           06307  movfw ein1 
004B   06??           06308  xorwf ein2,w 
004C   1903           06309  btfsc STATUS,Z 
004D   2???           06310  goto hllJBAAA  
                      06311  
                      06312 
                      06313 
004E   1003           06314  bcf STATUS,C
004F   0C??           06315  rrf min_lower,f
                      06316 
                      06317 
                      06318 
0050   1003           06319  bcf STATUS,C
0051   0C??           06320  rrf fulmin,f
                      06321 
                      06322 
0052   1C03           06323  btfss STATUS,C
0053   2???           06324  goto hllIBAAA
                      06325  
                      06326 
0054   1780           06327  bsf min_lower,7
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 162


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0055                  06328 hllIBAAA:
                      06329 
                      06330 
                      06331 
                      06332 
0055   0A??           06333  incf ein1,f
                      06334 
                      06335 
0056   2???           06336  goto hllHBAAA
                      06337  
                      06338 
0057                  06339 hllJBAAA:       
                      06340 
                      06341  
                      06342  
                      06343  
                      06344  
                      06345  
0057   1C00           06346  btfss rev,0 
0058   2???           06347  goto hllKBAAA 
                      06348 
                      06349 
                      06350 
0059   08??           06351  movf fulmin2,w
005A   06??           06352  xorwf fulmin,f
                      06353 
005B   08??           06354  movf fulmin,w
005C   06??           06355  xorwf fulmin2,f
                      06356 
005D   08??           06357  movf fulmin2,w
005E   06??           06358  xorwf fulmin,f 
                      06359  
                      06360  
005F   08??           06361  movfw min_lower 
0060   00??           06362  movwf min2_lower 
                      06363  
0061   01??           06364  clrf min_lower
                      06365  
                      06366  
                      06367  
                      06368  
                      06369  
0062                  06370 hllKBAAA: 
                      06371 
0062   ???? ????      06372  banksel min_lower
                      06373 
                      06374  
                      06375  
                      06376 
0064                  06377 hllLBAAA:       
                      06378 
0064   1C00           06379  btfss neg,0
0065   2???           06380  goto hllMBAAA
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 163


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06381  
                      06382 
0066   1C80           06383  btfss neg,1
0067   2???           06384  goto hllMBAAA
                      06385 
                      06386 
                      06387 
                      06388 
0068   1400           06389  bsf minres,0
                      06390 
0069   2???           06391  goto hllDCAAA
                      06392 
                      06393  
                      06394  
                      06395  
                      06396  
006A                  06397 hllMBAAA:
                      06398  
                      06399 
006A   1C00           06400  btfss neg,0
006B   2???           06401  goto hllUBAAA 
                      06402 
                      06403  
006C                  06404 hllNBAAA:
                      06405 
                      06406         
                      06407         
                      06408         
006C   08??           06409  movfw fulmin 
006D   02??           06410  subwf fulmin2,w 
006E   00??           06411  movwf mout 
                      06412  
                      06413  
006F   1803           06414  btfsc STATUS,C
0070   2???           06415  goto hllOBAAA          
                      06416                 
                      06417         
0071   1400           06418  bsf minres,0   
                      06419         
                      06420         
0072   2???           06421  goto hllVBAAA  
                      06422         
0073                  06423 hllOBAAA:
                      06424 
                      06425         
0073   08??           06426  movf mout,f
0074   1903           06427  btfsc STATUS,Z
0075   2???           06428  goto hllJCAAA  
0076                  06429 hllPBAAA:
                      06430 
                      06431         
0076   1B80           06432  btfsc mout,7   
0077   2???           06433  goto hllRBAAA   
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 164


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06434         
                      06435         
                      06436     
0078   1003           06437  bcf STATUS,C
0079   0D??           06438  rlf mout,f
                      06439         
                      06440         
007A   1F80           06441  btfss min_lower,7      
007B   2???           06442  goto hllQBAAA   
                      06443 
                      06444  
007C   03??           06445  decf mout,f    
                      06446 
                      06447         
007D   30FF           06448  movlw .255
007E   06??           06449  xorwf mout,w
007F   1D03           06450  btfss STATUS,Z
0080   2???           06451  goto hllQBAAA  
                      06452         
                      06453      
0081   1400           06454  bsf minres,0
                      06455  
                      06456          
0082   2???           06457  goto hllVBAAA
                      06458          
                      06459 
0083                  06460 hllQBAAA:
                      06461 
                      06462    
0083   1003           06463  bcf STATUS,C
0084   0D??           06464  rlf min_lower,f 
                      06465 
                      06466         
0085   03??           06467  decf ein1,f    
                      06468 
                      06469         
0086   2???           06470  goto hllPBAAA
                      06471 
0087                  06472 hllRBAAA:
                      06473         
0087   1F80           06474  btfss min_lower,7      
0088   2???           06475  goto hllTBAAA   
                      06476                 
                      06477         
0089   03??           06478  decf mout,f
                      06479 
                      06480         
008A   30FF           06481  movlw .255
008B   06??           06482  xorwf mout,w
008C   1D03           06483  btfss STATUS,Z
008D   2???           06484  goto hllSBAAA  
                      06485                 
                      06486      
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 165


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008E   1400           06487  bsf minres,0    
                      06488          
                      06489          
008F   2???           06490  goto hllVBAAA   
                      06491          
                      06492          
0090                  06493 hllSBAAA:
                      06494         
0090   307F           06495  movlw .127
0091   06??           06496  xorwf mout,w
0092   1D03           06497  btfss STATUS,Z
0093   2???           06498  goto hllTBAAA  
                      06499         
                      06500         
                      06501         
                      06502         
0094   1003           06503  bcf STATUS,C
0095   0D??           06504  rlf mout,f
                      06505 
                      06506         
0096   03??           06507  decf ein1,f    
                      06508         
                      06509         
0097   1B00           06510  btfsc min_lower,6
0098   2???           06511  goto hllTBAAA 
                      06512         
                      06513         
0099   0A??           06514  incf mout,f    
                      06515         
009A                  06516 hllTBAAA:
                      06517         
009A   2???           06518  goto hllJCAAA
009B                  06519 hllUBAAA:
                      06520  
                      06521 
                      06522         
009B   1C80           06523  btfss neg,1
009C   2???           06524  goto hllDCAAA 
                      06525  
                      06526         
009D                  06527 hllVBAAA:
                      06528 
                      06529         
009D   08??           06530  movfw fulmin2
009E   02??           06531  subwf fulmin,w 
009F   00??           06532  movwf mout 
                      06533 
                      06534  
00A0   1803           06535  btfsc STATUS,C
00A1   2???           06536  goto hllWBAAA          
                      06537         
                      06538         
                      06539         
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 166


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06540         
00A2   1400           06541  bsf minres,0
                      06542         
                      06543         
00A3   2???           06544  goto hllNBAAA  
                      06545 
00A4                  06546 hllWBAAA:
                      06547 
                      06548         
00A4   08??           06549  movf mout,f 
00A5   1903           06550  btfsc STATUS,Z 
00A6   2???           06551  goto hllJCAAA 
                      06552         
00A7                  06553 hllXBAAA:
                      06554 
                      06555         
00A7   1B80           06556  btfsc mout,7
00A8   2???           06557  goto hllRBAAAb
                      06558  
                      06559         
                      06560         
                      06561     
00A9   1003           06562  bcf STATUS,C
00AA   0D??           06563  rlf mout,f 
                      06564         
                      06565         
00AB   1F80           06566  btfss min2_lower,7
00AC   2???           06567  goto hllYBAAA
                      06568 
                      06569         
                      06570         
00AD   03??           06571  decf mout,f    
                      06572         
                      06573         
00AE   30FF           06574  movlw .255
00AF   06??           06575  xorwf mout,w
00B0   1D03           06576  btfss STATUS,Z
00B1   2???           06577  goto hllYBAAA  
                      06578         
                      06579 
00B2   1400           06580  bsf minres,0
                      06581         
                      06582 
00B3   2???           06583  goto hllNBAAA
                      06584         
00B4                  06585 hllYBAAA:
                      06586 
                      06587  
00B4   1003           06588  bcf STATUS,C
00B5   0D??           06589  rlf min2_lower,f
                      06590  
                      06591 
00B6   03??           06592  decf ein1,f
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 167


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06593    
                      06594         
00B7   2???           06595  goto hllXBAAA  
00B8                  06596 hllRBAAAb:
                      06597 
                      06598         
00B8   1F80           06599  btfss min2_lower,7
00B9   2???           06600  goto hllBCAAA
                      06601 
                      06602         
00BA   03??           06603  decf mout,f    
                      06604         
                      06605         
00BB   30FF           06606  movlw .255
00BC   06??           06607  xorwf mout,w
00BD   1D03           06608  btfss STATUS,Z
00BE   2???           06609  goto hllACAAA  
                      06610                 
                      06611         
00BF   1400           06612  bsf minres,0
                      06613  
                      06614         
00C0   2???           06615  goto hllNBAAA
00C1                  06616 hllACAAA:
                      06617 
                      06618 
                      06619         
00C1   307F           06620  movlw .127
00C2   06??           06621  xorwf mout,w
00C3   1D03           06622  btfss STATUS,Z
00C4   2???           06623  goto hllBCAAA  
                      06624                 
                      06625         
                      06626         
                      06627         
00C5   1003           06628  bcf STATUS,C
00C6   0D??           06629  rlf mout,f 
                      06630 
                      06631         
00C7   03??           06632  decf ein1,f    
                      06633 
                      06634         
00C8   1B00           06635  btfsc min2_lower,6
00C9   2???           06636  goto hllBCAAA 
                      06637  
                      06638         
                      06639         
00CA   0A??           06640  incf mout,f    
                      06641         
00CB                  06642 hllBCAAA:
                      06643 
                      06644         
00CB   2???           06645  goto hllJCAAA
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 168


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06646 
00CC                  06647 hllCCAAA:
                      06648          
00CC   08??           06649  movfw fulmin
00CD   02??           06650  subwf fulmin2,w 
00CE   00??           06651  movwf mout 
                      06652          
                      06653          
                      06654          
                      06655      
00CF   1400           06656  bsf minres,0    
                      06657         
00D0   2???           06658  goto hllJCAAA
                      06659 
                      06660         
00D1                  06661 hllDCAAA:
                      06662 
                      06663 
                      06664  
                      06665 
                      06666         
00D1   01??           06667  clrf mout_hi
                      06668         
                      06669         
                      06670         
00D2   08??           06671  movf fulmin,w
00D3   07??           06672  addwf fulmin2,w
00D4   00??           06673  movwf mout
                      06674         
                      06675         
                      06676 
                      06677         
00D5   1C03           06678  btfss STATUS,C 
00D6   2???           06679  goto hllECAAA                  
                      06680         
                      06681         
00D7   0A??           06682  incf mout_hi,f 
                      06683         
00D8                  06684 hllECAAA:
                      06685 
                      06686 
                      06687 
                      06688         
00D8   08??           06689  movf min_lower,w
00D9   07??           06690  addwf min2_lower,w
00DA   1803           06691  btfsc STATUS,C
00DB   2???           06692  goto hllFCAAA   
                      06693  
                      06694 
                      06695         
                      06696         
00DC   3980           06697  andlw .128     
00DD   1D03           06698  btfss STATUS,Z
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 169


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00DE   2???           06699  goto hllFCAAA    
                      06700         
                      06701         
00DF   2???           06702  goto hllGCAAA  
                      06703         
00E0                  06704 hllFCAAA:
                      06705 
                      06706 
                      06707         
00E0   0A??           06708  incf mout,f    
                      06709         
                      06710         
00E1   08??           06711  movf mout,f
00E2   1D03           06712  btfss STATUS,Z
00E3   2???           06713  goto hllGCAAA 
                      06714 
                      06715         
00E4   0A??           06716  incf mout_hi,f
                      06717 
00E5                  06718 hllGCAAA:
                      06719         
00E5   08??           06720  movf mout_hi,f
00E6   1903           06721  btfsc STATUS,Z
00E7   2???           06722  goto hllJCAAA 
                      06723 
                      06724         
                      06725         
                      06726         
                      06727         
00E8   01??           06728  clrf big_c
00E9   1003           06729  bcf STATUS,C
00EA   0C??           06730  rrf fulmin,f
00EB   1803           06731  btfsc STATUS,C
00EC   1400           06732  bsf big_c,0
                      06733         
                      06734         
00ED   1003           06735  bcf STATUS,C
00EE   0C??           06736  rrf min_lower,f
                      06737 
                      06738         
                      06739         
00EF   1C00           06740  btfss big_c,0
00F0   2???           06741  goto hllHCAAA
                      06742         
                      06743         
                      06744         
00F1   1780           06745  bsf min_lower,7        
                      06746         
00F2                  06747 hllHCAAA:
                      06748 
                      06749         
                      06750         
00F2   01??           06751  clrf big_c
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 170


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F3   1003           06752  bcf STATUS,C
00F4   0C??           06753  rrf fulmin2,f
00F5   1803           06754  btfsc STATUS,C
00F6   1400           06755  bsf big_c,0
                      06756         
                      06757         
                      06758         
                      06759         
00F7   1003           06760  bcf STATUS,C
00F8   0C??           06761  rrf min2_lower,f
                      06762         
                      06763         
                      06764         
00F9   1C00           06765  btfss big_c,0
00FA   2???           06766  goto hllICAAA
                      06767 
                      06768         
                      06769         
                      06770         
00FB   1780           06771  bsf min_lower,7                
                      06772         
00FC                  06773 hllICAAA:
                      06774 
                      06775         
00FC   0A??           06776  incf ein1,f    
                      06777         
                      06778         
00FD   2???           06779  goto hllDCAAA
                      06780 
                      06781 
00FE                  06782 hllJCAAA:
                      06783 
00FE   08??           06784  movfw mout 
                      06785  
                      06786  
00FF   1D03           06787  btfss STATUS,Z 
0100   2???           06788  goto hllKCAAA 
                      06789  
                      06790  
                      06791  
0101   3000           06792  movlw .0 
                      06793 
                      06794  PUSH
0102   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0103   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      06795  
                      06796  
                      06797  
0104   3080           06798  movlw 0x80 
                      06799  PUSH
0105   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0106   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      06800  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 171


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06801  
                      06802  
0107   2???           06803  goto hllLCAAA
                      06804  
                      06805  
                      06806  
0108                  06807 hllKCAAA: 
                      06808  
                      06809  
                      06810  
                      06811  
0108   08??           06812  movfw mout
0109   3E80           06813  addlw -.128 
010A   00??           06814  movwf mout 
                      06815 
                      06816  
                      06817  
                      06818  
010B   1800           06819  btfsc minres,0 
010C   1780           06820  bsf mout,7
                      06821  
010D   08??           06822  movfw mout 
                      06823  PUSH
010E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
010F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      06824  
                      06825  
                      06826  
0110   ???? ????      06827  banksel min
0112   08??           06828  movfw ein1 
                      06829 
                      06830  PUSH
0113   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0114   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      06831  
0115                  06832 hllLCAAA:
                      06833  
0115   0008           06834  return 
                      06835 
                      06836  
                      06837 
                      06838 
                      06839 #undefine mout_hi
                      06840 
                      06841 
                      06842 #undefine big_c
                      06843 
                      06844 
                      06845 #undefine min2_lower
                      06846 
                      06847 
                      06848 #undefine minres
                      06849 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 172


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06850 
                      06851 #undefine fulmin2H
                      06852 
                      06853 
                      06854 #undefine fulminH
                      06855 
                      06856 
                      06857 #undefine min_lower
                      06858 
                      06859 
                      06860 #undefine rev
                      06861 
                      06862 
                      06863 #undefine fulmin2
                      06864 
                      06865 
                      06866 #undefine fulmin
                      06867 
                      06868 
                      06869 #undefine multiplier
                      06870 
                      06871 
                      06872 #undefine mout
                      06873 
                      06874 
                      06875 #undefine util
                      06876 
                      06877 
                      06878 #undefine neg
                      06879 
                      06880 
                      06881 #undefine ein2
                      06882 
                      06883 
                      06884 #undefine min2
                      06885 
                      06886 
                      06887 #undefine ein1
                      06888 
                      06889 
                      06890 #undefine min
                      06891 
                      06892 
                      06893 
                      06894 
                      06895  
                      06896 
                      06897 sfp_copy CODE 
                      06898 
                      06899 
                      06900 
                      06901 #define mye sfploc00
                      06902 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 173


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06903 
                      06904 #define mym sfploc01
                      06905 
                      06906 
0000                  06907 copyf:  
                      06908 #ifdef HLLMULTITASK
                      06909 #ifdef HLLGUARDsfploc 
                      06910  movf in_isr,f  
                      06911  btfsc STATUS,Z
                      06912  
                      06913 
                      06914 
                      06915  goto copyf0
                      06916 
                      06917  POP
                      06918  banksel mye 
                      06919  movwf mye
                      06920  POP
                      06921  movwf mym
                      06922  PUSH
                      06923  movfw mye
                      06924  PUSH
                      06925  movfw mym
                      06926  PUSH
                      06927  movfw mye
                      06928  PUSH
                      06929  return
                      06930  
                      06931 
                      06932 
                      06933 #undefine mye
                      06934 
                      06935 
                      06936 #undefine mym
                      06937 
                      06938 
                      06939 #define mye sfploc00+1
                      06940 
                      06941 
                      06942 #define mym sfploc01+1
                      06943 
                      06944 
                      06945 copyf0:
                      06946 #endif
                      06947 #endif
                      06948 
                      06949  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      06950  banksel mye 
0004   00??           06951  movwf mye
                      06952  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 174


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006   0384               M  decf FSR,f 
0007   00??           06953  movwf mym
                      06954  PUSH
0008   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0009   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
000A   08??           06955  movfw mye
                      06956  PUSH
000B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
000D   08??           06957  movfw mym
                      06958  PUSH
000E   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000F   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0010   08??           06959  movfw mye
                      06960  PUSH
0011   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0012   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0013   0008           06961  return
                      06962  
                      06963 
                      06964 
                      06965 #undefine mye
                      06966 
                      06967 
                      06968 #undefine mym
                      06969 
                      06970 
                      06971 
                      06972 
                      06973 
                      06974 
                      06975 
                      06976 
                      06977 
                      06978 
                      06979 
                      06980   
                      06981  
                      06982 
                      06983 sfp_div CODE 
                      06984 
                      06985 
                      06986 #define rounded sfploc00
                      06987 
                      06988 
                      06989 #define big_c sfploc01
                      06990 
                      06991 
                      06992 #define a_hi_msb sfploc02
                      06993 
                      06994 
                      06995 #define loop_count sfploc03
                      06996 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 175


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06997 
                      06998 #define run_total sfploc04
                      06999 
                      07000 
                      07001 #define min2_lower sfploc05
                      07002 
                      07003 
                      07004 #define subtrahend sfploc06
                      07005 
                      07006 
                      07007 #define quotient_lo sfploc07
                      07008 
                      07009 
                      07010 #define term sfploc08
                      07011 
                      07012 
                      07013 #define exam sfploc09
                      07014 
                      07015 
                      07016 #define multiplier sfploc10
                      07017 
                      07018 
                      07019 #define mout sfploc11
                      07020 
                      07021 
                      07022 #define util sfploc12
                      07023 
                      07024 
                      07025 #define neg sfploc13
                      07026 
                      07027 
                      07028 #define ein2 sfploc14
                      07029 
                      07030 
                      07031 #define min2 sfploc15
                      07032 
                      07033 
                      07034 #define ein sfploc16
                      07035 
                      07036 
                      07037 #define min sfploc17
                      07038 
                      07039 
0000                  07040 divf:  
                      07041 #ifdef HLLMULTITASK
                      07042 #ifdef HLLGUARDsfploc 
                      07043  movf in_isr,f  
                      07044  btfsc STATUS,Z
                      07045  
                      07046 
                      07047 
                      07048  goto divf0
                      07049 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 176


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07050 
                      07051 
                      07052 
                      07053 
                      07054 
                      07055 
                      07056 
                      07057 
                      07058 
                      07059 
                      07060 
                      07061 
                      07062 
                      07063 
                      07064  POP
                      07065 
                      07066  banksel min
                      07067  movwf ein2 
                      07068  clrf neg 
                      07069 
                      07070 
                      07071  POP
                      07072 
                      07073  banksel min
                      07074  movwf min2 
                      07075 
                      07076 
                      07077  btfsc min2,7
                      07078  bsf neg,1
                      07079  bcf min2,7 
                      07080 
                      07081  POP
                      07082 
                      07083  banksel min
                      07084  movwf ein 
                      07085 
                      07086  POP
                      07087 
                      07088  banksel min
                      07089  movwf min 
                      07090  btfsc min,7
                      07091  bsf neg,0 
                      07092  bcf min,7 
                      07093  movfw ein 
                      07094  movwf util 
                      07095  movfw ein2 
                      07096  subwf util,f 
                      07097 
                      07098  clrf exam 
                      07099 
                      07100  
                      07101  movfw min 
                      07102  addlw .128 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 177


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07103  movwf min 
                      07104 
                      07105  movfw min2 
                      07106  addlw .128 
                      07107  movwf min2 
                      07108 
                      07109  
                      07110  
                      07111 
                      07112  
                      07113  movwf term 
                      07114 
                      07115 
                      07116 
                      07117 
                      07118  clrf quotient_lo
                      07119 
                      07120 
                      07121  clrf subtrahend
                      07122 
                      07123 
                      07124  clrf min2_lower
                      07125 
                      07126 
                      07127  clrf run_total
                      07128 
                      07129 
                      07130  clrf loop_count
                      07131 
                      07132 f4tp:
                      07133 
                      07134  movf loop_count,w
                      07135  xorlw .16
                      07136  btfsc STATUS,Z
                      07137  goto f4dn
                      07138 
                      07139 
                      07140  movf min,w
                      07141  andlw .128
                      07142  movwf a_hi_msb
                      07143  
                      07144 
                      07145  bcf STATUS,C
                      07146  rlf min2_lower,f
                      07147 
                      07148 
                      07149 
                      07150  bcf STATUS,C
                      07151  rlf run_total,f
                      07152 
                      07153 
                      07154  btfss STATUS,C
                      07155  goto que4
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 178


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07156 
                      07157 
                      07158  incf min2_lower,f
                      07159 
                      07160 que4:
                      07161 
                      07162 
                      07163  bcf STATUS,C
                      07164  rlf min,f 
                      07165 
                      07166 
                      07167 
                      07168  bcf STATUS,C
                      07169  rlf quotient_lo,f
                      07170 
                      07171 
                      07172  btfsc STATUS,C
                      07173 
                      07174 
                      07175 
                      07176  incf min,f
                      07177 
                      07178 
                      07179  movf a_hi_msb,f
                      07180  btfsc STATUS,Z
                      07181  goto nry4
                      07182 
                      07183 
                      07184  incf run_total,f
                      07185 
                      07186 
                      07187  btfsc STATUS,Z
                      07188  incf min2_lower,f
                      07189 
                      07190 nry4:
                      07191 
                      07192 
                      07193  clrf big_c 
                      07194  movfw min2
                      07195  subwf run_total,w 
                      07196  btfss STATUS,C 
                      07197  bsf big_c,0 
                      07198 
                      07199 
                      07200  movf subtrahend,w
                      07201  subwf min2_lower,f 
                      07202 
                      07203 
                      07204  movf min2,w
                      07205  subwf run_total,f
                      07206 
                      07207 
                      07208  btfsc big_c,0 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 179


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07209  decf min2_lower,f
                      07210 
                      07211 
                      07212  btfss min2_lower,7
                      07213  goto ga4g0
                      07214 
                      07215 
                      07216 
                      07217  movf min2,w
                      07218  addwf run_total,w
                      07219  clrf big_c
                      07220  btfsc STATUS,C
                      07221  bsf big_c,0
                      07222 
                      07223 
                      07224  movf subtrahend,w
                      07225  addwf min2_lower,f
                      07226 
                      07227 
                      07228  movf min2,w
                      07229  addwf run_total,f
                      07230 
                      07231 
                      07232 
                      07233  btfsc big_c,0 
                      07234  incf min2_lower,f
                      07235 
                      07236 
                      07237 
                      07238  movlw .254
                      07239  andwf quotient_lo,f
                      07240 
                      07241 
                      07242  goto ga5g0
                      07243 ga4g0:
                      07244 
                      07245 
                      07246  movlw .1
                      07247  iorwf quotient_lo,f
                      07248 ga5g0:
                      07249 
                      07250 
                      07251 
                      07252  incf loop_count,f
                      07253 
                      07254 
                      07255  goto f4tp
                      07256 
                      07257 f4dn:
                      07258 
                      07259 
                      07260  movf quotient_lo,w
                      07261  movwf mout
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 180


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07262 
                      07263 
                      07264  clrf multiplier
                      07265  btfsc min,0
                      07266  bsf multiplier,0
                      07267 
                      07268  
                      07269  bcf STATUS,C
                      07270  rrf term,f
                      07271 
                      07272  clrf rounded
                      07273  movfw run_total
                      07274  subwf term,w    
                      07275  btfsc STATUS,C 
                      07276  goto fr9rh   
                      07277  incf mout,f 
                      07278  bsf rounded,0 
                      07279  
                      07280 fr9rh:
                      07281  
                      07282 
                      07283 
                      07284  movf multiplier,f
                      07285  btfsc STATUS,Z
                      07286  goto notmult0
                      07287  
                      07288 
                      07289 
                      07290 
                      07291 
                      07292  
                      07293  btfss mout,0
                      07294  goto prpg1
                      07295 
                      07296  
                      07297  btfsc rounded,0
                      07298  goto prpg1
                      07299  
                      07300  
                      07301 
                      07302  bcf STATUS,C
                      07303  rrf mout,f
                      07304 
                      07305 
                      07306  incf mout,f
                      07307 
                      07308 
                      07309  goto prpgm
                      07310 
                      07311 prpg1:
                      07312 
                      07313 
                      07314  bcf STATUS,C 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 181


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07315  rrf mout,f
                      07316 
                      07317 prpgm:
                      07318 
                      07319 
                      07320  bsf mout,7
                      07321 
                      07322  goto notmult1
                      07323 notmult0:
                      07324  decf util,f 
                      07325 notmult1:
                      07326  movfw mout 
                      07327 
                      07328 retrydvif1: 
                      07329 
                      07330   addlw -.128 
                      07331   movwf exam 
                      07332   btfss exam,7 
                      07333   goto nodivfcarr2 
                      07334   addlw .128    
                      07335 
                      07336  
                      07337  decf util,f 
                      07338  bcf STATUS,C 
                      07339  
                      07340  
                      07341  
                      07342  rlf mout,f 
                      07343  movfw mout 
                      07344  goto retrydvif1 
                      07345 
                      07346 nodivfcarr2: 
                      07347 
                      07348 
                      07349  movwf mout
                      07350 
                      07351 
                      07352 
                      07353  
                      07354  
                      07355  btfsc neg,0
                      07356  goto ita33nq 
                      07357  btfss neg,1
                      07358  goto div_sames 
                      07359  goto div_dif5 
                      07360 ita33nq: 
                      07361  btfsc neg,1
                      07362  goto div_sames 
                      07363 
                      07364 div_dif5: 
                      07365 
                      07366  
                      07367  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 182


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07368  
                      07369  
                      07370  movfw mout 
                      07371  iorlw .128 
                      07372  movwf mout 
                      07373  
                      07374 
                      07375 div_sames: 
                      07376  movfw mout 
                      07377  PUSH
                      07378  banksel min
                      07379  movfw util 
                      07380  PUSH
                      07381  
                      07382  return 
                      07383 
                      07384  
                      07385  
                      07386 
                      07387 
                      07388 #undefine rounded
                      07389 
                      07390 
                      07391 #undefine big_c
                      07392 
                      07393 
                      07394 #undefine a_hi_msb
                      07395 
                      07396 
                      07397 #undefine loop_count
                      07398 
                      07399 
                      07400 #undefine run_total
                      07401 
                      07402 
                      07403 #undefine min2_lower
                      07404 
                      07405 
                      07406 #undefine subtrahend
                      07407 
                      07408 
                      07409 #undefine quotient_lo
                      07410 
                      07411 
                      07412 #undefine term
                      07413 
                      07414 
                      07415 #undefine exam
                      07416 
                      07417 
                      07418 #undefine multiplier
                      07419 
                      07420 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 183


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07421 #undefine mout
                      07422 
                      07423 
                      07424 #undefine util
                      07425 
                      07426 
                      07427 #undefine neg
                      07428 
                      07429 
                      07430 #undefine ein2
                      07431 
                      07432 
                      07433 #undefine min2
                      07434 
                      07435 
                      07436 #undefine ein
                      07437 
                      07438 
                      07439 #undefine min
                      07440 
                      07441 
                      07442 #define rounded sfploc00+1
                      07443 
                      07444 
                      07445 #define big_c sfploc01+1
                      07446 
                      07447 
                      07448 #define a_hi_msb sfploc02+1
                      07449 
                      07450 
                      07451 #define loop_count sfploc03+1
                      07452 
                      07453 
                      07454 #define run_total sfploc04+1
                      07455 
                      07456 
                      07457 #define min2_lower sfploc05+1
                      07458 
                      07459 
                      07460 #define subtrahend sfploc06+1
                      07461 
                      07462 
                      07463 #define quotient_lo sfploc07+1
                      07464 
                      07465 
                      07466 #define term sfploc08+1
                      07467 
                      07468 
                      07469 #define exam sfploc09+1
                      07470 
                      07471 
                      07472 #define multiplier sfploc10+1
                      07473 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 184


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07474 
                      07475 #define mout sfploc11+1
                      07476 
                      07477 
                      07478 #define util sfploc12+1
                      07479 
                      07480 
                      07481 #define neg sfploc13+1
                      07482 
                      07483 
                      07484 #define ein2 sfploc14+1
                      07485 
                      07486 
                      07487 #define min2 sfploc15+1
                      07488 
                      07489 
                      07490 #define ein sfploc16+1
                      07491 
                      07492 
                      07493 #define min sfploc17+1
                      07494 
                      07495 
                      07496 divf0:
                      07497 #endif
                      07498 #endif
                      07499 
                      07500 
                      07501 
                      07502 
                      07503 
                      07504 
                      07505 
                      07506 
                      07507 
                      07508 
                      07509 
                      07510 
                      07511 
                      07512 
                      07513 
                      07514  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      07515 
0002   ???? ????      07516  banksel min
0004   00??           07517  movwf ein2 
0005   01??           07518  clrf neg 
                      07519 
                      07520 
                      07521  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
                      07522 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 185


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   ???? ????      07523  banksel min
000A   00??           07524  movwf min2 
                      07525 
                      07526 
000B   1B80           07527  btfsc min2,7
000C   1480           07528  bsf neg,1
000D   1380           07529  bcf min2,7 
                      07530 
                      07531  POP
000E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000F   0384               M  decf FSR,f 
                      07532 
0010   ???? ????      07533  banksel min
0012   00??           07534  movwf ein 
                      07535 
                      07536  POP
0013   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0014   0384               M  decf FSR,f 
                      07537 
0015   ???? ????      07538  banksel min
0017   00??           07539  movwf min 
0018   1B80           07540  btfsc min,7
0019   1400           07541  bsf neg,0 
001A   1380           07542  bcf min,7 
001B   08??           07543  movfw ein 
001C   00??           07544  movwf util 
001D   08??           07545  movfw ein2 
001E   02??           07546  subwf util,f 
                      07547 
001F   01??           07548  clrf exam 
                      07549 
                      07550  
0020   08??           07551  movfw min 
0021   3E80           07552  addlw .128 
0022   00??           07553  movwf min 
                      07554 
0023   08??           07555  movfw min2 
0024   3E80           07556  addlw .128 
0025   00??           07557  movwf min2 
                      07558 
                      07559  
                      07560  
                      07561 
                      07562  
0026   00??           07563  movwf term 
                      07564 
                      07565 
                      07566 
                      07567 
0027   01??           07568  clrf quotient_lo
                      07569 
                      07570 
0028   01??           07571  clrf subtrahend
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 186


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07572 
                      07573 
0029   01??           07574  clrf min2_lower
                      07575 
                      07576 
002A   01??           07577  clrf run_total
                      07578 
                      07579 
002B   01??           07580  clrf loop_count
                      07581 
002C                  07582 hllMCAAA:
                      07583 
002C   08??           07584  movf loop_count,w
002D   3A10           07585  xorlw .16
002E   1903           07586  btfsc STATUS,Z
002F   2???           07587  goto hllRCAAA
                      07588 
                      07589 
0030   08??           07590  movf min,w
0031   3980           07591  andlw .128
0032   00??           07592  movwf a_hi_msb
                      07593  
                      07594 
0033   1003           07595  bcf STATUS,C
0034   0D??           07596  rlf min2_lower,f
                      07597 
                      07598 
                      07599 
0035   1003           07600  bcf STATUS,C
0036   0D??           07601  rlf run_total,f
                      07602 
                      07603 
0037   1C03           07604  btfss STATUS,C
0038   2???           07605  goto hllNCAAA
                      07606 
                      07607 
0039   0A??           07608  incf min2_lower,f
                      07609 
003A                  07610 hllNCAAA:
                      07611 
                      07612 
003A   1003           07613  bcf STATUS,C
003B   0D??           07614  rlf min,f 
                      07615 
                      07616 
                      07617 
003C   1003           07618  bcf STATUS,C
003D   0D??           07619  rlf quotient_lo,f
                      07620 
                      07621 
003E   1803           07622  btfsc STATUS,C
                      07623 
                      07624 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 187


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07625 
003F   0A??           07626  incf min,f
                      07627 
                      07628 
0040   08??           07629  movf a_hi_msb,f
0041   1903           07630  btfsc STATUS,Z
0042   2???           07631  goto hllOCAAA
                      07632 
                      07633 
0043   0A??           07634  incf run_total,f
                      07635 
                      07636 
0044   1903           07637  btfsc STATUS,Z
0045   0A??           07638  incf min2_lower,f
                      07639 
0046                  07640 hllOCAAA:
                      07641 
                      07642 
0046   01??           07643  clrf big_c 
0047   08??           07644  movfw min2
0048   02??           07645  subwf run_total,w 
0049   1C03           07646  btfss STATUS,C 
004A   1400           07647  bsf big_c,0 
                      07648 
                      07649 
004B   08??           07650  movf subtrahend,w
004C   02??           07651  subwf min2_lower,f 
                      07652 
                      07653 
004D   08??           07654  movf min2,w
004E   02??           07655  subwf run_total,f
                      07656 
                      07657 
004F   1800           07658  btfsc big_c,0 
0050   03??           07659  decf min2_lower,f
                      07660 
                      07661 
0051   1F80           07662  btfss min2_lower,7
0052   2???           07663  goto hllPCAAA
                      07664 
                      07665 
                      07666 
0053   08??           07667  movf min2,w
0054   07??           07668  addwf run_total,w
0055   01??           07669  clrf big_c
0056   1803           07670  btfsc STATUS,C
0057   1400           07671  bsf big_c,0
                      07672 
                      07673 
0058   08??           07674  movf subtrahend,w
0059   07??           07675  addwf min2_lower,f
                      07676 
                      07677 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 188


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005A   08??           07678  movf min2,w
005B   07??           07679  addwf run_total,f
                      07680 
                      07681 
                      07682 
005C   1800           07683  btfsc big_c,0 
005D   0A??           07684  incf min2_lower,f
                      07685 
                      07686 
                      07687 
005E   30FE           07688  movlw .254
005F   05??           07689  andwf quotient_lo,f
                      07690 
                      07691 
0060   2???           07692  goto hllQCAAA
0061                  07693 hllPCAAA:
                      07694 
                      07695 
0061   3001           07696  movlw .1
0062   04??           07697  iorwf quotient_lo,f
0063                  07698 hllQCAAA:
                      07699 
                      07700 
                      07701 
0063   0A??           07702  incf loop_count,f
                      07703 
                      07704 
0064   2???           07705  goto hllMCAAA
                      07706 
0065                  07707 hllRCAAA:
                      07708 
                      07709 
0065   08??           07710  movf quotient_lo,w
0066   00??           07711  movwf mout
                      07712 
                      07713 
0067   01??           07714  clrf multiplier
0068   1800           07715  btfsc min,0
0069   1400           07716  bsf multiplier,0
                      07717 
                      07718  
006A   1003           07719  bcf STATUS,C
006B   0C??           07720  rrf term,f
                      07721 
006C   01??           07722  clrf rounded
006D   08??           07723  movfw run_total
006E   02??           07724  subwf term,w    
006F   1803           07725  btfsc STATUS,C 
0070   2???           07726  goto hllSCAAA   
0071   0A??           07727  incf mout,f 
0072   1400           07728  bsf rounded,0 
                      07729  
0073                  07730 hllSCAAA:
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 189


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07731  
                      07732 
                      07733 
0073   08??           07734  movf multiplier,f
0074   1903           07735  btfsc STATUS,Z
0075   2???           07736  goto hllVCAAA
                      07737  
                      07738 
                      07739 
                      07740 
                      07741 
                      07742  
0076   1C00           07743  btfss mout,0
0077   2???           07744  goto hllTCAAA
                      07745 
                      07746  
0078   1800           07747  btfsc rounded,0
0079   2???           07748  goto hllTCAAA
                      07749  
                      07750  
                      07751 
007A   1003           07752  bcf STATUS,C
007B   0C??           07753  rrf mout,f
                      07754 
                      07755 
007C   0A??           07756  incf mout,f
                      07757 
                      07758 
007D   2???           07759  goto hllUCAAA
                      07760 
007E                  07761 hllTCAAA:
                      07762 
                      07763 
007E   1003           07764  bcf STATUS,C 
007F   0C??           07765  rrf mout,f
                      07766 
0080                  07767 hllUCAAA:
                      07768 
                      07769 
0080   1780           07770  bsf mout,7
                      07771 
0081   2???           07772  goto hllWCAAA
0082                  07773 hllVCAAA:
0082   03??           07774  decf util,f 
0083                  07775 hllWCAAA:
0083   08??           07776  movfw mout 
                      07777 
0084                  07778 hllXCAAA: 
                      07779 
0084   3E80           07780   addlw -.128 
0085   00??           07781   movwf exam 
0086   1F80           07782   btfss exam,7 
0087   2???           07783   goto hllYCAAA 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 190


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0088   3E80           07784   addlw .128    
                      07785 
                      07786  
0089   03??           07787  decf util,f 
008A   1003           07788  bcf STATUS,C 
                      07789  
                      07790  
                      07791  
008B   0D??           07792  rlf mout,f 
008C   08??           07793  movfw mout 
008D   2???           07794  goto hllXCAAA 
                      07795 
008E                  07796 hllYCAAA: 
                      07797 
                      07798 
008E   00??           07799  movwf mout
                      07800 
                      07801 
                      07802 
                      07803  
                      07804  
008F   1800           07805  btfsc neg,0
0090   2???           07806  goto hllZCAAA 
0091   1C80           07807  btfss neg,1
0092   2???           07808  goto hllBDAAA 
0093   2???           07809  goto hllADAAA 
0094                  07810 hllZCAAA: 
0094   1880           07811  btfsc neg,1
0095   2???           07812  goto hllBDAAA 
                      07813 
0096                  07814 hllADAAA: 
                      07815 
                      07816  
                      07817  
                      07818  
                      07819  
0096   08??           07820  movfw mout 
0097   3880           07821  iorlw .128 
0098   00??           07822  movwf mout 
                      07823  
                      07824 
0099                  07825 hllBDAAA: 
0099   08??           07826  movfw mout 
                      07827  PUSH
009A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
009C   ???? ????      07828  banksel min
009E   08??           07829  movfw util 
                      07830  PUSH
009F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A0   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      07831  
00A1   0008           07832  return 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 191


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07833 
                      07834  
                      07835  
                      07836 
                      07837 
                      07838 #undefine rounded
                      07839 
                      07840 
                      07841 #undefine big_c
                      07842 
                      07843 
                      07844 #undefine a_hi_msb
                      07845 
                      07846 
                      07847 #undefine loop_count
                      07848 
                      07849 
                      07850 #undefine run_total
                      07851 
                      07852 
                      07853 #undefine min2_lower
                      07854 
                      07855 
                      07856 #undefine subtrahend
                      07857 
                      07858 
                      07859 #undefine quotient_lo
                      07860 
                      07861 
                      07862 #undefine term
                      07863 
                      07864 
                      07865 #undefine exam
                      07866 
                      07867 
                      07868 #undefine multiplier
                      07869 
                      07870 
                      07871 #undefine mout
                      07872 
                      07873 
                      07874 #undefine util
                      07875 
                      07876 
                      07877 #undefine neg
                      07878 
                      07879 
                      07880 #undefine ein2
                      07881 
                      07882 
                      07883 #undefine min2
                      07884 
                      07885 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 192


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07886 #undefine ein
                      07887 
                      07888 
                      07889 #undefine min
                      07890 
                      07891 
                      07892 
                      07893 
                      07894 
                      07895 
                      07896 
                      07897  
                      07898 
                      07899 
                      07900 sfp_tou CODE 
                      07901 
                      07902 
                      07903 
                      07904 #define util sfploc00
                      07905 
                      07906 
                      07907 #define divisor sfploc01
                      07908 
                      07909 
                      07910 #define karg2 sfploc02
                      07911 
                      07912 
                      07913 #define karg1 sfploc03
                      07914 
                      07915 
0000                  07916 ftou:  
                      07917 #ifdef HLLMULTITASK
                      07918 #ifdef HLLGUARDsfploc 
                      07919  movf in_isr,f  
                      07920  btfsc STATUS,Z
                      07921  
                      07922 
                      07923 
                      07924  goto ftou0
                      07925 
                      07926 
                      07927 
                      07928 
                      07929 
                      07930 
                      07931  POP
                      07932  banksel karg2
                      07933  movwf karg2 
                      07934  clrf karg1 
                      07935  
                      07936  
                      07937  
                      07938  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 193


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07939  btfss karg2,7
                      07940  goto re55zek
                      07941  POP
                      07942  goto re55zer 
                      07943 re55zek:
                      07944  
                      07945  POP
                      07946  addlw .128
                      07947  banksel karg1
                      07948  movwf karg1 
                      07949  
                      07950  movfw karg2
                      07951  sublw .7
                      07952  
                      07953  movwf divisor 
                      07954 
                      07955  movlw high FPRollTbl3 
                      07956  movwf PCLATH 
                      07957  movlw low FPRollTbl3
                      07958  addwf divisor,w 
                      07959  btfsc STATUS,C 
                      07960  incf PCLATH,f 
                      07961  movwf PCL 
                      07962 
                      07963 
                      07964 FPRollTbl3:
                      07965  goto shift0
                      07966  goto shift1
                      07967  goto shift2 
                      07968  goto shift3
                      07969  goto shift4
                      07970  goto shift5
                      07971  goto shift6
                      07972  goto shift7
                      07973  
                      07974 shift7:
                      07975  bcf STATUS,C 
                      07976  rrf karg1,f
                      07977  rrf util,f
                      07978 shift6:
                      07979  bcf STATUS,C 
                      07980  rrf karg1,f
                      07981  rrf util,f
                      07982 shift5:
                      07983  bcf STATUS,C 
                      07984  rrf karg1,f
                      07985  rrf util,f
                      07986 shift4:
                      07987  bcf STATUS,C 
                      07988  rrf karg1,f
                      07989  rrf util,f
                      07990 shift3:
                      07991  bcf STATUS,C 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 194


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07992  rrf karg1,f
                      07993  rrf util,f
                      07994 shift2:
                      07995  bcf STATUS,C 
                      07996  rrf karg1,f
                      07997  rrf util,f
                      07998 shift1:
                      07999  bcf STATUS,C 
                      08000  rrf karg1,f
                      08001  rrf util,f
                      08002 shift0:
                      08003 
                      08004 re55zer:
                      08005  banksel karg1
                      08006  movfw karg1 
                      08007  PUSH
                      08008  
                      08009  
                      08010  return
                      08011 
                      08012 
                      08013 
                      08014 
                      08015 #undefine util
                      08016 
                      08017 
                      08018 #undefine divisor
                      08019 
                      08020 
                      08021 #undefine karg2
                      08022 
                      08023 
                      08024 #undefine karg1
                      08025 
                      08026 
                      08027 #define util sfploc00+1
                      08028 
                      08029 
                      08030 #define divisor sfploc01+1
                      08031 
                      08032 
                      08033 #define karg2 sfploc02+1
                      08034 
                      08035 
                      08036 #define karg1 sfploc03+1
                      08037 
                      08038 
                      08039 ftou0:
                      08040 #endif
                      08041 #endif
                      08042 
                      08043 
                      08044 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 195


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08045 
                      08046 
                      08047 
                      08048  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      08049  banksel karg2
0004   00??           08050  movwf karg2 
0005   01??           08051  clrf karg1 
                      08052  
                      08053  
                      08054  
                      08055  
0006   1F80           08056  btfss karg2,7
0007   2???           08057  goto hllCDAAA
                      08058  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
000A   2???           08059  goto hllMDAAA 
000B                  08060 hllCDAAA:
                      08061  
                      08062  POP
000B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000C   0384               M  decf FSR,f 
000D   3E80           08063  addlw .128
000E   ???? ????      08064  banksel karg1
0010   00??           08065  movwf karg1 
                      08066  
0011   08??           08067  movfw karg2
0012   3C07           08068  sublw .7
                      08069  
0013   00??           08070  movwf divisor 
                      08071 
0014   30??           08072  movlw high hllDDAAA 
0015   008A           08073  movwf PCLATH 
0016   30??           08074  movlw low hllDDAAA
0017   07??           08075  addwf divisor,w 
0018   1803           08076  btfsc STATUS,C 
0019   0A8A           08077  incf PCLATH,f 
001A   0082           08078  movwf PCL 
                      08079 
                      08080 
001B                  08081 hllDDAAA:
001B   2???           08082  goto hllLDAAA
001C   2???           08083  goto hllKDAAA
001D   2???           08084  goto hllJDAAA 
001E   2???           08085  goto hllIDAAA
001F   2???           08086  goto hllHDAAA
0020   2???           08087  goto hllGDAAA
0021   2???           08088  goto hllFDAAA
0022   2???           08089  goto hllEDAAA
                      08090  
0023                  08091 hllEDAAA:
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 196


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0023   1003           08092  bcf STATUS,C 
0024   0C??           08093  rrf karg1,f
0025   0C??           08094  rrf util,f
0026                  08095 hllFDAAA:
0026   1003           08096  bcf STATUS,C 
0027   0C??           08097  rrf karg1,f
0028   0C??           08098  rrf util,f
0029                  08099 hllGDAAA:
0029   1003           08100  bcf STATUS,C 
002A   0C??           08101  rrf karg1,f
002B   0C??           08102  rrf util,f
002C                  08103 hllHDAAA:
002C   1003           08104  bcf STATUS,C 
002D   0C??           08105  rrf karg1,f
002E   0C??           08106  rrf util,f
002F                  08107 hllIDAAA:
002F   1003           08108  bcf STATUS,C 
0030   0C??           08109  rrf karg1,f
0031   0C??           08110  rrf util,f
0032                  08111 hllJDAAA:
0032   1003           08112  bcf STATUS,C 
0033   0C??           08113  rrf karg1,f
0034   0C??           08114  rrf util,f
0035                  08115 hllKDAAA:
0035   1003           08116  bcf STATUS,C 
0036   0C??           08117  rrf karg1,f
0037   0C??           08118  rrf util,f
0038                  08119 hllLDAAA:
                      08120 
0038                  08121 hllMDAAA:
0038   ???? ????      08122  banksel karg1
003A   08??           08123  movfw karg1 
                      08124  PUSH
003B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08125  
                      08126  
003D   0008           08127  return
                      08128 
                      08129 
                      08130 
                      08131 
                      08132 #undefine util
                      08133 
                      08134 
                      08135 #undefine divisor
                      08136 
                      08137 
                      08138 #undefine karg2
                      08139 
                      08140 
                      08141 #undefine karg1
                      08142 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 197


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08143 
                      08144 
                      08145 
                      08146  
                      08147 
                      08148 sfp_gt CODE
                      08149 
                      08150 
                      08151 
                      08152 #define karg4 sfploc00
                      08153 
                      08154 
                      08155 #define karg3 sfploc01
                      08156 
                      08157 
                      08158 #define karg2 sfploc02
                      08159 
                      08160 
                      08161 #define karg1 sfploc03
                      08162 
                      08163 
                      08164 #define neg2 sfploc04
                      08165 
                      08166 
                      08167 #define neg sfploc05
                      08168 
                      08169 
0000                  08170 gtf:  
                      08171 #ifdef HLLMULTITASK
                      08172 #ifdef HLLGUARDsfploc 
                      08173  movf in_isr,f  
                      08174  btfsc STATUS,Z
                      08175  
                      08176 
                      08177 
                      08178  goto gtf0
                      08179 
                      08180  
                      08181  
                      08182  
                      08183  
                      08184  
                      08185 
                      08186  
                      08187  
                      08188  
                      08189  
                      08190  
                      08191  POP
                      08192  banksel karg4
                      08193  movwf karg4 
                      08194 
                      08195  POP
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 198


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08196 
                      08197  movwf karg3 
                      08198  
                      08199  POP
                      08200 
                      08201  movwf karg2 
                      08202 
                      08203  POP
                      08204 
                      08205  movwf karg1 
                      08206  
                      08207  
                      08208  
                      08209  clrf neg 
                      08210  clrf neg2 
                      08211 
                      08212  btfsc karg1,7
                      08213  bsf neg,0 
                      08214  btfsc karg3,7
                      08215  bsf neg2,0 
                      08216 
                      08217 
                      08218  
                      08219  btfss neg,0
                      08220  goto tsok7
                      08221  btfsc neg2,0
                      08222  goto tsok7
                      08223  movlw .0
                      08224 
                      08225  PUSH
                      08226  
                      08227  goto retok7
                      08228 tsok7:
                      08229 
                      08230 
                      08231 
                      08232 
                      08233 
                      08234 
                      08235  
                      08236  btfsc neg,0
                      08237  goto tsok8
                      08238  btfss neg2,0
                      08239  goto tsok8
                      08240  movlw .1 
                      08241  PUSH
                      08242  
                      08243  goto retok7
                      08244 tsok8:
                      08245 
                      08246 
                      08247 
                      08248  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 199


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08249  
                      08250  bcf karg1,7
                      08251  bcf karg3,7
                      08252 
                      08253 
                      08254  
                      08255  
                      08256  
                      08257  
                      08258 
                      08259  
                      08260  
                      08261  
                      08262  
                      08263  
                      08264  
                      08265 
                      08266  btfsc karg4,7 
                      08267  goto nxclg55
                      08268  movf karg4,f
                      08269  btfsc STATUS,Z 
                      08270  goto nxclg55 
                      08271  
                      08272 
                      08273  movf karg2,f
                      08274  btfsc STATUS,Z
                      08275  goto iiout4
                      08276  btfsc karg2,7
                      08277  goto iiout4
                      08278  goto iistl3
                      08279  
                      08280 nxclg55: 
                      08281 
                      08282  btfsc karg2,7 
                      08283  goto iiout4
                      08284  movf karg2,f
                      08285  btfsc STATUS,Z 
                      08286  goto iiout4 
                      08287  goto retnn
                      08288 iistl3: 
                      08289  movfw  karg2                   
                      08290  subwf karg4,w    
                      08291  btfsc STATUS,C    
                      08292  goto iiout4
                      08293  goto retnn
                      08294 
                      08295 
                      08296 
                      08297 iiout4: 
                      08298 
                      08299 
                      08300 
                      08301  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 200


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08302 
                      08303 
                      08304 
                      08305 
                      08306 
                      08307  btfsc karg2,7 
                      08308  goto nzxlg55
                      08309  movf karg2,f
                      08310  btfsc STATUS,Z 
                      08311  goto nzxlg55 
                      08312  
                      08313 
                      08314  movf karg4,f
                      08315  btfsc STATUS,Z
                      08316  goto izxut4
                      08317  btfsc karg4,7
                      08318  goto izxut4
                      08319  goto izxtl3
                      08320  
                      08321 nzxlg55: 
                      08322 
                      08323  btfsc karg4,7 
                      08324  goto izxut4
                      08325  movf karg4,f
                      08326  btfsc STATUS,Z 
                      08327  goto izxut4 
                      08328  goto retin
                      08329 izxtl3: 
                      08330  movfw  karg4                   
                      08331  subwf karg2,w    
                      08332  btfsc STATUS,C    
                      08333  goto izxut4
                      08334  goto retin
                      08335 izxut4: 
                      08336 
                      08337 
                      08338 
                      08339 
                      08340 
                      08341 
                      08342 
                      08343 
                      08344  
                      08345  
                      08346  
                      08347  
                      08348  movfw karg1
                      08349  subwf karg3,w
                      08350  btfss STATUS,C 
                      08351  goto retnn 
                      08352  
                      08353  movfw karg3
                      08354  subwf karg1,w
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 201


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08355  btfss STATUS,C 
                      08356  goto retin
                      08357 
                      08358  
                      08359  movlw .0 
                      08360  PUSH
                      08361  
                      08362  goto retok7 
                      08363 
                      08364  
                      08365 retin:
                      08366  banksel neg
                      08367  movlw .0 
                      08368  btfsc neg,0
                      08369  movlw .1 
                      08370  PUSH
                      08371  
                      08372  goto retok7 
                      08373 retnn:
                      08374  banksel neg
                      08375  movlw .0 
                      08376  btfss neg,0
                      08377  movlw .1
                      08378  PUSH
                      08379  
                      08380 retok7:
                      08381  
                      08382  return 
                      08383  
                      08384 
                      08385 
                      08386 
                      08387 #undefine karg4
                      08388 
                      08389 
                      08390 #undefine karg3
                      08391 
                      08392 
                      08393 #undefine karg2
                      08394 
                      08395 
                      08396 #undefine karg1
                      08397 
                      08398 
                      08399 #undefine neg2
                      08400 
                      08401 
                      08402 #undefine neg
                      08403 
                      08404 
                      08405 #define karg4 sfploc00+1
                      08406 
                      08407 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 202


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08408 #define karg3 sfploc01+1
                      08409 
                      08410 
                      08411 #define karg2 sfploc02+1
                      08412 
                      08413 
                      08414 #define karg1 sfploc03+1
                      08415 
                      08416 
                      08417 #define neg2 sfploc04+1
                      08418 
                      08419 
                      08420 #define neg sfploc05+1
                      08421 
                      08422 
                      08423 gtf0:
                      08424 #endif
                      08425 #endif
                      08426 
                      08427  
                      08428  
                      08429  
                      08430  
                      08431  
                      08432 
                      08433  
                      08434  
                      08435  
                      08436  
                      08437  
                      08438  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      08439  banksel karg4
0004   00??           08440  movwf karg4 
                      08441 
                      08442  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
                      08443 
0007   00??           08444  movwf karg3 
                      08445  
                      08446  POP
0008   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0009   0384               M  decf FSR,f 
                      08447 
000A   00??           08448  movwf karg2 
                      08449 
                      08450  POP
000B   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000C   0384               M  decf FSR,f 
                      08451 
000D   00??           08452  movwf karg1 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 203


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08453  
                      08454  
                      08455  
000E   01??           08456  clrf neg 
000F   01??           08457  clrf neg2 
                      08458 
0010   1B80           08459  btfsc karg1,7
0011   1400           08460  bsf neg,0 
0012   1B80           08461  btfsc karg3,7
0013   1400           08462  bsf neg2,0 
                      08463 
                      08464 
                      08465  
0014   1C00           08466  btfss neg,0
0015   2???           08467  goto hllNDAAA
0016   1800           08468  btfsc neg2,0
0017   2???           08469  goto hllNDAAA
0018   3000           08470  movlw .0
                      08471 
                      08472  PUSH
0019   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08473  
001B   2???           08474  goto hllXDAAA
001C                  08475 hllNDAAA:
                      08476 
                      08477 
                      08478 
                      08479 
                      08480 
                      08481 
                      08482  
001C   1800           08483  btfsc neg,0
001D   2???           08484  goto hllODAAA
001E   1C00           08485  btfss neg2,0
001F   2???           08486  goto hllODAAA
0020   3001           08487  movlw .1 
                      08488  PUSH
0021   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0022   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08489  
0023   2???           08490  goto hllXDAAA
0024                  08491 hllODAAA:
                      08492 
                      08493 
                      08494 
                      08495  
                      08496  
0024   1380           08497  bcf karg1,7
0025   1380           08498  bcf karg3,7
                      08499 
                      08500 
                      08501  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 204


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08502  
                      08503  
                      08504  
                      08505 
                      08506  
                      08507  
                      08508  
                      08509  
                      08510  
                      08511  
                      08512 
0026   1B80           08513  btfsc karg4,7 
0027   2???           08514  goto hllPDAAA
0028   08??           08515  movf karg4,f
0029   1903           08516  btfsc STATUS,Z 
002A   2???           08517  goto hllPDAAA 
                      08518  
                      08519 
002B   08??           08520  movf karg2,f
002C   1903           08521  btfsc STATUS,Z
002D   2???           08522  goto hllRDAAA
002E   1B80           08523  btfsc karg2,7
002F   2???           08524  goto hllRDAAA
0030   2???           08525  goto hllQDAAA
                      08526  
0031                  08527 hllPDAAA: 
                      08528 
0031   1B80           08529  btfsc karg2,7 
0032   2???           08530  goto hllRDAAA
0033   08??           08531  movf karg2,f
0034   1903           08532  btfsc STATUS,Z 
0035   2???           08533  goto hllRDAAA 
0036   2???           08534  goto hllWDAAA
0037                  08535 hllQDAAA: 
0037   08??           08536  movfw  karg2                   
0038   02??           08537  subwf karg4,w    
0039   1803           08538  btfsc STATUS,C    
003A   2???           08539  goto hllRDAAA
003B   2???           08540  goto hllWDAAA
                      08541 
                      08542 
                      08543 
003C                  08544 hllRDAAA: 
                      08545 
                      08546 
                      08547 
                      08548  
                      08549 
                      08550 
                      08551 
                      08552 
                      08553 
003C   1B80           08554  btfsc karg2,7 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 205


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003D   2???           08555  goto hllSDAAA
003E   08??           08556  movf karg2,f
003F   1903           08557  btfsc STATUS,Z 
0040   2???           08558  goto hllSDAAA 
                      08559  
                      08560 
0041   08??           08561  movf karg4,f
0042   1903           08562  btfsc STATUS,Z
0043   2???           08563  goto hllUDAAA
0044   1B80           08564  btfsc karg4,7
0045   2???           08565  goto hllUDAAA
0046   2???           08566  goto hllTDAAA
                      08567  
0047                  08568 hllSDAAA: 
                      08569 
0047   1B80           08570  btfsc karg4,7 
0048   2???           08571  goto hllUDAAA
0049   08??           08572  movf karg4,f
004A   1903           08573  btfsc STATUS,Z 
004B   2???           08574  goto hllUDAAA 
004C   2???           08575  goto hllVDAAA
004D                  08576 hllTDAAA: 
004D   08??           08577  movfw  karg4                   
004E   02??           08578  subwf karg2,w    
004F   1803           08579  btfsc STATUS,C    
0050   2???           08580  goto hllUDAAA
0051   2???           08581  goto hllVDAAA
0052                  08582 hllUDAAA: 
                      08583 
                      08584 
                      08585 
                      08586 
                      08587 
                      08588 
                      08589 
                      08590 
                      08591  
                      08592  
                      08593  
                      08594  
0052   08??           08595  movfw karg1
0053   02??           08596  subwf karg3,w
0054   1C03           08597  btfss STATUS,C 
0055   2???           08598  goto hllWDAAA 
                      08599  
0056   08??           08600  movfw karg3
0057   02??           08601  subwf karg1,w
0058   1C03           08602  btfss STATUS,C 
0059   2???           08603  goto hllVDAAA
                      08604 
                      08605  
005A   3000           08606  movlw .0 
                      08607  PUSH
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 206


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08608  
005D   2???           08609  goto hllXDAAA 
                      08610 
                      08611  
005E                  08612 hllVDAAA:
005E   ???? ????      08613  banksel neg
0060   3000           08614  movlw .0 
0061   1800           08615  btfsc neg,0
0062   3001           08616  movlw .1 
                      08617  PUSH
0063   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0064   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08618  
0065   2???           08619  goto hllXDAAA 
0066                  08620 hllWDAAA:
0066   ???? ????      08621  banksel neg
0068   3000           08622  movlw .0 
0069   1C00           08623  btfss neg,0
006A   3001           08624  movlw .1
                      08625  PUSH
006B   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006C   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      08626  
006D                  08627 hllXDAAA:
                      08628  
006D   0008           08629  return 
                      08630  
                      08631 
                      08632 
                      08633 
                      08634 #undefine karg4
                      08635 
                      08636 
                      08637 #undefine karg3
                      08638 
                      08639 
                      08640 #undefine karg2
                      08641 
                      08642 
                      08643 #undefine karg1
                      08644 
                      08645 
                      08646 #undefine neg2
                      08647 
                      08648 
                      08649 #undefine neg
                      08650 
                      08651 
                      08652 
                      08653 
                      08654 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 207


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08655 
                      08656  
                      08657  
                      08658 
                      08659 
                      08660 sfp_iszero CODE
                      08661 
0000                  08662 iszerof: 
                      08663  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   3A80           08664  xorlw 0x80 
0003   1D03           08665  btfss STATUS,Z 
0004   2???           08666  goto nonzf 
                      08667  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   397F           08668  andlw .127
0008   3A00           08669  xorlw .0 
0009   1D03           08670  btfss STATUS,Z 
000A   2???           08671  goto nonzg
000B   3001           08672  movlw .1 
000C   2???           08673  goto nonzr
000D                  08674 nonzf: 
000D   0384           08675  decf HLFSR,f
000E                  08676 nonzg:  
000E   3000           08677  movlw .0 
000F                  08678 nonzr:  
                      08679  PUSH
000F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0010   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0011   0008           08680  return 
                      08681 
                      08682 
                      08683  
                      08684  
                      08685 
                      08686 
                      08687 
                      08688 
                      08689 
                      08690 
                      08691 
                      08692  
                      08693  
                      08694 
                      08695 sfp_mul CODE
                      08696 
                      08697 
                      08698 
                      08699 
                      08700 #define savelsb sfploc00
                      08701 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 208


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08702 
                      08703 #define iterator sfploc01
                      08704 
                      08705 
                      08706 #define hi_byte sfploc02
                      08707 
                      08708 
                      08709 #define make_mout sfploc03
                      08710 
                      08711 
                      08712 #define factor2 sfploc04
                      08713 
                      08714 
                      08715 #define factor1 sfploc05
                      08716 
                      08717 
                      08718 #define mulhi sfploc06
                      08719 
                      08720 
                      08721 #define mout sfploc07
                      08722 
                      08723 
                      08724 #define util sfploc08
                      08725 
                      08726 
                      08727 #define neg sfploc09
                      08728 
                      08729 
                      08730 #define ein2 sfploc10
                      08731 
                      08732 
                      08733 #define min2 sfploc11
                      08734 
                      08735 
                      08736 #define ein sfploc12
                      08737 
                      08738 
                      08739 #define min sfploc13
                      08740 
                      08741 
0000                  08742 mulf:  
                      08743 #ifdef HLLMULTITASK
                      08744 #ifdef HLLGUARDsfploc 
                      08745  movf in_isr,f  
                      08746  btfsc STATUS,Z
                      08747  
                      08748 
                      08749 
                      08750  goto mulf0
                      08751 
                      08752 
                      08753  
                      08754  POP
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 209


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08755 
                      08756  
                      08757  banksel ein2
                      08758  movwf ein2 
                      08759  xorlw .128 
                      08760  btfss STATUS,Z
                      08761  goto mulf_zokr1
                      08762  movlw .127     
                      08763  
                      08764  andwf HLINDF,w 
                      08765  
                      08766  btfsc STATUS,Z
                      08767  goto mulf_zeer1
                      08768  
                      08769 mulf_zokr1: 
                      08770 
                      08771  
                      08772  
                      08773  clrf neg 
                      08774  
                      08775  
                      08776  
                      08777  POP
                      08778 
                      08779  
                      08780  banksel min2
                      08781  movwf min2 
                      08782  btfsc min2,7
                      08783  bsf neg,1      
                      08784 
                      08785  
                      08786  bcf min2,7 
                      08787 
                      08788  POP
                      08789 
                      08790  banksel ein
                      08791  movwf ein
                      08792  xorlw .128 
                      08793  btfss STATUS,Z
                      08794  goto mulf_zokr2
                      08795  movlw .127
                      08796 
                      08797  andwf HLINDF,w 
                      08798  btfsc STATUS,Z
                      08799  goto mulf_zeer2
                      08800 mulf_zokr2:
                      08801 
                      08802  POP
                      08803 
                      08804  
                      08805  banksel min
                      08806  movwf min 
                      08807  btfsc min,7
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 210


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08808  bsf neg,0
                      08809 
                      08810  
                      08811  bcf min,7 
                      08812  
                      08813  
                      08814  
                      08815  movfw ein 
                      08816 
                      08817  
                      08818  movwf util 
                      08819 
                      08820  
                      08821  movfw ein2 
                      08822 
                      08823  
                      08824  addwf util,f 
                      08825  
                      08826  
                      08827  movfw min 
                      08828 
                      08829  
                      08830  addlw .128 
                      08831 
                      08832  
                      08833  PUSH
                      08834  banksel min2
                      08835  movfw min2 
                      08836  addlw .128 
                      08837 
                      08838  PUSH
                      08839  goto kmul16 
                      08840 
                      08841 bmul16:
                      08842 
                      08843  
                      08844  POP
                      08845 
                      08846 
                      08847  banksel mout
                      08848  movwf mout 
                      08849 
                      08850  
                      08851  btfss mout,7 
                      08852  goto no_mulf_carry 
                      08853 
                      08854  
                      08855  POP
                      08856 
                      08857  
                      08858  banksel util
                      08859  incf util,f 
                      08860 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 211


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08861 
                      08862  
                      08863  andlw .128 
                      08864  btfss STATUS,Z
                      08865  incf mout,f
                      08866 
                      08867  goto mulf_if1_done 
                      08868 
                      08869 
                      08870 no_mulf_carry: 
                      08871 
                      08872  
                      08873  
                      08874  
                      08875  
                      08876  
                      08877 
                      08878  
                      08879  bcf STATUS,C 
                      08880 
                      08881  
                      08882  POP
                      08883 
                      08884  banksel savelsb
                      08885  movwf savelsb
                      08886  
                      08887  
                      08888  andlw .128 
                      08889  btfss STATUS,Z 
                      08890  bsf STATUS,C 
                      08891 
                      08892  
                      08893  
                      08894  banksel mout
                      08895  rlf mout,f 
                      08896 
                      08897  
                      08898  
                      08899  
                      08900  movf savelsb,w
                      08901 
                      08902  banksel mout
                      08903  andlw .64
                      08904  btfss STATUS,Z
                      08905  incf mout,f
                      08906  
                      08907 
                      08908 
                      08909 mulf_if1_done: 
                      08910 
                      08911  
                      08912  movfw mout 
                      08913 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 212


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08914  
                      08915  addlw -.128 
                      08916 
                      08917  
                      08918  movwf mout 
                      08919 
                      08920  
                      08921  btfsc neg,0
                      08922  goto ita22nq 
                      08923  btfss neg,1
                      08924  goto mul_sames 
                      08925  goto mul_dif5 
                      08926 ita22nq: 
                      08927  btfsc neg,1
                      08928  goto mul_sames 
                      08929 
                      08930 mul_dif5: 
                      08931 
                      08932  
                      08933  movfw mout 
                      08934 
                      08935  
                      08936  iorlw .128 
                      08937 
                      08938  
                      08939  movwf mout 
                      08940 
                      08941 
                      08942 mul_sames: 
                      08943 
                      08944  
                      08945  movfw mout 
                      08946 
                      08947  
                      08948  PUSH
                      08949 
                      08950  
                      08951  banksel util
                      08952  movfw util 
                      08953  PUSH
                      08954  
                      08955  goto reto9k 
                      08956 
                      08957 mulf_zeer1: 
                      08958 
                      08959  POP
                      08960  POP
                      08961 
                      08962 
                      08963 mulf_zeer2:
                      08964  POP
                      08965 
                      08966  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 213


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      08967  movlw .128
                      08968  PUSH
                      08969  PUSH
                      08970 
                      08971  
                      08972  
                      08973 reto9k:
                      08974  
                      08975  return
                      08976  
                      08977  
                      08978  
                      08979  
                      08980 kmul16: 
                      08981 
                      08982  POP
                      08983  banksel factor1
                      08984  movwf factor1
                      08985 
                      08986  POP
                      08987  banksel factor2
                      08988  movwf factor2
                      08989 
                      08990 
                      08991  
                      08992  clrf hi_byte
                      08993  
                      08994  clrf make_mout
                      08995  
                      08996  clrf iterator
                      08997 
                      08998 bptz2:
                      08999 
                      09000  
                      09001  btfss factor1,0
                      09002  goto nyyu11
                      09003 
                      09004  
                      09005  
                      09006  movfw factor2
                      09007  addwf make_mout,f
                      09008 
                      09009  
                      09010  btfsc STATUS,C
                      09011  incf hi_byte,f
                      09012 
                      09013 
                      09014 nyyu11:
                      09015  
                      09016  
                      09017  bcf STATUS,C
                      09018  rrf factor1,f
                      09019  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 214


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09020  
                      09021  
                      09022  bcf STATUS,C
                      09023  rrf hi_byte,f
                      09024 
                      09025  
                      09026  
                      09027  
                      09028  
                      09029  
                      09030  rrf make_mout,f
                      09031 
                      09032 
                      09033  
                      09034  
                      09035  
                      09036  
                      09037  
                      09038  
                      09039  
                      09040  
                      09041  
                      09042  
                      09043  
                      09044  
                      09045  btfsc STATUS,C
                      09046  bsf factor1,7 
                      09047 
                      09048 
                      09049  incf iterator,f
                      09050 
                      09051 
                      09052  movlw .8
                      09053  xorwf iterator,w
                      09054  btfss STATUS,Z
                      09055  goto bptz2
                      09056 
                      09057  
                      09058  movfw factor1 
                      09059  PUSH
                      09060 
                      09061  
                      09062  banksel make_mout
                      09063  movfw make_mout
                      09064  PUSH
                      09065 
                      09066  goto bmul16 
                      09067 
                      09068 
                      09069 
                      09070 
                      09071 
                      09072 #undefine savelsb
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 215


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09073 
                      09074 
                      09075 #undefine iterator
                      09076 
                      09077 
                      09078 #undefine hi_byte
                      09079 
                      09080 
                      09081 #undefine make_mout
                      09082 
                      09083 
                      09084 #undefine factor2
                      09085 
                      09086 
                      09087 #undefine factor1
                      09088 
                      09089 
                      09090 #undefine mulhi
                      09091 
                      09092 
                      09093 #undefine mout
                      09094 
                      09095 
                      09096 #undefine util
                      09097 
                      09098 
                      09099 #undefine neg
                      09100 
                      09101 
                      09102 #undefine ein2
                      09103 
                      09104 
                      09105 #undefine min2
                      09106 
                      09107 
                      09108 #undefine ein
                      09109 
                      09110 
                      09111 #undefine min
                      09112 
                      09113 
                      09114 #define savelsb sfploc00+1
                      09115 
                      09116 
                      09117 #define iterator sfploc01+1
                      09118 
                      09119 
                      09120 #define hi_byte sfploc02+1
                      09121 
                      09122 
                      09123 #define make_mout sfploc03+1
                      09124 
                      09125 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 216


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09126 #define factor2 sfploc04+1
                      09127 
                      09128 
                      09129 #define factor1 sfploc05+1
                      09130 
                      09131 
                      09132 #define mulhi sfploc06+1
                      09133 
                      09134 
                      09135 #define mout sfploc07+1
                      09136 
                      09137 
                      09138 #define util sfploc08+1
                      09139 
                      09140 
                      09141 #define neg sfploc09+1
                      09142 
                      09143 
                      09144 #define ein2 sfploc10+1
                      09145 
                      09146 
                      09147 #define min2 sfploc11+1
                      09148 
                      09149 
                      09150 #define ein sfploc12+1
                      09151 
                      09152 
                      09153 #define min sfploc13+1
                      09154 
                      09155 
                      09156 mulf0:
                      09157 #endif
                      09158 #endif
                      09159 
                      09160 
                      09161  
                      09162  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      09163 
                      09164  
0002   ???? ????      09165  banksel ein2
0004   00??           09166  movwf ein2 
0005   3A80           09167  xorlw .128 
0006   1D03           09168  btfss STATUS,Z
0007   2???           09169  goto hllYDAAA
0008   307F           09170  movlw .127     
                      09171  
0009   0500           09172  andwf HLINDF,w 
                      09173  
000A   1903           09174  btfsc STATUS,Z
000B   2???           09175  goto hllGEAAA
                      09176  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 217


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C                  09177 hllYDAAA: 
                      09178 
                      09179  
                      09180  
000C   01??           09181  clrf neg 
                      09182  
                      09183  
                      09184  
                      09185  POP
000D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000E   0384               M  decf FSR,f 
                      09186 
                      09187  
000F   ???? ????      09188  banksel min2
0011   00??           09189  movwf min2 
0012   1B80           09190  btfsc min2,7
0013   1480           09191  bsf neg,1      
                      09192 
                      09193  
0014   1380           09194  bcf min2,7 
                      09195 
                      09196  POP
0015   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0016   0384               M  decf FSR,f 
                      09197 
0017   ???? ????      09198  banksel ein
0019   00??           09199  movwf ein
001A   3A80           09200  xorlw .128 
001B   1D03           09201  btfss STATUS,Z
001C   2???           09202  goto hllZDAAA
001D   307F           09203  movlw .127
                      09204 
001E   0500           09205  andwf HLINDF,w 
001F   1903           09206  btfsc STATUS,Z
0020   2???           09207  goto hllHEAAA
0021                  09208 hllZDAAA:
                      09209 
                      09210  POP
0021   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0022   0384               M  decf FSR,f 
                      09211 
                      09212  
0023   ???? ????      09213  banksel min
0025   00??           09214  movwf min 
0026   1B80           09215  btfsc min,7
0027   1400           09216  bsf neg,0
                      09217 
                      09218  
0028   1380           09219  bcf min,7 
                      09220  
                      09221  
                      09222  
0029   08??           09223  movfw ein 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 218


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09224 
                      09225  
002A   00??           09226  movwf util 
                      09227 
                      09228  
002B   08??           09229  movfw ein2 
                      09230 
                      09231  
002C   07??           09232  addwf util,f 
                      09233  
                      09234  
002D   08??           09235  movfw min 
                      09236 
                      09237  
002E   3E80           09238  addlw .128 
                      09239 
                      09240  
                      09241  PUSH
002F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0030   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0031   ???? ????      09242  banksel min2
0033   08??           09243  movfw min2 
0034   3E80           09244  addlw .128 
                      09245 
                      09246  PUSH
0035   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0036   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0037   2???           09247  goto hllJEAAA 
                      09248 
0038                  09249 hllAEAAA:
                      09250 
                      09251  
                      09252  POP
0038   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0039   0384               M  decf FSR,f 
                      09253 
                      09254 
003A   ???? ????      09255  banksel mout
003C   00??           09256  movwf mout 
                      09257 
                      09258  
003D   1F80           09259  btfss mout,7 
003E   2???           09260  goto hllBEAAA 
                      09261 
                      09262  
                      09263  POP
003F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0040   0384               M  decf FSR,f 
                      09264 
                      09265  
0041   ???? ????      09266  banksel util
0043   0A??           09267  incf util,f 
                      09268 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 219


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09269 
                      09270  
0044   3980           09271  andlw .128 
0045   1D03           09272  btfss STATUS,Z
0046   0A??           09273  incf mout,f
                      09274 
0047   2???           09275  goto hllCEAAA 
                      09276 
                      09277 
0048                  09278 hllBEAAA: 
                      09279 
                      09280  
                      09281  
                      09282  
                      09283  
                      09284  
                      09285 
                      09286  
0048   1003           09287  bcf STATUS,C 
                      09288 
                      09289  
                      09290  POP
0049   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
004A   0384               M  decf FSR,f 
                      09291 
004B   ???? ????      09292  banksel savelsb
004D   00??           09293  movwf savelsb
                      09294  
                      09295  
004E   3980           09296  andlw .128 
004F   1D03           09297  btfss STATUS,Z 
0050   1403           09298  bsf STATUS,C 
                      09299 
                      09300  
                      09301  
0051   ???? ????      09302  banksel mout
0053   0D??           09303  rlf mout,f 
                      09304 
                      09305  
                      09306  
                      09307  
0054   08??           09308  movf savelsb,w
                      09309 
0055   ???? ????      09310  banksel mout
0057   3940           09311  andlw .64
0058   1D03           09312  btfss STATUS,Z
0059   0A??           09313  incf mout,f
                      09314  
                      09315 
                      09316 
005A                  09317 hllCEAAA: 
                      09318 
                      09319  
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 220


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005A   08??           09320  movfw mout 
                      09321 
                      09322  
005B   3E80           09323  addlw -.128 
                      09324 
                      09325  
005C   00??           09326  movwf mout 
                      09327 
                      09328  
005D   1800           09329  btfsc neg,0
005E   2???           09330  goto hllDEAAA 
005F   1C80           09331  btfss neg,1
0060   2???           09332  goto hllFEAAA 
0061   2???           09333  goto hllEEAAA 
0062                  09334 hllDEAAA: 
0062   1880           09335  btfsc neg,1
0063   2???           09336  goto hllFEAAA 
                      09337 
0064                  09338 hllEEAAA: 
                      09339 
                      09340  
0064   08??           09341  movfw mout 
                      09342 
                      09343  
0065   3880           09344  iorlw .128 
                      09345 
                      09346  
0066   00??           09347  movwf mout 
                      09348 
                      09349 
0067                  09350 hllFEAAA: 
                      09351 
                      09352  
0067   08??           09353  movfw mout 
                      09354 
                      09355  
                      09356  PUSH
0068   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0069   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09357 
                      09358  
006A   ???? ????      09359  banksel util
006C   08??           09360  movfw util 
                      09361  PUSH
006D   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006E   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09362  
006F   2???           09363  goto hllIEAAA 
                      09364 
0070                  09365 hllGEAAA: 
                      09366 
                      09367  POP
0070   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 221


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0071   0384               M  decf FSR,f 
                      09368  POP
0072   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0073   0384               M  decf FSR,f 
                      09369 
                      09370 
0074                  09371 hllHEAAA:
                      09372  POP
0074   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0075   0384               M  decf FSR,f 
                      09373 
                      09374  
0076   3080           09375  movlw .128
                      09376  PUSH
0077   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0078   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09377  PUSH
0079   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09378 
                      09379  
                      09380  
007B                  09381 hllIEAAA:
                      09382  
007B   0008           09383  return
                      09384  
                      09385  
                      09386  
                      09387  
007C                  09388 hllJEAAA: 
                      09389 
                      09390  POP
007C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
007D   0384               M  decf FSR,f 
007E   ???? ????      09391  banksel factor1
0080   00??           09392  movwf factor1
                      09393 
                      09394  POP
0081   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0082   0384               M  decf FSR,f 
0083   ???? ????      09395  banksel factor2
0085   00??           09396  movwf factor2
                      09397 
                      09398 
                      09399  
0086   01??           09400  clrf hi_byte
                      09401  
0087   01??           09402  clrf make_mout
                      09403  
0088   01??           09404  clrf iterator
                      09405 
0089                  09406 hllKEAAA:
                      09407 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 222


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09408  
0089   1C00           09409  btfss factor1,0
008A   2???           09410  goto hllLEAAA
                      09411 
                      09412  
                      09413  
008B   08??           09414  movfw factor2
008C   07??           09415  addwf make_mout,f
                      09416 
                      09417  
008D   1803           09418  btfsc STATUS,C
008E   0A??           09419  incf hi_byte,f
                      09420 
                      09421 
008F                  09422 hllLEAAA:
                      09423  
                      09424  
008F   1003           09425  bcf STATUS,C
0090   0C??           09426  rrf factor1,f
                      09427  
                      09428  
                      09429  
0091   1003           09430  bcf STATUS,C
0092   0C??           09431  rrf hi_byte,f
                      09432 
                      09433  
                      09434  
                      09435  
                      09436  
                      09437  
0093   0C??           09438  rrf make_mout,f
                      09439 
                      09440 
                      09441  
                      09442  
                      09443  
                      09444  
                      09445  
                      09446  
                      09447  
                      09448  
                      09449  
                      09450  
                      09451  
                      09452  
0094   1803           09453  btfsc STATUS,C
0095   1780           09454  bsf factor1,7 
                      09455 
                      09456 
0096   0A??           09457  incf iterator,f
                      09458 
                      09459 
0097   3008           09460  movlw .8
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 223


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0098   06??           09461  xorwf iterator,w
0099   1D03           09462  btfss STATUS,Z
009A   2???           09463  goto hllKEAAA
                      09464 
                      09465  
009B   08??           09466  movfw factor1 
                      09467  PUSH
009C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
009D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09468 
                      09469  
009E   ???? ????      09470  banksel make_mout
00A0   08??           09471  movfw make_mout
                      09472  PUSH
00A1   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
00A2   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09473 
00A3   2???           09474  goto hllAEAAA 
                      09475 
                      09476 
                      09477 
                      09478 
                      09479 
                      09480 #undefine savelsb
                      09481 
                      09482 
                      09483 #undefine iterator
                      09484 
                      09485 
                      09486 #undefine hi_byte
                      09487 
                      09488 
                      09489 #undefine make_mout
                      09490 
                      09491 
                      09492 #undefine factor2
                      09493 
                      09494 
                      09495 #undefine factor1
                      09496 
                      09497 
                      09498 #undefine mulhi
                      09499 
                      09500 
                      09501 #undefine mout
                      09502 
                      09503 
                      09504 #undefine util
                      09505 
                      09506 
                      09507 #undefine neg
                      09508 
                      09509 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 224


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09510 #undefine ein2
                      09511 
                      09512 
                      09513 #undefine min2
                      09514 
                      09515 
                      09516 #undefine ein
                      09517 
                      09518 
                      09519 #undefine min
                      09520 
                      09521 
                      09522 
                      09523 
                      09524 
                      09525 
                      09526 
                      09527  
                      09528 
                      09529 
                      09530 
                      09531 sfp_uto CODE 
                      09532 
                      09533 
                      09534 
                      09535 #define arg1 sfploc00
                      09536 
                      09537 
0000                  09538 utof:  
                      09539 #ifdef HLLMULTITASK
                      09540 #ifdef HLLGUARDsfploc 
                      09541  movf in_isr,f  
                      09542  btfsc STATUS,Z
                      09543  
                      09544 
                      09545 
                      09546  goto utof0
                      09547 
                      09548  
                      09549  POP
                      09550  banksel arg1 
                      09551  movwf arg1
                      09552 
                      09553  btfss arg1,7
                      09554  goto mbww0 
                      09555  
                      09556  
                      09557  
                      09558 
                      09559  bcf arg1,7 
                      09560  movfw arg1 
                      09561  
                      09562  PUSH
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 225


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09563 
                      09564 
                      09565  movlw .7
                      09566  PUSH
                      09567  
                      09568  goto ret101
                      09569 
                      09570 mbww0: 
                      09571  btfss arg1,6
                      09572  goto mbww1 
                      09573 
                      09574 
                      09575  
                      09576  
                      09577 
                      09578  
                      09579  
                      09580  
                      09581 
                      09582  banksel arg1
                      09583  bcf arg1,6 
                      09584  bcf STATUS,C 
                      09585  rlf arg1,f
                      09586  movfw arg1
                      09587  PUSH
                      09588 
                      09589  movlw .6
                      09590  PUSH
                      09591  
                      09592  goto ret101
                      09593 mbww1: 
                      09594 
                      09595  btfss arg1,5
                      09596  goto mbww2
                      09597 
                      09598  banksel arg1
                      09599  bcf arg1,5 
                      09600  bcf STATUS,C 
                      09601  rlf arg1,f
                      09602  rlf arg1,f
                      09603  movfw arg1
                      09604  PUSH
                      09605 
                      09606  movlw .5
                      09607  PUSH
                      09608  
                      09609  goto ret101
                      09610 mbww2: 
                      09611 
                      09612  btfss arg1,4
                      09613  goto mbww3
                      09614 
                      09615 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 226


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09616  banksel arg1
                      09617  bcf arg1,4 
                      09618  bcf STATUS,C 
                      09619  rlf arg1,f
                      09620  rlf arg1,f
                      09621  rlf arg1,f
                      09622  movfw arg1
                      09623  PUSH
                      09624 
                      09625  movlw .4
                      09626  PUSH
                      09627  
                      09628  goto ret101
                      09629 mbww3: 
                      09630 
                      09631  btfss arg1,3
                      09632  goto mbww4
                      09633 
                      09634  banksel arg1
                      09635  bcf arg1,3 
                      09636  bcf STATUS,C 
                      09637  rlf arg1,f
                      09638  rlf arg1,f
                      09639  rlf arg1,f
                      09640  rlf arg1,f
                      09641  movfw arg1
                      09642  PUSH
                      09643 
                      09644  movlw .3
                      09645  PUSH
                      09646  
                      09647  goto ret101
                      09648 
                      09649 mbww4: 
                      09650 
                      09651  btfss arg1,2
                      09652  goto mbww5
                      09653 
                      09654 
                      09655  banksel arg1
                      09656  bcf arg1,2 
                      09657  bcf STATUS,C 
                      09658  rlf arg1,f
                      09659  rlf arg1,f
                      09660  rlf arg1,f
                      09661  rlf arg1,f
                      09662  rlf arg1,f
                      09663  movfw arg1
                      09664  PUSH
                      09665 
                      09666 
                      09667  movlw .2
                      09668  PUSH
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 227


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09669  
                      09670  goto ret101
                      09671 
                      09672 mbww5: 
                      09673 
                      09674  btfss arg1,1
                      09675  goto mbww6
                      09676 
                      09677  banksel arg1
                      09678  bcf arg1,1 
                      09679  bcf STATUS,C 
                      09680  rlf arg1,f
                      09681  rlf arg1,f
                      09682  rlf arg1,f
                      09683  rlf arg1,f
                      09684  rlf arg1,f
                      09685  rlf arg1,f
                      09686  movfw arg1
                      09687  PUSH
                      09688 
                      09689  movlw .1
                      09690  PUSH
                      09691 
                      09692  goto ret101
                      09693 mbww6: 
                      09694  btfss arg1,0
                      09695  goto tis00
                      09696  movlw .0
                      09697  PUSH
                      09698 
                      09699  movlw .0
                      09700  PUSH
                      09701  
                      09702  goto ret101
                      09703 tis00:
                      09704  movlw .0
                      09705  PUSH
                      09706 
                      09707  movlw -.128
                      09708  PUSH
                      09709  
                      09710 ret101:
                      09711  
                      09712  return
                      09713 
                      09714 
                      09715 
                      09716 
                      09717 #undefine arg1
                      09718 
                      09719 
                      09720 #define arg1 sfploc00+1
                      09721 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 228


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09722 
                      09723 utof0:
                      09724 #endif
                      09725 #endif
                      09726 
                      09727  
                      09728  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      09729  banksel arg1 
0004   00??           09730  movwf arg1
                      09731 
0005   1F80           09732  btfss arg1,7
0006   2???           09733  goto hllMEAAA 
                      09734  
                      09735  
                      09736  
                      09737 
0007   1380           09738  bcf arg1,7 
0008   08??           09739  movfw arg1 
                      09740  
                      09741  PUSH
0009   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09742 
                      09743 
000B   3007           09744  movlw .7
                      09745  PUSH
000C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
000D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09746  
000E   2???           09747  goto hllUEAAA
                      09748 
000F                  09749 hllMEAAA: 
000F   1F00           09750  btfss arg1,6
0010   2???           09751  goto hllNEAAA 
                      09752 
                      09753 
                      09754  
                      09755  
                      09756 
                      09757  
                      09758  
                      09759  
                      09760 
0011   ???? ????      09761  banksel arg1
0013   1300           09762  bcf arg1,6 
0014   1003           09763  bcf STATUS,C 
0015   0D??           09764  rlf arg1,f
0016   08??           09765  movfw arg1
                      09766  PUSH
0017   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0018   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 229


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09767 
0019   3006           09768  movlw .6
                      09769  PUSH
001A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
001B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09770  
001C   2???           09771  goto hllUEAAA
001D                  09772 hllNEAAA: 
                      09773 
001D   1E80           09774  btfss arg1,5
001E   2???           09775  goto hllOEAAA
                      09776 
001F   ???? ????      09777  banksel arg1
0021   1280           09778  bcf arg1,5 
0022   1003           09779  bcf STATUS,C 
0023   0D??           09780  rlf arg1,f
0024   0D??           09781  rlf arg1,f
0025   08??           09782  movfw arg1
                      09783  PUSH
0026   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0027   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09784 
0028   3005           09785  movlw .5
                      09786  PUSH
0029   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
002A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09787  
002B   2???           09788  goto hllUEAAA
002C                  09789 hllOEAAA: 
                      09790 
002C   1E00           09791  btfss arg1,4
002D   2???           09792  goto hllPEAAA
                      09793 
                      09794 
002E   ???? ????      09795  banksel arg1
0030   1200           09796  bcf arg1,4 
0031   1003           09797  bcf STATUS,C 
0032   0D??           09798  rlf arg1,f
0033   0D??           09799  rlf arg1,f
0034   0D??           09800  rlf arg1,f
0035   08??           09801  movfw arg1
                      09802  PUSH
0036   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0037   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09803 
0038   3004           09804  movlw .4
                      09805  PUSH
0039   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
003A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09806  
003B   2???           09807  goto hllUEAAA
003C                  09808 hllPEAAA: 
                      09809 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 230


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003C   1D80           09810  btfss arg1,3
003D   2???           09811  goto hllQEAAA
                      09812 
003E   ???? ????      09813  banksel arg1
0040   1180           09814  bcf arg1,3 
0041   1003           09815  bcf STATUS,C 
0042   0D??           09816  rlf arg1,f
0043   0D??           09817  rlf arg1,f
0044   0D??           09818  rlf arg1,f
0045   0D??           09819  rlf arg1,f
0046   08??           09820  movfw arg1
                      09821  PUSH
0047   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0048   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09822 
0049   3003           09823  movlw .3
                      09824  PUSH
004A   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
004B   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09825  
004C   2???           09826  goto hllUEAAA
                      09827 
004D                  09828 hllQEAAA: 
                      09829 
004D   1D00           09830  btfss arg1,2
004E   2???           09831  goto hllREAAA
                      09832 
                      09833 
004F   ???? ????      09834  banksel arg1
0051   1100           09835  bcf arg1,2 
0052   1003           09836  bcf STATUS,C 
0053   0D??           09837  rlf arg1,f
0054   0D??           09838  rlf arg1,f
0055   0D??           09839  rlf arg1,f
0056   0D??           09840  rlf arg1,f
0057   0D??           09841  rlf arg1,f
0058   08??           09842  movfw arg1
                      09843  PUSH
0059   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005A   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09844 
                      09845 
005B   3002           09846  movlw .2
                      09847  PUSH
005C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
005D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09848  
005E   2???           09849  goto hllUEAAA
                      09850 
005F                  09851 hllREAAA: 
                      09852 
005F   1C80           09853  btfss arg1,1
0060   2???           09854  goto hllSEAAA
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 231


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09855 
0061   ???? ????      09856  banksel arg1
0063   1080           09857  bcf arg1,1 
0064   1003           09858  bcf STATUS,C 
0065   0D??           09859  rlf arg1,f
0066   0D??           09860  rlf arg1,f
0067   0D??           09861  rlf arg1,f
0068   0D??           09862  rlf arg1,f
0069   0D??           09863  rlf arg1,f
006A   0D??           09864  rlf arg1,f
006B   08??           09865  movfw arg1
                      09866  PUSH
006C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
006D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09867 
006E   3001           09868  movlw .1
                      09869  PUSH
006F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0070   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09870 
0071   2???           09871  goto hllUEAAA
0072                  09872 hllSEAAA: 
0072   1C00           09873  btfss arg1,0
0073   2???           09874  goto hllTEAAA
0074   3000           09875  movlw .0
                      09876  PUSH
0075   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0076   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09877 
0077   3000           09878  movlw .0
                      09879  PUSH
0078   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0079   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09880  
007A   2???           09881  goto hllUEAAA
007B                  09882 hllTEAAA:
007B   3000           09883  movlw .0
                      09884  PUSH
007C   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
007D   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09885 
007E   3080           09886  movlw -.128
                      09887  PUSH
007F   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0080   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      09888  
0081                  09889 hllUEAAA:
                      09890  
0081   0008           09891  return
                      09892 
                      09893 
                      09894 
                      09895 
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 232


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      09896 #undefine arg1
                      09897 
30C6                  09898  end
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 233


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALT_Save                          0000000A
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 234


SYMBOL TABLE
  LABEL                             VALUE 

C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1H                            00000016
CCPR1L                            00000015
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
COPY                              
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DISCARD                           
D_A                               00000005
ECCPAS                            0000001D
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 235


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ExitISR                           00000064
F                                 00000001
FAR_CALL                          
FERR                              00000002
FSR                               00000004
FSR_Save                          00000009
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HALF_FAR_CALL                     
HLFSR                             FSR
HLINDF                            INDF
HLLGUARDhllblss                   
HLLMULTITASK                      
HLOE_STACK2_SIZE                  .80
HLOE_STACK_SIZE                   .80
HLTABLE                           
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 236


SYMBOL TABLE
  LABEL                             VALUE 

IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ISR                               00000004
KDISCARD                          
KPOP                              
KPUSH                             
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PC_Save                           00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
POP                               
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 237


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PR2                               00000092
PREEMPT                           
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000019D
PULSR                             00000002
PULSS                             00000003
PUSH                              
PWM1CON                           0000001C
R                                 00000002
RABIE                             00000003
RABIF                             00000000
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RESUME                            
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 238


SYMBOL TABLE
  LABEL                             VALUE 

SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_Save                       00000008
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
T2IE                              00000001
T2IF                              00000001
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 239


SYMBOL TABLE
  LABEL                             VALUE 

TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 240


SYMBOL TABLE
  LABEL                             VALUE 

WPUA4                             00000004
WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_Save                            00000007
Z                                 00000002
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F690                          00000001
_hllkrna00_000C                   0000000C
_hllkrna00_0018                   00000018
_hllkrna03_0005                   00000005
_hllkrna03_000C                   0000000C
_hllkrna04_000F                   0000000F
_hllkrna04_0011                   00000011
_hllkrna04_0022                   00000022
_hllkrna04_0024                   00000024
_hllkrna05_000F                   0000000F
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 241


SYMBOL TABLE
  LABEL                             VALUE 

_hllkrna05_0011                   00000011
_hllkrna05_0022                   00000022
_hllkrna05_0024                   00000024
_hllkrna08_0003                   00000003
_hllkrna08_0011                   00000011
_hllkrna09_0003                   00000003
_hllkrna09_0011                   00000011
_hllkrna10_0003                   00000003
_hllkrna10_0010                   00000010
_hllt4513_009F                    0000009F
_hllt4513_00A1                    000000A1
_hllt4513_00AF                    000000AF
_hllt4513_00B1                    000000B1
_hllt4527_0065                    00000065
_hllt4527_0067                    00000067
_hllt4527_0075                    00000075
_hllt4527_0077                    00000077
_hllt4538_0185                    00000185
_hllt4538_0187                    00000187
_hllt4538_01B3                    000001B3
_hllt4538_01B5                    000001B5
_hllt4561_00C2                    000000C2
_hllt4561_00C4                    000000C4
_hllt4561_00D2                    000000D2
_hllt4561_00D4                    000000D4
_hllt457_0047                     00000047
_hllt457_0049                     00000049
_hllt457_0052                     00000052
_hllt457_0054                     00000054
aart00                            00000000
aart01                            00000001
aart02                            00000002
aartpr00                          00000000
add                               00000000
addf                              00000000
adjust                            00000000
alt_fsr                           00000006
alt_stack                         00000000
andb                              00000000
andu                              00000000
clearbit                          00000000
clearbit0                         0000003E
cls                               00000000
conform_i                         00000000
control                           00000000
copyf                             00000000
dispose                           00000000
divf                              00000000
divu                              00000000
divu0                             00000016
eq                                00000000
ftou                              00000000
getch                             00000000
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 242


SYMBOL TABLE
  LABEL                             VALUE 

geth2                             00000002
graphx                            00000000
gtf                               00000000
hllAAAAA                          00000027
hllABAAA                          00000076
hllACAAA                          000000C1
hllADAAA                          00000096
hllAEAAA                          00000038
hllBAAAA                          00000031
hllBBAAA                          00000020
hllBCAAA                          000000CB
hllBDAAA                          00000099
hllBEAAA                          00000048
hllCAAAA                          0000003D
hllCBAAA                          00000024
hllCCAAA                          000000CC
hllCDAAA                          0000000B
hllCEAAA                          0000005A
hllDAAAA                          00000047
hllDBAAA                          00000025
hllDCAAA                          000000D1
hllDDAAA                          0000001B
hllDEAAA                          00000062
hllEBAAA                          00000027
hllECAAA                          000000D8
hllEDAAA                          00000023
hllEEAAA                          00000064
hllFBAAA                          00000035
hllFBAAA_done                     00000036
hllFCAAA                          000000E0
hllFDAAA                          00000026
hllFEAAA                          00000067
hllGCAAA                          000000E5
hllGDAAA                          00000029
hllGEAAA                          00000070
hllHBAAA                          0000004A
hllHCAAA                          000000F2
hllHDAAA                          0000002C
hllHEAAA                          00000074
hllIBAAA                          00000055
hllICAAA                          000000FC
hllIDAAA                          0000002F
hllIEAAA                          0000007B
hllJBAAA                          00000057
hllJCAAA                          000000FE
hllJDAAA                          00000032
hllJEAAA                          0000007C
hllKBAAA                          00000062
hllKCAAA                          00000108
hllKDAAA                          00000035
hllKEAAA                          00000089
hllLAAAA                          0000004B
hllLBAAA                          00000064
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 243


SYMBOL TABLE
  LABEL                             VALUE 

hllLCAAA                          00000115
hllLDAAA                          00000038
hllLEAAA                          0000008F
hllMAAAA                          00000051
hllMBAAA                          0000006A
hllMCAAA                          0000002C
hllMDAAA                          00000038
hllMEAAA                          0000000F
hllNAAAA                          00000058
hllNBAAA                          0000006C
hllNCAAA                          0000003A
hllNDAAA                          0000001C
hllNEAAA                          0000001D
hllOAAAA                          0000005F
hllOBAAA                          00000073
hllOCAAA                          00000046
hllODAAA                          00000024
hllOEAAA                          0000002C
hllPAAAA                          00000066
hllPBAAA                          00000076
hllPCAAA                          00000061
hllPDAAA                          00000031
hllPEAAA                          0000003C
hllQAAAA                          0000006D
hllQBAAA                          00000083
hllQCAAA                          00000063
hllQDAAA                          00000037
hllQEAAA                          0000004D
hllRAAAA                          00000074
hllRBAAA                          00000087
hllRBAAAb                         000000B8
hllRCAAA                          00000065
hllRDAAA                          0000003C
hllREAAA                          0000005F
hllSAAAA                          00000076
hllSBAAA                          00000090
hllSCAAA                          00000073
hllSDAAA                          00000047
hllSEAAA                          00000072
hllTAAAA                          0000004B
hllTBAAA                          0000009A
hllTCAAA                          0000007E
hllTDAAA                          0000004D
hllTEAAA                          0000007B
hllUAAAA                          00000051
hllUBAAA                          0000009B
hllUCAAA                          00000080
hllUDAAA                          00000052
hllUEAAA                          00000081
hllVAAAA                          00000058
hllVBAAA                          0000009D
hllVCAAA                          00000082
hllVDAAA                          0000005E
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 244


SYMBOL TABLE
  LABEL                             VALUE 

hllWAAAA                          0000005F
hllWBAAA                          000000A4
hllWCAAA                          00000083
hllWDAAA                          00000066
hllXAAAA                          00000066
hllXBAAA                          000000A7
hllXCAAA                          00000084
hllXDAAA                          0000006D
hllYAAAA                          0000006D
hllYBAAA                          000000B4
hllYCAAA                          0000008E
hllYDAAA                          0000000C
hllZAAAA                          00000074
hllZCAAA                          00000094
hllZDAAA                          00000021
hllblss00                         00000000
hllblss00isr                      00000001
hllblss01                         00000002
hllblss01isr                      00000003
hllblss02                         00000004
hllblss02isr                      00000005
hlllb51J0                         00000096
hlllb51J1                         00000096
hlllb51J10                        0000009A
hlllb51J11                        00000049
hlllb51J12                        0000009A
hlllb51J14                        00000071
hlllb51J15                        00000077
hlllb51J16                        00000096
hlllb51J17                        000000A2
hlllb51J18                        00000078
hlllb51J19                        000000A2
hlllb51J21                        0000003F
hlllb51J22                        0000003F
hlllb51J23                        00000060
hlllb51J24                        00000060
hlllb51J25                        00000040
hlllb51J26                        00000060
hlllb51J28                        0000003C
hlllb51J29                        0000003F
hlllb51J3                         0000003F
hlllb51J30                        00000051
hlllb51J31                        0000005D
hlllb51J32                        00000077
hlllb51J33                        00000083
hlllb51J34                        0000010B
hlllb51J35                        00000125
hlllb51J36                        00000151
hlllb51J37                        0000015D
hlllb51J39                        00000011
hlllb51J4                         00000042
hlllb51J40                        00000011
hlllb51J43                        00000025
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 245


SYMBOL TABLE
  LABEL                             VALUE 

hlllb51J44                        0000003A
hlllb51J45                        0000006F
hlllb51J46                        00000086
hlllb51J47                        00000051
hlllb51J48                        00000086
hlllb51J49                        0000011B
hlllb51J5                         00000022
hlllb51J50                        0000011B
hlllb51J51                        000000F9
hlllb51J52                        0000011B
hlllb51J53                        000000D7
hlllb51J54                        0000011B
hlllb51J56                        00000011
hlllb51J57                        00000012
hlllb51J59                        00000045
hlllb51J6                         00000042
hlllb51J60                        0000005A
hlllb51J62                        00000011
hlllb51J63                        00000011
hlllb51J9                         0000008E
hllnotisr49                       00000064
hllparmcore                       
hllprgen2                         00000012
hllprogend                        00000069
hllsetfl                          00000000
hllsetgl                          00000000
hlltickedl                        00000000
hlluserprog                       00000000
hloego                            00000000
in_isr                            0000000B
iszerof                           00000000
kpop                              00000000
kpush                             00000000
longf                             00000000
main_setup                        00000000
modu                              00000000
modu0                             00000016
mul                               00000000
mul0                              0000000F
mulf                              00000000
negti                             00000000
nonzf                             0000000D
nonzg                             0000000E
nonzr                             0000000F
ourftou                           00000000
ourwait                           00000000
parm                              00000000
parm4                             00000033
pbase                             00000000
pbaseisr                          00000001
printch                           00000000
printu                            00000000
pwmf                              00000000
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 246


SYMBOL TABLE
  LABEL                             VALUE 

pwmin                             00000000
pwmon                             00000000
samplef                           00000000
setbit                            00000000
setbit0                           0000003E
setf                              hllsetfl
setg                              hllsetgl
sfpaux00                          00000001
sfpaux01                          00000003
sfpaux02                          00000005
sfpaux03                          00000007
sfploc00                          00000000
sfploc01                          00000002
sfploc02                          00000004
sfploc03                          00000006
sfploc04                          00000008
sfploc05                          00000009
sfploc06                          0000000A
sfploc07                          0000000B
sfploc08                          0000000C
sfploc09                          0000000D
sfploc10                          0000000E
sfploc11                          0000000F
sfploc12                          00000010
sfploc13                          00000011
sfploc14                          00000012
sfploc15                          00000013
sfploc16                          00000014
sfploc17                          00000015
softstack0                        00000000
softstack0isr                     00000001
softstack1                        00000002
softstack1isr                     00000003
softstack2                        00000004
softstack2isr                     00000005
stack                             00000000
tcf00h                            00000010
tcf01h                            00000016
tcf02h                            0000001D
tcf03h                            00000024
tcf04h                            0000002B
tcf05h                            00000032
tcf07h                            00000039
tcf99h                            0000003B
tff00h                            00000010
tff01h                            00000016
tff02h                            0000001D
tff03h                            00000024
tff04h                            0000002B
tff05h                            00000032
tff07h                            00000039
tff99h                            0000003B
ticked                            hlltickedl
MPASM  5.37                        TARGET.ASM   1-19-2013  12:58:24         PAGE 247


SYMBOL TABLE
  LABEL                             VALUE 

usrpwm                            00000000
utof                              00000000
wait_button                       00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    24 suppressed

