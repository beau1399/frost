MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 #include "hloe.inc"
                      00001 
                      00002 
                      00003 #define HLLGUARDhllblss
                      00004 
                      00005 
                      00006 #define HLOE_STACK_SIZE .80
                      00007 #define HLOE_STACK2_SIZE .20
                      00008 
                      00009 
                      00010 #include <p16F690.inc>
                      00001         LIST
                      00002 ; P16F690.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00607         LIST
                      00011 #include "../frostcompiler/kernel.inc"
                      00001 PUSH macro ;Push to the main stack for the programmer's parms and dyn. data;
                      00002  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
                      00003  movwf INDF ; code of any sort will not overwrite the data. 
                      00004  endm 
                      00005  
                      00006 POP macro ;Pop from main stack; "decf" is the de-allocator and thus happens last to 
                      00007  movfw INDF ; preserve the safety of this code under interruptible conditions. 
                      00008  decf FSR,f 
                      00009  endm
                      00010  
                      00011 DISCARD macro ;Remove items from the main stack and throw them away w/o affecting W
                      00012  decf FSR,f 
                      00013  endm
                      00014  
                      00015 KDISCARD macro ;Remove items from stack 2 and throw them away w/o affecting W
                      00016  decf alt_fsr,f 
                      00017  endm
                      00018 
                      00019 COPY macro ;Duplicate stack top
                      00020  movfw INDF
                      00021  incf FSR,f 
                      00022  movwf INDF 
                      00023  endm
                      00024 
                      00025 #define HLFSR FSR
                      00026  
                      00027 #define HLINDF INDF
                      00028 
                      00029   
                      00030 FAR_CALL macro caller_os,func_os ;Call destination residing within a different code page
                      00031  pagesel func_os
                      00032  call func_os
                      00033  pagesel caller_os ;This one restores the caller's code page
                      00034  endm
                      00035 
                      00036 ;Call destination residing within a different code page... does not restore the caller's
                      00037 ; code page after return, which may be OK (e.g. if the next operation is another 'Far'
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 ; function call). 
                      00039 HALF_FAR_CALL macro func_os 
                      00040  pagesel func_os        
                      00041  call func_os
                      00042  endm
                      00043  
                      00044 KPOP macro
                      00045  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00046  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00047  btfsc STATUS,Z
                      00048  goto $+0F
                      00049  movfw FSR 
                      00050  movwf softstack0+1 ;Save user stack ptr 
                      00051  movfw alt_fsr ;Get second stack ptr 
                      00052  movwf FSR 
                      00053  movfw INDF ;Dereference it 
                      00054  decf FSR,f ;Decrement it 
                      00055  movwf softstack1+1  ;Save popped value for ret urn 
                      00056  movfw FSR ;Save second stack ptr 
                      00057  movwf alt_fsr 
                      00058  movfw softstack0+1  ;Restore user stack ptr 
                      00059  movwf FSR 
                      00060  clrf softstack0+1
                      00061  movfw softstack1+1  ;Bring back popped value for ret urn 
                      00062  goto $+0E
                      00063  movfw FSR 
                      00064  movwf softstack0 ;Save user stack ptr 
                      00065  movfw alt_fsr ;Get second stack ptr 
                      00066  movwf FSR 
                      00067  movfw INDF ;Dereference it 
                      00068  decf FSR,f ;Decrement it 
                      00069  movwf softstack1  ;Save popped value for ret urn 
                      00070  movfw FSR ;Save second stack ptr 
                      00071  movwf alt_fsr 
                      00072  movfw softstack0  ;Restore user stack ptr 
                      00073  movwf FSR 
                      00074  clrf softstack0
                      00075  movfw softstack1  ;Bring back popped value for ret urn 
                      00076  bankisel stack
                      00077  endm 
                      00078 
                      00079 KPUSH macro
                      00080  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00081  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00082  btfsc STATUS,Z
                      00083  goto $+0E
                      00084  movwf softstack1+1 ;softstack1 holds parm value being pushed
                      00085  movfw FSR  
                      00086  movwf softstack0+1  ;softstack0 holds FSR
                      00087  movfw alt_fsr 
                      00088  movwf FSR 
                      00089  movfw softstack1+1
                      00090  incf alt_fsr,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00092  movwf INDF 
                      00093  movfw softstack0+1
                      00094  movwf FSR 
                      00095  clrf softstack0+1 
                      00096  goto $+0D
                      00097  movwf softstack1 ;softstack1 holds parm value being pushed
                      00098  movfw FSR  
                      00099  movwf softstack0  ;softstack0 holds FSR
                      00100  movfw alt_fsr 
                      00101  movwf FSR 
                      00102  movfw softstack1
                      00103  incf alt_fsr,f 
                      00104  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00105  movwf INDF 
                      00106  movfw softstack0
                      00107  movwf FSR 
                      00108  clrf softstack0
                      00109  bankisel stack
                      00110  endm
                      00111  
                      00112 ;These are simple shifts, similar to << or >> in C, not rotates. Newer PICs include
                      00113 ; a native shift instruction that shifts in zeroes like << and >>. Older devices 
                      00114 ; can only rotate bits through the C register, requiring an extra instruction to
                      00115 ; clear C in cases where a simple shift is needed.
                      00116 LSHIFT macro file_reg
                      00117  bcf STATUS,C    ;RLF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
                      00118  rlf file_reg,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      00119  endm 
                      00120 
                      00121 RSHIFT macro file_reg
                      00122  bcf STATUS,C    ;RRF is a bit shift operation that's present on both the 16F690 (for example) and the 1
                            6F1827.
                      00123  rrf file_reg,f  ; It's a rotate, pulling from C for the necessary bottom-order bit       
                      00124  endm 
                      00125  
                      00126 PREEMPT macro
                      00127 #ifdef HLLMULTITASK 
                      00128  movwf W_Save ; save context- save W in "W_save" file reg.
                      00129  ;From datasheet... save STATUS properly
                      00130  swapf STATUS,W 
                      00131  movwf STATUS_Save 
                      00132  movf FSR,w 
                      00133  movwf FSR_Save 
                      00134  movf PCLATH,w ; save status in "STATUS_Save" file reg.
                      00135  movwf PC_Save 
                      00136  movf alt_fsr,w 
                      00137  movwf ALT_Save
                      00138  incf in_isr,f
                      00139  pagesel ISR
                      00140  bankisel stack 
                      00141  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00142  movf softstack0,f        ; (coded to preserve constant interrupt latency)
                      00143  btfss STATUS,Z       
                      00144  movf softstack0,w  
                      00145  movwf FSR          
                      00146 #endif 
                      00147  endm
                      00148  
                      00149 RESUME macro
                      00150  
                      00151 #ifdef HLLMULTITASK 
                      00152  clrf in_isr
                      00153  movf ALT_Save,w
                      00154  movwf alt_fsr 
                      00155  movf PC_Save,w ; restore context (W and STATUS)
                      00156  movwf PCLATH
                      00157  movf FSR_Save,w 
                      00158  movwf FSR
                      00159  ;Per the datasheet...
                      00160  swapf STATUS_Save,W
                      00161  movwf STATUS ;Move W into Status reg
                      00162  swapf W_Save,F ;Swap W_TEMP
                      00163  swapf W_Save,W ;Swap W_TEMP into W
                      00164 #endif
                      00165 
                      00166  endm
                      00167  
                      00168 ; Table macro.. this followed by any series of RETLW calls
                      00169 ; transforms said call list into a function that takes an offset
                      00170 ; and returns that entry in the table (takes 1 byte, returns 1
                      00171 ; byte... this goes atop the HLL feature which allows generation 
                      00172 ; of tables. It can also go atop RETLW tables entered into assembly 
                      00173 ; files in a very basic fashion when doing assembly programming. In 
                      00174 ; either case, the overall result can be called exactly as if it were any 
                      00175 ; other HLOE function
                      00176 HLTABLE macro mmnme
                      00177 mmnme:
                      00178  movlw high mmnme#v(2) ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00179  movwf PCLATH ; and PAGESEL doesn't take care of all 5
                      00180  movlw low mmnme#v(2) ; Perform pointer arithmetic
                      00181  addwf INDF,w 
                      00182  decf FSR,f
                      00183  btfsc STATUS,C ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00184  incf PCLATH,f 
                      00185  movwf PCL 
                      00186 mmnme#v(2): 
                      00187  ;retlw K, retlw K, etc. go here
                      00188  endm
                      00189  
                      00003 
2007   33C4           00004  __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOR_ON & _IESO_OFF & _FC
                            MEN_OFF)
                      00005 
                      00006 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00007 
                      00008 
                      00009 Resetv code 0 
0000   138B           00010  bcf INTCON,GIE
0001   ????           00011  pagesel hloego
0002   2???           00012  goto hloego
                      00013  
                      00014 #ifdef HLLMULTITASK
                      00015 vectr code 4     ;Device specific
                      00016 ISR:
                      00017 
                      00018 
                      00019  PREEMPT
                      00020 #endif
                      00021 #ifdef HLLMULTITASK
                      00022 ExitISR:    
                      00023 
                      00024   RESUME
                      00025   
                      00026   
                      00027   retfie
                      00028 #endif
                      00029 
                      00030 mainvars udata_shr      
                      00031 #ifdef HLLMULTITASK
                      00032 pbase res .1                    ; Used for functions w/ numbered pass/return, to clean up parms/push arg
                            s
                      00033 pbaseisr res .1 
                      00034 #else
0000                  00035 pbase res .1
                      00036 #endif
                      00037 
0001                  00038 PC_Save res .1
                      00039 
                      00040 main code
0000                  00041 hloego:
                      00042 
                      00043  
0000   01??           00044   clrf in_isr
                      00045  
0001   30??           00046   movlw stack-1         ;Set up stack starting position based on literals det. by incremental linker
0002   0084           00047   movwf FSR 
0003   30??           00048   movlw alt_stack-1
0004   00??           00049   movwf alt_fsr 
                      00050   
                      00051   
0005   01??           00052   clrf softstack0
                      00053  
0006   ????           00054  bankisel stack
0007   ????           00055  pagesel hlluserprog
0008   2???           00056  goto hlluserprog
                      00057 hllupuser CODE
0000                  00058 hlluserprog: 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00059  
                      00060 
0000   3070           00061  movlw .112 
                      00062 
                      00063    
                      00064  FAR_CALL hlluserprog ,safepush
0001   ????               M  pagesel safepush
0002   2???               M  call safepush
0003   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00065 
0004   1683 1303      00066    banksel OSCCON
0006   080F           00067    movfw OSCCON
                      00068    
                      00069    
                      00070 
                      00071    
                      00072  HALF_FAR_CALL safepush
0007   ????               M  pagesel safepush       
0008   2???               M  call safepush
                      00073 
                      00074 
                      00075  
                      00076  FAR_CALL hlluserprog,oru
0009   ????               M  pagesel oru
000A   2???               M  call oru
000B   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00077 
                      00078  POP
000C   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000D   0384               M  decf FSR,f 
000E   1683 1303      00079  banksel OSCCON
0010   008F           00080  movwf OSCCON
                      00081  
                      00082 
                      00083 
0011   3011           00084  movlw .17 
                      00085 
                      00086    
                      00087  FAR_CALL hlluserprog ,safepush
0012   ????               M  pagesel safepush
0013   2???               M  call safepush
0014   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00088 
                      00089  POP
0015   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0016   0384               M  decf FSR,f 
0017   1683 1303      00090  banksel SPBRG
0019   0099           00091  movwf SPBRG
                      00092  
                      00093 
                      00094 
001A   3000           00095  movlw .0 
                      00096 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00097    
                      00098  FAR_CALL hlluserprog ,safepush
001B   ????               M  pagesel safepush
001C   2???               M  call safepush
001D   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00099 
                      00100  POP
001E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
001F   0384               M  decf FSR,f 
0020   1683 1303      00101  banksel SPBRGH
0022   009A           00102  movwf SPBRGH
                      00103  
                      00104 
                      00105 
0023   3004           00106  movlw SYNC
                      00107 
                      00108 
                      00109    
                      00110  FAR_CALL hlluserprog ,safepush
0024   ????               M  pagesel safepush
0025   2???               M  call safepush
0026   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00111 
0027   1683 1303      00112    banksel TXSTA
0029   0818           00113    movfw TXSTA
                      00114    
                      00115    
                      00116 
                      00117    
                      00118  HALF_FAR_CALL safepush
002A   ????               M  pagesel safepush       
002B   2???               M  call safepush
                      00119 
                      00120 
                      00121  
                      00122  FAR_CALL hlluserprog,clearbit
002C   ????               M  pagesel clearbit
002D   2???               M  call clearbit
002E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00123 
                      00124  POP
002F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0030   0384               M  decf FSR,f 
0031   1683 1303      00125  banksel TXSTA
0033   0098           00126  movwf TXSTA
                      00127  
                      00128 
                      00129 
0034   3004           00130  movlw CREN
                      00131 
                      00132 
                      00133    
                      00134  FAR_CALL hlluserprog ,safepush
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0035   ????               M  pagesel safepush
0036   2???               M  call safepush
0037   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00135 
0038   1283 1303      00136    banksel RCSTA
003A   0818           00137    movfw RCSTA
                      00138    
                      00139    
                      00140 
                      00141    
                      00142  HALF_FAR_CALL safepush
003B   ????               M  pagesel safepush       
003C   2???               M  call safepush
                      00143 
                      00144 
                      00145  
                      00146  FAR_CALL hlluserprog,clearbit
003D   ????               M  pagesel clearbit
003E   2???               M  call clearbit
003F   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00147 
                      00148  POP
0040   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0041   0384               M  decf FSR,f 
0042   1283 1303      00149  banksel RCSTA
0044   0098           00150  movwf RCSTA
                      00151  
                      00152 
                      00153 
0045   3004           00154  movlw CREN
                      00155 
                      00156 
                      00157    
                      00158  FAR_CALL hlluserprog ,safepush
0046   ????               M  pagesel safepush
0047   2???               M  call safepush
0048   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00159 
0049   1283 1303      00160    banksel RCSTA
004B   0818           00161    movfw RCSTA
                      00162    
                      00163    
                      00164 
                      00165    
                      00166  HALF_FAR_CALL safepush
004C   ????               M  pagesel safepush       
004D   2???               M  call safepush
                      00167 
                      00168 
                      00169  
                      00170  FAR_CALL hlluserprog,setbit
004E   ????               M  pagesel setbit
004F   2???               M  call setbit
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0050   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00171 
                      00172  POP
0051   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0052   0384               M  decf FSR,f 
0053   1283 1303      00173  banksel RCSTA
0055   0098           00174  movwf RCSTA
                      00175  
                      00176 
                      00177 
0056   3007           00178  movlw SPEN
                      00179 
                      00180 
                      00181    
                      00182  FAR_CALL hlluserprog ,safepush
0057   ????               M  pagesel safepush
0058   2???               M  call safepush
0059   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00183 
005A   1283 1303      00184    banksel RCSTA
005C   0818           00185    movfw RCSTA
                      00186    
                      00187    
                      00188 
                      00189    
                      00190  HALF_FAR_CALL safepush
005D   ????               M  pagesel safepush       
005E   2???               M  call safepush
                      00191 
                      00192 
                      00193  
                      00194  FAR_CALL hlluserprog,setbit
005F   ????               M  pagesel setbit
0060   2???               M  call setbit
0061   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00195 
                      00196  POP
0062   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0063   0384               M  decf FSR,f 
0064   1283 1303      00197  banksel RCSTA
0066   0098           00198  movwf RCSTA
                      00199  
                      00200 
                      00201 
0067   3005           00202  movlw TXEN
                      00203 
                      00204 
                      00205    
                      00206  FAR_CALL hlluserprog ,safepush
0068   ????               M  pagesel safepush
0069   2???               M  call safepush
006A   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00207 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00208 
006B   3006           00209  movlw TX9
                      00210 
                      00211 
                      00212    
                      00213  FAR_CALL hlluserprog ,safepush
006C   ????               M  pagesel safepush
006D   2???               M  call safepush
006E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00214 
                      00215 
006F   3002           00216  movlw BRGH
                      00217 
                      00218 
                      00219    
                      00220  FAR_CALL hlluserprog ,safepush
0070   ????               M  pagesel safepush
0071   2???               M  call safepush
0072   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00221 
0073   1683 1303      00222    banksel TXSTA
0075   0818           00223    movfw TXSTA
                      00224    
                      00225    
                      00226 
                      00227    
                      00228  HALF_FAR_CALL safepush
0076   ????               M  pagesel safepush       
0077   2???               M  call safepush
                      00229 
                      00230 
                      00231  
                      00232  HALF_FAR_CALL setbit
0078   ????               M  pagesel setbit         
0079   2???               M  call setbit
                      00233 
                      00234 
                      00235  
                      00236  HALF_FAR_CALL clearbit
007A   ????               M  pagesel clearbit       
007B   2???               M  call clearbit
                      00237 
                      00238 
                      00239  
                      00240  FAR_CALL hlluserprog,setbit
007C   ????               M  pagesel setbit
007D   2???               M  call setbit
007E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00241 
                      00242  POP
007F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0080   0384               M  decf FSR,f 
0081   1683 1303      00243  banksel TXSTA
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0083   0098           00244  movwf TXSTA
                      00245  
                      00246 
                      00247 
0084   3003           00248  movlw BRG16
                      00249 
                      00250 
                      00251    
                      00252  FAR_CALL hlluserprog ,safepush
0085   ????               M  pagesel safepush
0086   2???               M  call safepush
0087   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00253 
                      00254 
0088   3004           00255  movlw SCKP
                      00256 
                      00257 
                      00258    
                      00259  FAR_CALL hlluserprog ,safepush
0089   ????               M  pagesel safepush
008A   2???               M  call safepush
008B   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00260 
008C   1683 1303      00261    banksel BAUDCTL
008E   081B           00262    movfw BAUDCTL
                      00263    
                      00264    
                      00265 
                      00266    
                      00267  HALF_FAR_CALL safepush
008F   ????               M  pagesel safepush       
0090   2???               M  call safepush
                      00268 
                      00269 
                      00270  
                      00271  HALF_FAR_CALL setbit
0091   ????               M  pagesel setbit         
0092   2???               M  call setbit
                      00272 
                      00273 
                      00274  
                      00275  FAR_CALL hlluserprog,setbit
0093   ????               M  pagesel setbit
0094   2???               M  call setbit
0095   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00276 
                      00277  POP
0096   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0097   0384               M  decf FSR,f 
0098   1683 1303      00278  banksel BAUDCTL
009A   009B           00279  movwf BAUDCTL
                      00280  
                      00281 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00282 
009B   3000           00283  movlw .0 
                      00284 
                      00285    
                      00286  FAR_CALL hlluserprog ,safepush
009C   ????               M  pagesel safepush
009D   2???               M  call safepush
009E   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00287 
                      00288  POP
009F   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A0   0384               M  decf FSR,f 
00A1   1283 1703      00289  banksel ANSELH
00A3   009F           00290  movwf ANSELH
                      00291  
                      00292 
                      00293 
00A4   3000           00294  movlw .0 
                      00295 
                      00296    
                      00297  FAR_CALL hlluserprog ,safepush
00A5   ????               M  pagesel safepush
00A6   2???               M  call safepush
00A7   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00298 
                      00299  POP
00A8   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00A9   0384               M  decf FSR,f 
00AA   1283 1703      00300  banksel ANSEL
00AC   009E           00301  movwf ANSEL
                      00302  
                      00303 
                      00304 
00AD   3005           00305  movlw RCIE
                      00306 
                      00307 
                      00308    
                      00309  FAR_CALL hlluserprog ,safepush
00AE   ????               M  pagesel safepush
00AF   2???               M  call safepush
00B0   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00310 
                      00311 
00B1   3004           00312  movlw TXIE
                      00313 
                      00314 
                      00315    
                      00316  FAR_CALL hlluserprog ,safepush
00B2   ????               M  pagesel safepush
00B3   2???               M  call safepush
00B4   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00317 
00B5   1683 1303      00318    banksel PIE1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00B7   080C           00319    movfw PIE1
                      00320    
                      00321    
                      00322 
                      00323    
                      00324  HALF_FAR_CALL safepush
00B8   ????               M  pagesel safepush       
00B9   2???               M  call safepush
                      00325 
                      00326 
                      00327  
                      00328  HALF_FAR_CALL clearbit
00BA   ????               M  pagesel clearbit       
00BB   2???               M  call clearbit
                      00329 
                      00330 
                      00331  
                      00332  FAR_CALL hlluserprog,clearbit
00BC   ????               M  pagesel clearbit
00BD   2???               M  call clearbit
00BE   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00333 
                      00334  POP
00BF   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
00C0   0384               M  decf FSR,f 
00C1   1683 1303      00335  banksel PIE1
00C3   008C           00336  movwf PIE1
                      00337  
                      00338 
                      00339 
                      00340  
                      00341  FAR_CALL hlluserprog,puthelloworld
00C4   ????               M  pagesel puthelloworld
00C5   2???               M  call puthelloworld
00C6   ????               M  pagesel hlluserprog ;This one restores the caller's code page
                      00342 
                      00343     
00C7                  00344 hllprogend:
00C7   2???           00345  goto hllprogend
                      00346  
                      00347 
                      00348 hllt450 CODE
                      00349  HLTABLE  helloworld
0000                      M helloworld:
0000   30??               M  movlw high helloworld2 ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
0001   008A               M  movwf PCLATH ; and PAGESEL doesn't take care of all 5
0002   30??               M  movlw low helloworld2 ; Perform pointer arithmetic
0003   0700               M  addwf INDF,w 
0004   0384               M  decf FSR,f
0005   1803               M  btfsc STATUS,C ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
0006   0A8A               M  incf PCLATH,f 
0007   0082               M  movwf PCL 
0008                      M helloworld2: 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M  ;retlw K, retlw K, etc. go here
                      00350 
                      00351 
0008   340D           00352  retlw .13
                      00353 
0009   340A           00354  retlw .10
                      00355 
000A   3448           00356  retlw .72
                      00357  
                      00358 
000B   3465           00359  retlw .101
                      00360  
                      00361 
000C   346C           00362  retlw .108
                      00363  
                      00364 
000D   346C           00365  retlw .108
                      00366  
                      00367 
000E   346F           00368  retlw .111
                      00369  
                      00370 
000F   342C           00371  retlw .44
                      00372  
                      00373 
0010   3420           00374  retlw .32
                      00375  
                      00376 
0011   3457           00377  retlw .87
                      00378  
                      00379 
0012   346F           00380  retlw .111
                      00381  
                      00382 
0013   3472           00383  retlw .114
                      00384  
                      00385 
0014   346C           00386  retlw .108
                      00387  
                      00388 
0015   3464           00389  retlw .100
                      00390  
                      00391 
0016   3421           00392  retlw .33
                      00393  
                      00394 
0017   3400           00395  retlw .0
                      00396 
                      00397 hllt451 CODE
0000                  00398 puthelloworld:
0000   0804           00399  movf FSR,w
                      00400  
                      00401 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00402  
                      00403  FAR_CALL puthelloworld ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel puthelloworld ;This one restores the caller's code page
                      00404 
                      00405 
0004   3000           00406  movlw .0
                      00407 
                      00408    
                      00409  HALF_FAR_CALL safepush
0005   ????               M  pagesel safepush       
0006   2???               M  call safepush
                      00410 
                      00411 
                      00412  
                      00413  HALF_FAR_CALL putihelloworld
0007   ????               M  pagesel putihelloworld 
0008   2???               M  call putihelloworld
                      00414 
                      00415 
                      00416  
                      00417  FAR_CALL puthelloworld,kpop
0009   ????               M  pagesel kpop
000A   2???               M  call kpop
000B   ????               M  pagesel puthelloworld ;This one restores the caller's code page
                      00418 
                      00419 ;LOAD POINTER
000C   0084           00420  movwf FSR
                      00421  
                      00422 
000D   0008           00423  return
                      00424  
                      00425 
                      00426 hllt454 CODE
0000                  00427 putihelloworld:
0000   0804           00428  movf FSR,w
                      00429  
                      00430 
                      00431  
                      00432  FAR_CALL putihelloworld ,kpush
0001   ????               M  pagesel kpush
0002   2???               M  call kpush
0003   ????               M  pagesel putihelloworld ;This one restores the caller's code page
                      00433 
                      00434 
0004   3000           00435  movlw .0
                      00436 
                      00437    
                      00438  HALF_FAR_CALL safepush
0005   ????               M  pagesel safepush       
0006   2???               M  call safepush
                      00439 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00440 
                      00441  
                      00442  HALF_FAR_CALL parm
0007   ????               M  pagesel parm           
0008   2???               M  call parm
                      00443 
                      00444 
                      00445  
                      00446  HALF_FAR_CALL helloworld
0009   ????               M  pagesel helloworld     
000A   2???               M  call helloworld
                      00447 
                      00448 
                      00449    
                      00450  FAR_CALL putihelloworld ,safepush
000B   ????               M  pagesel safepush
000C   2???               M  call safepush
000D   ????               M  pagesel putihelloworld ;This one restores the caller's code page
                      00451 
                      00452 
000E   3000           00453  movlw .0 
                      00454 
                      00455    
                      00456  HALF_FAR_CALL safepush
000F   ????               M  pagesel safepush       
0010   2???               M  call safepush
                      00457 
                      00458 
                      00459  
                      00460  FAR_CALL putihelloworld,eq
0011   ????               M  pagesel eq
0012   2???               M  call eq
0013   ????               M  pagesel putihelloworld ;This one restores the caller's code page
                      00461 
                      00462  POP
0014   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0015   0384               M  decf FSR,f 
0016   3A00           00463  xorlw .0
0017   1903           00464  btfsc STATUS,Z
0018   2???           00465  goto hlllb51J2 
                      00466  
                      00467  
0019   2???           00468  goto hlllb51J3
                      00469  
                      00470 
001A                  00471 hlllb51J2:
                      00472 
                      00473 
001A   3000           00474  movlw .0
                      00475 
                      00476    
                      00477  HALF_FAR_CALL safepush
001B   ????               M  pagesel safepush       
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C   2???               M  call safepush
                      00478 
                      00479 
                      00480  
                      00481  HALF_FAR_CALL parm
001D   ????               M  pagesel parm           
001E   2???               M  call parm
                      00482 
                      00483 
                      00484  
                      00485  HALF_FAR_CALL helloworld
001F   ????               M  pagesel helloworld     
0020   2???               M  call helloworld
                      00486 
                      00487 
                      00488    
                      00489  HALF_FAR_CALL safepush
0021   ????               M  pagesel safepush       
0022   2???               M  call safepush
                      00490 
                      00491 
                      00492  
                      00493  FAR_CALL putihelloworld,printch
0023   ????               M  pagesel printch
0024   2???               M  call printch
0025   ????               M  pagesel putihelloworld ;This one restores the caller's code page
                      00494 
                      00495 
0026   3001           00496  movlw .1
                      00497 
                      00498    
                      00499  HALF_FAR_CALL safepush
0027   ????               M  pagesel safepush       
0028   2???               M  call safepush
                      00500 
                      00501 
                      00502  
                      00503  FAR_CALL putihelloworld,add
0029   ????               M  pagesel add
002A   2???               M  call add
002B   ????               M  pagesel putihelloworld ;This one restores the caller's code page
                      00504 
                      00505  ;
                      00506 
                      00507  KDISCARD 
002C   03??               M  decf alt_fsr,f 
002D   2???           00508  goto putihelloworld
002E                  00509 hlllb51J3:
                      00510 
                      00511  KDISCARD 
002E   03??               M  decf alt_fsr,f 
002F   0008           00512  return 
                      00513 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00514  
0030                  00515 hllprgen2:
0030   2???           00516  goto hllprgen2
                      00517  
                      00518 
                      00519 
                      00520 
                      00521 
                      00522 
                      00523  
                      00524 
                      00525 
                      00526 hlog1a CODE
                      00527 
                      00528 
                      00529 
                      00530 #define margp2 hllblss00
                      00531 
                      00532 
0000                  00533 clearbit:  
                      00534 #ifdef HLLMULTITASK
                      00535 #ifdef HLLGUARDhllblss 
                      00536  movf in_isr,f  
                      00537  btfsc STATUS,Z
                      00538  
                      00539 
                      00540 
                      00541  goto clearbit0
                      00542 
                      00543  POP
                      00544  banksel margp2
                      00545  movwf margp2
                      00546  POP 
                      00547  xorlw .0
                      00548  btfss STATUS,Z
                      00549  goto tff00h
                      00550  
                      00551  movfw margp2
                      00552  andlw .255-.1
                      00553  goto tff99h
                      00554 tff00h: 
                      00555  
                      00556  xorlw .1
                      00557  btfss STATUS,Z
                      00558  goto tff01h
                      00559  
                      00560  movfw margp2
                      00561  andlw .255-.2
                      00562  goto tff99h
                      00563 tff01h: 
                      00564  xorlw .1
                      00565  xorlw .2
                      00566  btfss STATUS,Z
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00567  goto tff02h
                      00568  
                      00569  movfw margp2
                      00570  andlw .255-.4
                      00571  goto tff99h
                      00572 tff02h: 
                      00573  xorlw .2
                      00574  xorlw .3
                      00575  btfss STATUS,Z
                      00576  goto tff03h
                      00577  
                      00578  movfw margp2
                      00579  andlw .255-.8
                      00580  goto tff99h
                      00581 tff03h: 
                      00582  xorlw .3
                      00583  xorlw .4
                      00584  btfss STATUS,Z
                      00585  goto tff04h
                      00586  
                      00587  movfw margp2
                      00588  andlw .255-.16
                      00589  goto tff99h
                      00590 tff04h: 
                      00591  xorlw .4
                      00592  xorlw .5
                      00593  btfss STATUS,Z
                      00594  goto tff05h
                      00595  
                      00596  movfw margp2
                      00597  andlw .255-.32
                      00598  goto tff99h
                      00599 tff05h: 
                      00600  xorlw .5
                      00601  xorlw .6
                      00602  btfss STATUS,Z
                      00603  goto tff07h
                      00604  
                      00605  movfw margp2
                      00606  andlw .255-.64
                      00607  goto tff99h
                      00608 tff07h: 
                      00609  
                      00610  movfw margp2
                      00611  andlw .255-.128
                      00612 tff99h:  
                      00613  PUSH
                      00614  return
                      00615 
                      00616 
                      00617 
                      00618 
                      00619 #undefine margp2
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00620 
                      00621 
                      00622 #define margp2 hllblss00+1
                      00623 
                      00624 
                      00625 clearbit0:
                      00626 #endif
                      00627 #endif
                      00628 
                      00629  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      00630  banksel margp2
0004   00??           00631  movwf margp2
                      00632  POP 
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   3A00           00633  xorlw .0
0008   1D03           00634  btfss STATUS,Z
0009   2???           00635  goto hllAAAAA
                      00636  
000A   08??           00637  movfw margp2
000B   39FE           00638  andlw .255-.1
000C   2???           00639  goto hllHAAAA
000D                  00640 hllAAAAA: 
                      00641  
000D   3A01           00642  xorlw .1
000E   1D03           00643  btfss STATUS,Z
000F   2???           00644  goto hllBAAAA
                      00645  
0010   08??           00646  movfw margp2
0011   39FD           00647  andlw .255-.2
0012   2???           00648  goto hllHAAAA
0013                  00649 hllBAAAA: 
0013   3A01           00650  xorlw .1
0014   3A02           00651  xorlw .2
0015   1D03           00652  btfss STATUS,Z
0016   2???           00653  goto hllCAAAA
                      00654  
0017   08??           00655  movfw margp2
0018   39FB           00656  andlw .255-.4
0019   2???           00657  goto hllHAAAA
001A                  00658 hllCAAAA: 
001A   3A02           00659  xorlw .2
001B   3A03           00660  xorlw .3
001C   1D03           00661  btfss STATUS,Z
001D   2???           00662  goto hllDAAAA
                      00663  
001E   08??           00664  movfw margp2
001F   39F7           00665  andlw .255-.8
0020   2???           00666  goto hllHAAAA
0021                  00667 hllDAAAA: 
0021   3A03           00668  xorlw .3
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   3A04           00669  xorlw .4
0023   1D03           00670  btfss STATUS,Z
0024   2???           00671  goto hllEAAAA
                      00672  
0025   08??           00673  movfw margp2
0026   39EF           00674  andlw .255-.16
0027   2???           00675  goto hllHAAAA
0028                  00676 hllEAAAA: 
0028   3A04           00677  xorlw .4
0029   3A05           00678  xorlw .5
002A   1D03           00679  btfss STATUS,Z
002B   2???           00680  goto hllFAAAA
                      00681  
002C   08??           00682  movfw margp2
002D   39DF           00683  andlw .255-.32
002E   2???           00684  goto hllHAAAA
002F                  00685 hllFAAAA: 
002F   3A05           00686  xorlw .5
0030   3A06           00687  xorlw .6
0031   1D03           00688  btfss STATUS,Z
0032   2???           00689  goto hllGAAAA
                      00690  
0033   08??           00691  movfw margp2
0034   39BF           00692  andlw .255-.64
0035   2???           00693  goto hllHAAAA
0036                  00694 hllGAAAA: 
                      00695  
0036   08??           00696  movfw margp2
0037   397F           00697  andlw .255-.128
0038                  00698 hllHAAAA:  
                      00699  PUSH
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003A   0008           00700  return
                      00701 
                      00702 
                      00703 
                      00704 
                      00705 #undefine margp2
                      00706 
                      00707 
                      00708 
                      00709 
                      00710 
                      00711 
                      00712 
                      00713  
                      00714 
                      00715 
                      00716 
                      00717 ukrnl2 UDATA
0000                  00718 stack res HLOE_STACK_SIZE
                      00719  
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00720 ukrnl3 UDATA 
0000                  00721 alt_stack res HLOE_STACK2_SIZE
                      00722  
                      00723 
                      00724 
                      00725 ukernl udata 
                      00726 
                      00727 
                      00728 
                      00729 
                      00730 
0000                  00731 hllblss00 res 1           
                      00732 #ifdef HLLMULTITASK
                      00733 #ifdef HLLGUARDhllblss
                      00734 hllblss00isr res 1      
                      00735 #endif
                      00736 #endif
                      00737 
0001                  00738 hllblss01 res 1    
                      00739 #ifdef HLLMULTITASK
                      00740 #ifdef HLLGUARDhllblss
                      00741 hllblss01isr res 1      
                      00742 #endif
                      00743 #endif
                      00744 
0002                  00745 hllblss02 res 1    
                      00746 #ifdef HLLMULTITASK
                      00747 #ifdef HLLGUARDhllblss
                      00748 hllblss02isr res 1      
                      00749 #endif
                      00750 #endif
                      00751   
                      00752 ukrshr udata_shr
                      00753 
                      00754 
0000                  00755 softstack0 res 1                
                      00756 #ifdef HLLMULTITASK
                      00757 softstack0isr res 1
                      00758 #endif
                      00759 
0001                  00760 softstack1 res 1                
                      00761 #ifdef HLLMULTITASK
                      00762 softstack1isr res 1
                      00763 #endif
                      00764 
0002                  00765 softstack2 res 1                
                      00766 #ifdef HLLMULTITASK
                      00767 softstack2isr res 1
                      00768 #endif
                      00769 
0003                  00770 alt_fsr res 1
0004                  00771 W_Save res 1 
0005                  00772 STATUS_Save res 1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006                  00773 FSR_Save res 1
0007                  00774 ALT_Save res 1
0008                  00775 in_isr res 1
                      00776 
                      00777 hllkrna00 CODE
                      00778 
                      00779  
                      00780 
                      00781 
                      00782 #define mterm hllblss00
                      00783 
                      00784 
0000                  00785 mul:  
                      00786 #ifdef HLLMULTITASK
                      00787 #ifdef HLLGUARDhllblss 
                      00788  movf in_isr,f  
                      00789  btfsc STATUS,Z
                      00790  
                      00791 
                      00792 
                      00793  goto mul0
                      00794 
                      00795  POP
                      00796  banksel mterm 
                      00797  movwf mterm
                      00798  clrw 
                      00799  addwf HLINDF,w 
                      00800  decf mterm,f 
                      00801  btfss STATUS,Z 
                      00802  goto $-3
                      00803  movwf HLINDF
                      00804  return
                      00805 
                      00806 
                      00807 
                      00808 #undefine mterm
                      00809 
                      00810 
                      00811 #define mterm hllblss00+1
                      00812 
                      00813 
                      00814 mul0:
                      00815 #endif
                      00816 #endif
                      00817 
                      00818  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      00819  banksel mterm 
0004   00??           00820  movwf mterm
0005   0103           00821  clrw 
0006   0700           00822  addwf HLINDF,w 
0007   03??           00823  decf mterm,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   1D03           00824  btfss STATUS,Z 
0009   2???           00825  goto $-3
000A   0080           00826  movwf HLINDF
000B   0008           00827  return
                      00828 
                      00829 
                      00830 
                      00831 #undefine mterm
                      00832 hllkrna01 CODE
                      00833 
0000                  00834 add: 
                      00835  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0700           00836  addwf HLINDF,w
0003   0384           00837  decf HLFSR,f 
                      00838  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           00839  return
                      00840  
                      00841 hllkrna02 CODE 
                      00842 
0000                  00843 negti:  
0000   0980           00844  comf HLINDF,f
0001   0A80           00845  incf HLINDF,f
0002   0008           00846  return
                      00847  
                      00848 hllkrna03 CODE 
                      00849  
0000                  00850 printch:
                      00851  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      00852 #ifdef HLLMULTITASK 
                      00853  
                      00854  banksel PIR1
                      00855  btfss PIR1,TXIF  
                      00856  goto $-1 
                      00857 #endif 
                      00858  
0002   1283 1303      00859  banksel TXREG
0004   0099           00860  movwf TXREG  
                      00861  
0005   1283 1303      00862  banksel PIR1
0007   1E0C           00863  btfss PIR1,TXIF  
0008   2???           00864  goto $-1  
0009   0008           00865  return  
                      00866 
                      00867 
                      00868 
                      00869 
                      00870 hllkrna04 CODE
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00871  
                      00872 
                      00873 
                      00874 #define mterm hllblss00
                      00875 
                      00876 
                      00877 #define mdiv hllblss01
                      00878 
                      00879 
                      00880 #define mquot hllblss02
                      00881 
                      00882 
0000                  00883 modu:  
                      00884 #ifdef HLLMULTITASK
                      00885 #ifdef HLLGUARDhllblss 
                      00886  movf in_isr,f  
                      00887  btfsc STATUS,Z
                      00888  
                      00889 
                      00890 
                      00891  goto modu0
                      00892 
                      00893  banksel mquot 
                      00894  clrf mquot
                      00895  POP
                      00896  movwf mdiv
                      00897  POP
                      00898  movwf mterm
                      00899  movfw mdiv
                      00900  subwf mterm,f
                      00901  btfss STATUS,C 
                      00902  goto $+3
                      00903  incf mquot,f 
                      00904  goto $-4
                      00905  addwf mterm,w
                      00906  PUSH
                      00907  return 
                      00908 
                      00909 
                      00910 
                      00911 #undefine mterm
                      00912 
                      00913 
                      00914 #undefine mdiv
                      00915 
                      00916 
                      00917 #undefine mquot
                      00918 
                      00919 
                      00920 #define mterm hllblss00+1
                      00921 
                      00922 
                      00923 #define mdiv hllblss01+1
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00924 
                      00925 
                      00926 #define mquot hllblss02+1
                      00927 
                      00928 
                      00929 modu0:
                      00930 #endif
                      00931 #endif
                      00932 
0000   ???? ????      00933  banksel mquot 
0002   01??           00934  clrf mquot
                      00935  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   00??           00936  movwf mdiv
                      00937  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           00938  movwf mterm
0009   08??           00939  movfw mdiv
000A   02??           00940  subwf mterm,f
000B   1C03           00941  btfss STATUS,C 
000C   2???           00942  goto $+3
000D   0A??           00943  incf mquot,f 
000E   2???           00944  goto $-4
000F   07??           00945  addwf mterm,w
                      00946  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0012   0008           00947  return 
                      00948 
                      00949 
                      00950 
                      00951 #undefine mterm
                      00952 
                      00953 
                      00954 #undefine mdiv
                      00955 
                      00956 
                      00957 #undefine mquot
                      00958 hllkrna05 CODE
                      00959 
                      00960 
                      00961 
                      00962 #define mterm hllblss00
                      00963 
                      00964 
                      00965 #define mdiv hllblss01
                      00966 
                      00967 
                      00968 #define mquot hllblss02
                      00969 
                      00970 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000                  00971 divu:  
                      00972 #ifdef HLLMULTITASK
                      00973 #ifdef HLLGUARDhllblss 
                      00974  movf in_isr,f  
                      00975  btfsc STATUS,Z
                      00976  
                      00977 
                      00978 
                      00979  goto divu0
                      00980 
                      00981  banksel mquot 
                      00982  clrf mquot
                      00983  POP
                      00984  movwf mdiv
                      00985  POP
                      00986  movwf mterm
                      00987  movfw mdiv
                      00988  subwf mterm,f
                      00989  btfss STATUS,C 
                      00990  goto $+3
                      00991  incf mquot,f 
                      00992  goto $-4
                      00993  movfw mquot
                      00994  PUSH
                      00995  return 
                      00996 
                      00997 
                      00998 
                      00999 #undefine mterm
                      01000 
                      01001 
                      01002 #undefine mdiv
                      01003 
                      01004 
                      01005 #undefine mquot
                      01006 
                      01007 
                      01008 #define mterm hllblss00+1
                      01009 
                      01010 
                      01011 #define mdiv hllblss01+1
                      01012 
                      01013 
                      01014 #define mquot hllblss02+1
                      01015 
                      01016 
                      01017 divu0:
                      01018 #endif
                      01019 #endif
                      01020 
0000   ???? ????      01021  banksel mquot 
0002   01??           01022  clrf mquot
                      01023  POP
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   00??           01024  movwf mdiv
                      01025  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           01026  movwf mterm
0009   08??           01027  movfw mdiv
000A   02??           01028  subwf mterm,f
000B   1C03           01029  btfss STATUS,C 
000C   2???           01030  goto $+3
000D   0A??           01031  incf mquot,f 
000E   2???           01032  goto $-4
000F   08??           01033  movfw mquot
                      01034  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0012   0008           01035  return 
                      01036 
                      01037 
                      01038 
                      01039 #undefine mterm
                      01040 
                      01041 
                      01042 #undefine mdiv
                      01043 
                      01044 
                      01045 #undefine mquot
                      01046 hllkrna06 CODE
                      01047 
                      01048  
                      01049  
                      01050  
0000                  01051 getch:
0000   1283 1303      01052  banksel PIR1
0002                  01053 geth2: 
0002   1E8C           01054  btfss PIR1,RCIF
0003   2???           01055  goto geth2
0004   1283 1303      01056  banksel RCREG
0006   081A           01057  movf RCREG,w
                      01058  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           01059  return
                      01060  
                      01061 hllkrna07 CODE 
                      01062  
0000                  01063 eq: 
                      01064  POP 
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0600           01065  xorwf HLINDF,w
0003   3001           01066  movlw .1 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004   1D03           01067  btfss STATUS,Z
0005   3000           01068  movlw .0 
0006   0384           01069  decf HLFSR,f 
                      01070  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           01071  return
                      01072  
                      01073  
                      01074  
                      01075 
                      01076 #define sstack0 softstack0 
                      01077 #define sstack1 softstack1 
                      01078 #define sstack2 softstack2 
                      01079 
                      01080 hllparmcore macro 
                      01081  movwf sstack2
                      01082  movfw HLFSR 
                      01083            
                      01084                    
                      01085  movwf sstack0
                      01086  movfw HLINDF
                      01087  
                      01088  subwf sstack2,w
                      01089  movwf HLFSR 
                      01090  movfw HLINDF 
                      01091  
                      01092  movwf sstack1
                      01093  
                      01094  movfw sstack0
                      01095  movwf HLFSR 
                      01096  clrf sstack0
                      01097  movfw sstack1 
                      01098  movwf HLINDF
                      01099  
                      01100  movfw sstack2
                      01101  pagesel kpush
                      01102  goto kpush 
                      01103  endm
                      01104 
                      01105  
                      01106 hllkrna08 CODE  
0000                  01107 parm:
                      01108  KPOP 
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
                      01109  
                      01110 #ifdef HLLMULTITASK 
                      01111  movf in_isr,f 
                      01112  btfss STATUS,Z
                      01113  goto parm4
                      01114  hllparmcore
                      01115 #undefine sstack0 
                      01116 #undefine sstack1
                      01117 #undefine sstack2 
                      01118 #define sstack0 softstack0+1
                      01119 #define sstack1 softstack1+1
                      01120 #define sstack2 softstack2+1
                      01121 parm4:
                      01122 #endif 
                      01123  hllparmcore
0020   00??               M  movwf sstack2
0021   0804               M  movfw HLFSR 
                          M            
                          M                    
0022   00??               M  movwf sstack0
0023   0800               M  movfw HLINDF
                          M  
0024   02??               M  subwf sstack2,w
0025   0084               M  movwf HLFSR 
0026   0800               M  movfw HLINDF 
                          M  
0027   00??               M  movwf sstack1
                          M  
0028   08??               M  movfw sstack0
0029   0084               M  movwf HLFSR 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002A   01??               M  clrf sstack0
002B   08??               M  movfw sstack1 
002C   0080               M  movwf HLINDF
                          M  
002D   08??               M  movfw sstack2
002E   ????               M  pagesel kpush
002F   2???               M  goto kpush 
                      01124 #undefine sstack0 
                      01125 #undefine sstack1
                      01126 #undefine sstack2 
                      01127  
                      01128 hllkrna09 CODE  
0000                  01129 kpop: 
                      01130  KPOP
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
0020   0008           01131  return 
                      01132  
                      01133 hllkrna10 CODE   
0000                  01134 kpush: 
                      01135  KPUSH
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0E
0004   00??               M  movwf softstack1+1 ;softstack1 holds parm value being pushed
0005   0804               M  movfw FSR  
0006   00??               M  movwf softstack0+1  ;softstack0 holds FSR
0007   08??               M  movfw alt_fsr 
0008   0084               M  movwf FSR 
0009   08??               M  movfw softstack1+1
000A   0A??               M  incf alt_fsr,f 
000B   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
000C   0080               M  movwf INDF 
000D   08??               M  movfw softstack0+1
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1 
0010   2???               M  goto $+0D
0011   00??               M  movwf softstack1 ;softstack1 holds parm value being pushed
0012   0804               M  movfw FSR  
0013   00??               M  movwf softstack0  ;softstack0 holds FSR
0014   08??               M  movfw alt_fsr 
0015   0084               M  movwf FSR 
0016   08??               M  movfw softstack1
0017   0A??               M  incf alt_fsr,f 
0018   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
0019   0080               M  movwf INDF 
001A   08??               M  movfw softstack0
001B   0084               M  movwf FSR 
001C   01??               M  clrf softstack0
001D   ????               M  bankisel stack
001E   0008           01136  return
                      01137 
                      01138 hllkrna11 CODE   
0000                  01139 dispose:
                      01140  DISCARD
0000   0384               M  decf FSR,f 
0001   0008           01141  return 
                      01142  
                      01143  
                      01144 
                      01145 
                      01146 
                      01147 
                      01148 
                      01149 
                      01150  
                      01151  
                      01152 
                      01153  
                      01154 hlog1d CODE
                      01155 
0000                  01156 oru: 
                      01157  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002   0400           01158  iorwf HLINDF,w
0003   0384           01159  decf HLFSR,f 
                      01160  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           01161  return
                      01162 
                      01163  
                      01164 
                      01165 
                      01166 
                      01167 
                      01168 
                      01169 
                      01170 
                      01171 
                      01172 hllkrn444 CODE    
0000                  01173 safepush: 
                      01174  PUSH
0000   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0001   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01175  
                      01176  
                      01177  
0002   0804           01178  movf HLFSR,w
0003   3C??           01179  sublw stack  
0004   1903           01180  btfsc STATUS,Z
0005   2???           01181  goto kspox5 
0006   1803           01182  btfsc STATUS,C 
0007   2???           01183  goto sperr11 
0008                  01184 kspox5:
                      01185   
                      01186 
0008   0804           01187  movf HLFSR,w
0009   3E01           01188  addlw .1
000A   3C??           01189  sublw (stack+HLOE_STACK_SIZE)  
000B   1C03           01190  btfss STATUS,C
000C   2???           01191  goto sperr11
000D   0800           01192  movf HLINDF,w
000E   0008           01193  return
000F                  01194 sperr11:
000F   138B           01195  BCF INTCON,GIE 
                      01196  DISCARD 
0010   0384               M  decf FSR,f 
0011                  01197 dmm445:
0011   3021           01198  movlw '!' 
                      01199  PUSH
0012   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0013   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01200  
                      01201  FAR_CALL safepush,printch
0014   ????               M  pagesel printch
0015   2???               M  call printch
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016   ????               M  pagesel safepush  ;This one restores the caller's code page
0017   2???           01202  goto dmm445
                      01203  
                      01204  
                      01205 
                      01206 
                      01207 
                      01208 
                      01209 
                      01210  
                      01211  
                      01212 
                      01213  
                      01214 hlog1b CODE
                      01215 
                      01216 
                      01217 #define margp2 hllblss00
                      01218 
                      01219 
0000                  01220 setbit:  
                      01221 #ifdef HLLMULTITASK
                      01222 #ifdef HLLGUARDhllblss 
                      01223  movf in_isr,f  
                      01224  btfsc STATUS,Z
                      01225  
                      01226 
                      01227 
                      01228  goto setbit0
                      01229 
                      01230  POP
                      01231  banksel margp2
                      01232  movwf  margp2
                      01233  POP
                      01234  xorlw .0
                      01235  btfss STATUS,Z
                      01236  goto tcf00h
                      01237  
                      01238  movfw  margp2
                      01239  iorlw .1
                      01240  goto tcf99h
                      01241 tcf00h: 
                      01242  
                      01243  xorlw .1
                      01244  btfss STATUS,Z
                      01245  goto tcf01h
                      01246  
                      01247  movfw  margp2
                      01248  iorlw .2
                      01249  goto tcf99h
                      01250 tcf01h: 
                      01251  xorlw .1
                      01252  xorlw .2
                      01253  btfss STATUS,Z
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01254  goto tcf02h
                      01255  
                      01256  movfw margp2
                      01257  iorlw .4
                      01258  goto tcf99h
                      01259 tcf02h: 
                      01260  xorlw .2
                      01261  xorlw .3
                      01262  btfss STATUS,Z
                      01263  goto tcf03h
                      01264  
                      01265  movfw margp2
                      01266  iorlw .8
                      01267  goto tcf99h
                      01268 tcf03h: 
                      01269  xorlw .3
                      01270  xorlw .4
                      01271  btfss STATUS,Z
                      01272  goto tcf04h
                      01273  
                      01274  movfw margp2
                      01275  iorlw .16
                      01276  goto tcf99h
                      01277 tcf04h: 
                      01278  xorlw .4
                      01279  xorlw .5
                      01280  btfss STATUS,Z
                      01281  goto tcf05h
                      01282  
                      01283  movfw margp2
                      01284  iorlw .32
                      01285  goto tcf99h
                      01286 tcf05h: 
                      01287  xorlw .5
                      01288  xorlw .6
                      01289  btfss STATUS,Z
                      01290  goto tcf07h
                      01291  
                      01292  movfw margp2
                      01293  iorlw .64
                      01294  goto tcf99h
                      01295 tcf07h: 
                      01296  
                      01297  movfw margp2
                      01298  iorlw .128 
                      01299 tcf99h:  
                      01300  PUSH 
                      01301  return
                      01302 
                      01303 
                      01304 
                      01305 
                      01306 #undefine margp2
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01307 
                      01308 
                      01309 #define margp2 hllblss00+1
                      01310 
                      01311 
                      01312 setbit0:
                      01313 #endif
                      01314 #endif
                      01315 
                      01316  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      01317  banksel margp2
0004   00??           01318  movwf  margp2
                      01319  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   3A00           01320  xorlw .0
0008   1D03           01321  btfss STATUS,Z
0009   2???           01322  goto hllIAAAA
                      01323  
000A   08??           01324  movfw  margp2
000B   3801           01325  iorlw .1
000C   2???           01326  goto hllPAAAA
000D                  01327 hllIAAAA: 
                      01328  
000D   3A01           01329  xorlw .1
000E   1D03           01330  btfss STATUS,Z
000F   2???           01331  goto hllJAAAA
                      01332  
0010   08??           01333  movfw  margp2
0011   3802           01334  iorlw .2
0012   2???           01335  goto hllPAAAA
0013                  01336 hllJAAAA: 
0013   3A01           01337  xorlw .1
0014   3A02           01338  xorlw .2
0015   1D03           01339  btfss STATUS,Z
0016   2???           01340  goto hllKAAAA
                      01341  
0017   08??           01342  movfw margp2
0018   3804           01343  iorlw .4
0019   2???           01344  goto hllPAAAA
001A                  01345 hllKAAAA: 
001A   3A02           01346  xorlw .2
001B   3A03           01347  xorlw .3
001C   1D03           01348  btfss STATUS,Z
001D   2???           01349  goto hllLAAAA
                      01350  
001E   08??           01351  movfw margp2
001F   3808           01352  iorlw .8
0020   2???           01353  goto hllPAAAA
0021                  01354 hllLAAAA: 
0021   3A03           01355  xorlw .3
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0022   3A04           01356  xorlw .4
0023   1D03           01357  btfss STATUS,Z
0024   2???           01358  goto hllMAAAA
                      01359  
0025   08??           01360  movfw margp2
0026   3810           01361  iorlw .16
0027   2???           01362  goto hllPAAAA
0028                  01363 hllMAAAA: 
0028   3A04           01364  xorlw .4
0029   3A05           01365  xorlw .5
002A   1D03           01366  btfss STATUS,Z
002B   2???           01367  goto hllNAAAA
                      01368  
002C   08??           01369  movfw margp2
002D   3820           01370  iorlw .32
002E   2???           01371  goto hllPAAAA
002F                  01372 hllNAAAA: 
002F   3A05           01373  xorlw .5
0030   3A06           01374  xorlw .6
0031   1D03           01375  btfss STATUS,Z
0032   2???           01376  goto hllOAAAA
                      01377  
0033   08??           01378  movfw margp2
0034   3840           01379  iorlw .64
0035   2???           01380  goto hllPAAAA
0036                  01381 hllOAAAA: 
                      01382  
0036   08??           01383  movfw margp2
0037   3880           01384  iorlw .128 
0038                  01385 hllPAAAA:  
                      01386  PUSH 
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003A   0008           01387  return
                      01388 
                      01389 
                      01390 
                      01391 
                      01392 #undefine margp2
                      01393 
                      01394  end
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALT_Save                          00000007
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCPR1H                            00000016
CCPR1L                            00000015
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
COPY                              
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DISCARD                           
D_A                               00000005
ECCPAS                            0000001D
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FAR_CALL                          
FERR                              00000002
FSR                               00000004
FSR_Save                          00000006
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HALF_FAR_CALL                     
HLFSR                             FSR
HLINDF                            INDF
HLLGUARDhllblss                   
HLOE_STACK2_SIZE                  .20
HLOE_STACK_SIZE                   .80
HLTABLE                           
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
KDISCARD                          
KPOP                              
KPUSH                             
LSHIFT                            
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PC_Save                           00000001
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
POP                               
PORTA                             00000005
PORTB                             00000006
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

PORTC                             00000007
PR2                               00000092
PREEMPT                           
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000019D
PULSR                             00000002
PULSS                             00000003
PUSH                              
PWM1CON                           0000001C
R                                 00000002
RABIE                             00000003
RABIF                             00000000
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RESUME                            
RP0                               00000005
RP1                               00000006
RSHIFT                            
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_Save                       00000005
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
T2IE                              00000001
T2IF                              00000001
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA4                             00000004
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_Save                            00000004
Z                                 00000002
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F690                          00000001
_hllkrna00_0009                   00000009
_hllkrna03_0008                   00000008
_hllkrna04_000C                   0000000C
_hllkrna04_000E                   0000000E
_hllkrna05_000C                   0000000C
_hllkrna05_000E                   0000000E
_hllkrna08_0003                   00000003
_hllkrna08_0011                   00000011
_hllkrna09_0003                   00000003
_hllkrna09_0011                   00000011
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

_hllkrna10_0003                   00000003
_hllkrna10_0010                   00000010
add                               00000000
alt_fsr                           00000003
alt_stack                         00000000
clearbit                          00000000
dispose                           00000000
divu                              00000000
dmm445                            00000011
eq                                00000000
getch                             00000000
geth2                             00000002
helloworld                        00000000
helloworld2                       00000008
hllAAAAA                          0000000D
hllBAAAA                          00000013
hllCAAAA                          0000001A
hllDAAAA                          00000021
hllEAAAA                          00000028
hllFAAAA                          0000002F
hllGAAAA                          00000036
hllHAAAA                          00000038
hllIAAAA                          0000000D
hllJAAAA                          00000013
hllKAAAA                          0000001A
hllLAAAA                          00000021
hllMAAAA                          00000028
hllNAAAA                          0000002F
hllOAAAA                          00000036
hllPAAAA                          00000038
hllblss00                         00000000
hllblss01                         00000001
hllblss02                         00000002
hlllb51J2                         0000001A
hlllb51J3                         0000002E
hllparmcore                       
hllprgen2                         00000030
hllprogend                        000000C7
hlluserprog                       00000000
hloego                            00000000
in_isr                            00000008
kpop                              00000000
kpush                             00000000
kspox5                            00000008
modu                              00000000
mul                               00000000
negti                             00000000
oru                               00000000
parm                              00000000
pbase                             00000000
printch                           00000000
puthelloworld                     00000000
putihelloworld                    00000000
MPASM  5.14                        TARGET.ASM   7-7-2019  16:20:59         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

safepush                          00000000
setbit                            00000000
softstack0                        00000000
softstack1                        00000001
softstack2                        00000002
sperr11                           0000000F
stack                             00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    14 suppressed

