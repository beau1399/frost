
#include "hloe.inc"

 __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOR_ON & _IESO_OFF & _FCMEN_OFF)




Resetv code 0 
 bcf INTCON,GIE
 pagesel hloego
 goto hloego
 
#ifdef HLLMULTITASK
vectr code 4	 ;Device specific
ISR:


 PREEMPT
#endif
#ifdef HLLMULTITASK
ExitISR:    

  RESUME
  
  
  retfie
#endif

mainvars udata_shr	
#ifdef HLLMULTITASK
pbase res .1			; Used for functions w/ numbered pass/return, to clean up parms/push args
pbaseisr res .1	
#else
pbase res .1
#endif

PC_Save res .1

main code
hloego:

 
  clrf in_isr
 
  movlw stack-1		;Set up stack starting position based on literals det. by incremental linker
  movwf FSR 
  movlw alt_stack-1
  movwf alt_fsr 
  
  
  clrf softstack0
 
 bankisel stack
 pagesel hlluserprog
 goto hlluserprog
hllupuser CODE
hlluserprog: 
 

 movlw .112 
 PUSH 

   banksel OSCCON
   movfw OSCCON
   
   
 PUSH 


 FAR_CALL hlluserprog,oru

 POP
 banksel OSCCON
 movwf OSCCON
 


 movlw .17 
 PUSH 

 POP
 banksel SPBRG
 movwf SPBRG
 


 movlw .0 
 PUSH 

 POP
 banksel SPBRGH
 movwf SPBRGH
 


 movlw SYNC

 PUSH 

   banksel TXSTA
   movfw TXSTA
   
   
 PUSH 


 FAR_CALL hlluserprog,clearbit

 POP
 banksel TXSTA
 movwf TXSTA
 


 movlw CREN

 PUSH 

   banksel RCSTA
   movfw RCSTA
   
   
 PUSH 


 FAR_CALL hlluserprog,clearbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw CREN

 PUSH 

   banksel RCSTA
   movfw RCSTA
   
   
 PUSH 


 FAR_CALL hlluserprog,setbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw SPEN

 PUSH 

   banksel RCSTA
   movfw RCSTA
   
   
 PUSH 


 FAR_CALL hlluserprog,setbit

 POP
 banksel RCSTA
 movwf RCSTA
 


 movlw TXEN

 PUSH 


 movlw TX9

 PUSH 


 movlw BRGH

 PUSH 

   banksel TXSTA
   movfw TXSTA
   
   
 PUSH 


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,setbit

 POP
 banksel TXSTA
 movwf TXSTA
 


 movlw BRG16

 PUSH 


 movlw SCKP

 PUSH 

   banksel BAUDCTL
   movfw BAUDCTL
   
   
 PUSH 


 FAR_CALL hlluserprog,setbit


 FAR_CALL hlluserprog,setbit

 POP
 banksel BAUDCTL
 movwf BAUDCTL
 


 movlw .0 
 PUSH 

 POP
 banksel ANSELH
 movwf ANSELH
 


 movlw .0 
 PUSH 

 POP
 banksel ANSEL
 movwf ANSEL
 


 movlw RCIE

 PUSH 


 movlw TXIE

 PUSH 

   banksel PIE1
   movfw PIE1
   
   
 PUSH 


 FAR_CALL hlluserprog,clearbit


 FAR_CALL hlluserprog,clearbit

 POP
 banksel PIE1
 movwf PIE1
 


 movlw .13
 PUSH 


 FAR_CALL hlluserprog,printch


 movlw .10
 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

 ; char 'B'


 movlw .66

 PUSH 


 FAR_CALL hlluserprog,printch

    
hllprogend:
 goto hllprogend
 