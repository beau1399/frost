MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 #include "hloe.inc"
                      00001 
                      00002 
                      00003 #define HLLGUARDhllblss
                      00004 
                      00005 
                      00006 #define HLOE_STACK_SIZE .80
                      00007 #define HLOE_STACK2_SIZE .20
                      00008 
                      00009 
                      00010 #include <p16f687.inc>
                      00001         LIST
                      00002 ; P16F687.INC  Standard Header File, Version 1.00    Microchip Technology, Inc.
                      00553         LIST
                      00011 #include <f:\beau\frostcompiler\kernel.inc>
                      00001 PUSH macro ;Push to the main stack for the programmer's parms and dyn. data;
                      00002  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
                      00003  movwf INDF ; code of any sort will not overwrite the data. 
                      00004  endm 
                      00005  
                      00006 POP macro ;Pop from main stack; "decf" is the de-allocator and thus happens last to 
                      00007  movfw INDF ; preserve the safety of this code under interruptible conditions. 
                      00008  decf FSR,f 
                      00009  endm
                      00010  
                      00011 DISCARD macro ;Remove items from the main stack and throw them away w/o affecting W
                      00012  decf FSR,f 
                      00013  endm
                      00014  
                      00015 KDISCARD macro ;Remove items from stack 2 and throw them away w/o affecting W
                      00016  decf alt_fsr,f 
                      00017  endm
                      00018 
                      00019 COPY macro ;Duplicate stack top
                      00020  movfw INDF
                      00021  incf FSR,f 
                      00022  movwf INDF 
                      00023  endm
                      00024 
                      00025 #define HLFSR FSR
                      00026  
                      00027 #define HLINDF INDF
                      00028 
                      00029   
                      00030 FAR_CALL macro caller_os,func_os ;Call destination residing within a different code page
                      00031  pagesel func_os
                      00032  call func_os
                      00033  pagesel caller_os ;This one restores the caller's code page
                      00034  endm
                      00035 
                      00036 ;Call destination residing within a different code page... does not restore the caller's
                      00037 ; code page after return, which may be OK (e.g. if the next operation is another 'Far'
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00038 ; function call). 
                      00039 HALF_FAR_CALL macro func_os 
                      00040  pagesel func_os        
                      00041  call func_os
                      00042  endm
                      00043  
                      00044 KPOP macro
                      00045  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00046  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00047  btfsc STATUS,Z
                      00048  goto $+0F
                      00049  movfw FSR 
                      00050  movwf softstack0+1 ;Save user stack ptr 
                      00051  movfw alt_fsr ;Get second stack ptr 
                      00052  movwf FSR 
                      00053  movfw INDF ;Dereference it 
                      00054  decf FSR,f ;Decrement it 
                      00055  movwf softstack1+1  ;Save popped value for ret urn 
                      00056  movfw FSR ;Save second stack ptr 
                      00057  movwf alt_fsr 
                      00058  movfw softstack0+1  ;Restore user stack ptr 
                      00059  movwf FSR 
                      00060  clrf softstack0+1
                      00061  movfw softstack1+1  ;Bring back popped value for ret urn 
                      00062  goto $+0E
                      00063  movfw FSR 
                      00064  movwf softstack0 ;Save user stack ptr 
                      00065  movfw alt_fsr ;Get second stack ptr 
                      00066  movwf FSR 
                      00067  movfw INDF ;Dereference it 
                      00068  decf FSR,f ;Decrement it 
                      00069  movwf softstack1  ;Save popped value for ret urn 
                      00070  movfw FSR ;Save second stack ptr 
                      00071  movwf alt_fsr 
                      00072  movfw softstack0  ;Restore user stack ptr 
                      00073  movwf FSR 
                      00074  clrf softstack0
                      00075  movfw softstack1  ;Bring back popped value for ret urn 
                      00076  bankisel stack
                      00077  endm 
                      00078 
                      00079 KPUSH macro
                      00080  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
                      00081  movf in_isr,f ;In shared RAM, no need for BANKSEL
                      00082  btfsc STATUS,Z
                      00083  goto $+0E
                      00084  movwf softstack1+1 ;softstack1 holds parm value being pushed
                      00085  movfw FSR  
                      00086  movwf softstack0+1  ;softstack0 holds FSR
                      00087  movfw alt_fsr 
                      00088  movwf FSR 
                      00089  movfw softstack1+1
                      00090  incf alt_fsr,f 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00091  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00092  movwf INDF 
                      00093  movfw softstack0+1
                      00094  movwf FSR 
                      00095  clrf softstack0+1 
                      00096  goto $+0D
                      00097  movwf softstack1 ;softstack1 holds parm value being pushed
                      00098  movfw FSR  
                      00099  movwf softstack0  ;softstack0 holds FSR
                      00100  movfw alt_fsr 
                      00101  movwf FSR 
                      00102  movfw softstack1
                      00103  incf alt_fsr,f 
                      00104  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
                      00105  movwf INDF 
                      00106  movfw softstack0
                      00107  movwf FSR 
                      00108  clrf softstack0
                      00109  bankisel stack
                      00110  endm
                      00111  
                      00112 PREEMPT macro
                      00113 #ifdef HLLMULTITASK 
                      00114  movwf W_Save ; save context- save W in "W_save" file reg.
                      00115  ;From datasheet... save STATUS properly
                      00116  swapf STATUS,W 
                      00117  movwf STATUS_Save 
                      00118  movf FSR,w 
                      00119  movwf FSR_Save 
                      00120  movf PCLATH,w ; save status in "STATUS_Save" file reg.
                      00121  movwf PC_Save 
                      00122  movf alt_fsr,w 
                      00123  movwf ALT_Save
                      00124  incf in_isr,f
                      00125  pagesel ISR
                      00126  bankisel stack 
                      00127  movf FSR,w           ;Restore "softstack" if main thread was using 2nd stack
                      00128  movf softstack0,f        ; (coded to preserve constant interrupt latency)
                      00129  btfss STATUS,Z       
                      00130  movf softstack0,w  
                      00131  movwf FSR          
                      00132 #endif 
                      00133  endm
                      00134  
                      00135 RESUME macro
                      00136  
                      00137 #ifdef HLLMULTITASK 
                      00138  clrf in_isr
                      00139  movf ALT_Save,w
                      00140  movwf alt_fsr 
                      00141  movf PC_Save,w ; restore context (W and STATUS)
                      00142  movwf PCLATH
                      00143  movf FSR_Save,w 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00144  movwf FSR
                      00145  ;Per the datasheet...
                      00146  swapf STATUS_Save,W
                      00147  movwf STATUS ;Move W into Status reg
                      00148  swapf W_Save,F ;Swap W_TEMP
                      00149  swapf W_Save,W ;Swap W_TEMP into W
                      00150 #endif
                      00151 
                      00152  endm
                      00153  
                      00154 ; Table macro.. this followed by any series of RETLW calls
                      00155 ; transforms said call list into a function that takes an offset
                      00156 ; and returns that entry in the table (takes 1 byte, returns 1
                      00157 ; byte... this goes atop the HLL feature which allows generation 
                      00158 ; of tables. It can also go atop RETLW tables entered into assembly 
                      00159 ; files in a very basic fashion when doing assembly programming. In 
                      00160 ; either case, the overall result can be called exactly as if it were any 
                      00161 ; other HLOE function
                      00162 HLTABLE macro mmnme
                      00163 mmnme:
                      00164  movlw high mmnme#v(2) ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00165  movwf PCLATH ; and PAGESEL doesn't take care of all 5
                      00166  movlw low mmnme#v(2) ; Perform pointer arithmetic
                      00167  addwf INDF,w 
                      00168  decf FSR,f
                      00169  btfsc STATUS,C ; Necess. b/c writes to PCL take 5 bits fr. PCLATH
                      00170  incf PCLATH,f 
                      00171  movwf PCL 
                      00172 mmnme#v(2): 
                      00173  ;retlw K, retlw K, etc. go here
                      00174  endm
                      00175  
                      00003 
2007   33C4           00004  __config (_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_ON & _MCLRE_OFF & _CP_OFF & _BOR_ON & _IESO_OFF & _FC
                            MEN_OFF)
                      00005 
                      00006 
                      00007 
                      00008 
                      00009 Resetv code 0 
0000   138B           00010  bcf INTCON,GIE
                      00011  pagesel hloego
0001   2???           00012  goto hloego
                      00013  
                      00014 #ifdef HLLMULTITASK
                      00015 vectr code 4     ;Device specific
                      00016 ISR:
                      00017 
                      00018 
                      00019  PREEMPT
                      00020 #endif
                      00021 #ifdef HLLMULTITASK
                      00022 ExitISR:    
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00023 
                      00024   RESUME
                      00025   
                      00026   
                      00027   retfie
                      00028 #endif
                      00029 
                      00030 mainvars udata_shr      
                      00031 #ifdef HLLMULTITASK
                      00032 pbase res .1                    ; Used for functions w/ numbered pass/return, to clean up parms/push arg
                            s
                      00033 pbaseisr res .1 
                      00034 #else
0000                  00035 pbase res .1
                      00036 #endif
                      00037 
0001                  00038 PC_Save res .1
                      00039 
                      00040 main code
0000                  00041 hloego:
                      00042 
                      00043  
0000   01??           00044   clrf in_isr
                      00045  
0001   30??           00046   movlw stack-1         ;Set up stack starting position based on literals det. by incremental linker
0002   0084           00047   movwf FSR 
0003   30??           00048   movlw alt_stack-1
0004   00??           00049   movwf alt_fsr 
                      00050   
                      00051   
0005   01??           00052   clrf softstack0
                      00053  
0006   ????           00054  bankisel stack
                      00055  pagesel hlluserprog
0007   2???           00056  goto hlluserprog
                      00057 hllupuser CODE
0000                  00058 hlluserprog: 
                      00059  
                      00060 
0000   3070           00061  movlw .112 
                      00062 
                      00063    
                      00064  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0001   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00065 
0002   1683 1303      00066    banksel OSCCON
0004   080F           00067    movfw OSCCON
                      00068    
                      00069    
                      00070 
                      00071    
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00072  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0005   2???               M  call safepush
                      00073 
                      00074 
                      00075  
                      00076  FAR_CALL hlluserprog,oru
                          M  pagesel oru
0006   2???               M  call oru
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00077 
                      00078  POP
0007   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0008   0384               M  decf FSR,f 
0009   1683 1303      00079  banksel OSCCON
000B   008F           00080  movwf OSCCON
                      00081  
                      00082 
                      00083 
000C   3011           00084  movlw .17 
                      00085 
                      00086    
                      00087  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
000D   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00088 
                      00089  POP
000E   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
000F   0384               M  decf FSR,f 
0010   1683 1303      00090  banksel SPBRG
0012   0099           00091  movwf SPBRG
                      00092  
                      00093 
                      00094 
0013   3000           00095  movlw .0 
                      00096 
                      00097    
                      00098  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0014   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00099 
                      00100  POP
0015   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0016   0384               M  decf FSR,f 
0017   1683 1303      00101  banksel SPBRGH
0019   009A           00102  movwf SPBRGH
                      00103  
                      00104 
                      00105 
001A   3004           00106  movlw SYNC
                      00107 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00108 
                      00109    
                      00110  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
001B   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00111 
001C   1683 1303      00112    banksel TXSTA
001E   0818           00113    movfw TXSTA
                      00114    
                      00115    
                      00116 
                      00117    
                      00118  HALF_FAR_CALL safepush
                          M  pagesel safepush       
001F   2???               M  call safepush
                      00119 
                      00120 
                      00121  
                      00122  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
0020   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00123 
                      00124  POP
0021   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0022   0384               M  decf FSR,f 
0023   1683 1303      00125  banksel TXSTA
0025   0098           00126  movwf TXSTA
                      00127  
                      00128 
                      00129 
0026   3004           00130  movlw CREN
                      00131 
                      00132 
                      00133    
                      00134  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0027   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00135 
0028   1283 1303      00136    banksel RCSTA
002A   0818           00137    movfw RCSTA
                      00138    
                      00139    
                      00140 
                      00141    
                      00142  HALF_FAR_CALL safepush
                          M  pagesel safepush       
002B   2???               M  call safepush
                      00143 
                      00144 
                      00145  
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00146  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
002C   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00147 
                      00148  POP
002D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
002E   0384               M  decf FSR,f 
002F   1283 1303      00149  banksel RCSTA
0031   0098           00150  movwf RCSTA
                      00151  
                      00152 
                      00153 
0032   3004           00154  movlw CREN
                      00155 
                      00156 
                      00157    
                      00158  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0033   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00159 
0034   1283 1303      00160    banksel RCSTA
0036   0818           00161    movfw RCSTA
                      00162    
                      00163    
                      00164 
                      00165    
                      00166  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0037   2???               M  call safepush
                      00167 
                      00168 
                      00169  
                      00170  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0038   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00171 
                      00172  POP
0039   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
003A   0384               M  decf FSR,f 
003B   1283 1303      00173  banksel RCSTA
003D   0098           00174  movwf RCSTA
                      00175  
                      00176 
                      00177 
003E   3007           00178  movlw SPEN
                      00179 
                      00180 
                      00181    
                      00182  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003F   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00183 
0040   1283 1303      00184    banksel RCSTA
0042   0818           00185    movfw RCSTA
                      00186    
                      00187    
                      00188 
                      00189    
                      00190  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0043   2???               M  call safepush
                      00191 
                      00192 
                      00193  
                      00194  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0044   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00195 
                      00196  POP
0045   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0046   0384               M  decf FSR,f 
0047   1283 1303      00197  banksel RCSTA
0049   0098           00198  movwf RCSTA
                      00199  
                      00200 
                      00201 
004A   3005           00202  movlw TXEN
                      00203 
                      00204 
                      00205    
                      00206  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
004B   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00207 
                      00208 
004C   3006           00209  movlw TX9
                      00210 
                      00211 
                      00212    
                      00213  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
004D   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00214 
                      00215 
004E   3002           00216  movlw BRGH
                      00217 
                      00218 
                      00219    
                      00220  FAR_CALL hlluserprog ,safepush
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                          M  pagesel safepush
004F   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00221 
0050   1683 1303      00222    banksel TXSTA
0052   0818           00223    movfw TXSTA
                      00224    
                      00225    
                      00226 
                      00227    
                      00228  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0053   2???               M  call safepush
                      00229 
                      00230 
                      00231  
                      00232  HALF_FAR_CALL setbit
                          M  pagesel setbit         
0054   2???               M  call setbit
                      00233 
                      00234 
                      00235  
                      00236  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
0055   2???               M  call clearbit
                      00237 
                      00238 
                      00239  
                      00240  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0056   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00241 
                      00242  POP
0057   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0058   0384               M  decf FSR,f 
0059   1683 1303      00243  banksel TXSTA
005B   0098           00244  movwf TXSTA
                      00245  
                      00246 
                      00247 
005C   3003           00248  movlw BRG16
                      00249 
                      00250 
                      00251    
                      00252  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
005D   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00253 
                      00254 
005E   3004           00255  movlw SCKP
                      00256 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00257 
                      00258    
                      00259  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
005F   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00260 
0060   1683 1303      00261    banksel BAUDCTL
0062   081B           00262    movfw BAUDCTL
                      00263    
                      00264    
                      00265 
                      00266    
                      00267  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0063   2???               M  call safepush
                      00268 
                      00269 
                      00270  
                      00271  HALF_FAR_CALL setbit
                          M  pagesel setbit         
0064   2???               M  call setbit
                      00272 
                      00273 
                      00274  
                      00275  FAR_CALL hlluserprog,setbit
                          M  pagesel setbit
0065   2???               M  call setbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00276 
                      00277  POP
0066   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0067   0384               M  decf FSR,f 
0068   1683 1303      00278  banksel BAUDCTL
006A   009B           00279  movwf BAUDCTL
                      00280  
                      00281 
                      00282 
006B   3000           00283  movlw .0 
                      00284 
                      00285    
                      00286  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
006C   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00287 
                      00288  POP
006D   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
006E   0384               M  decf FSR,f 
006F   1283 1703      00289  banksel ANSELH
0071   009F           00290  movwf ANSELH
                      00291  
                      00292 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00293 
0072   3000           00294  movlw .0 
                      00295 
                      00296    
                      00297  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
0073   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00298 
                      00299  POP
0074   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0075   0384               M  decf FSR,f 
0076   1283 1703      00300  banksel ANSEL
0078   009E           00301  movwf ANSEL
                      00302  
                      00303 
                      00304 
0079   3005           00305  movlw RCIE
                      00306 
                      00307 
                      00308    
                      00309  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
007A   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00310 
                      00311 
007B   3004           00312  movlw TXIE
                      00313 
                      00314 
                      00315    
                      00316  FAR_CALL hlluserprog ,safepush
                          M  pagesel safepush
007C   2???               M  call safepush
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00317 
007D   1683 1303      00318    banksel PIE1
007F   080C           00319    movfw PIE1
                      00320    
                      00321    
                      00322 
                      00323    
                      00324  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0080   2???               M  call safepush
                      00325 
                      00326 
                      00327  
                      00328  HALF_FAR_CALL clearbit
                          M  pagesel clearbit       
0081   2???               M  call clearbit
                      00329 
                      00330 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00331  
                      00332  FAR_CALL hlluserprog,clearbit
                          M  pagesel clearbit
0082   2???               M  call clearbit
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00333 
                      00334  POP
0083   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0084   0384               M  decf FSR,f 
0085   1683 1303      00335  banksel PIE1
0087   008C           00336  movwf PIE1
                      00337  
                      00338 
                      00339 
                      00340  
                      00341  FAR_CALL hlluserprog,many_Bs
                          M  pagesel many_Bs
0088   2???               M  call many_Bs
                          M  pagesel hlluserprog ;This one restores the caller's code page
                      00342 
                      00343     
0089                  00344 hllprogend:
0089   2???           00345  goto hllprogend
                      00346  
                      00347 
                      00348 hllt450 CODE
0000                  00349 many_Bs:
                      00350 
                      00351  ; char 'B'
                      00352 
                      00353 
0000   3042           00354  movlw .66
                      00355 
                      00356 
                      00357    
                      00358  HALF_FAR_CALL safepush
                          M  pagesel safepush       
0001   2???               M  call safepush
                      00359 
                      00360 
                      00361  
                      00362  FAR_CALL many_Bs,printch
                          M  pagesel printch
0002   2???               M  call printch
                          M  pagesel many_Bs   ;This one restores the caller's code page
                      00363 
                      00364  ;
0003   2???           00365  goto many_Bs
                      00366 
                      00367  
0004                  00368 hllprgen2:
0004   2???           00369  goto hllprgen2
                      00370  
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00371 
                      00372 
                      00373 
                      00374 
                      00375 
                      00376  
                      00377 
                      00378 
                      00379 hlog1a CODE
                      00380 
                      00381 
                      00382 
                      00383 #define margp2 hllblss00
                      00384 
                      00385 
0000                  00386 clearbit:  
                      00387 #ifdef HLLMULTITASK
                      00388 #ifdef HLLGUARDhllblss 
                      00389  movf in_isr,f  
                      00390  btfsc STATUS,Z
                      00391  
                      00392 
                      00393 
                      00394  goto clearbit0
                      00395 
                      00396  POP
                      00397  banksel margp2
                      00398  movwf margp2
                      00399  POP 
                      00400  xorlw .0
                      00401  btfss STATUS,Z
                      00402  goto tff00h
                      00403  
                      00404  movfw margp2
                      00405  andlw .255-.1
                      00406  goto tff99h
                      00407 tff00h: 
                      00408  
                      00409  xorlw .1
                      00410  btfss STATUS,Z
                      00411  goto tff01h
                      00412  
                      00413  movfw margp2
                      00414  andlw .255-.2
                      00415  goto tff99h
                      00416 tff01h: 
                      00417  xorlw .1
                      00418  xorlw .2
                      00419  btfss STATUS,Z
                      00420  goto tff02h
                      00421  
                      00422  movfw margp2
                      00423  andlw .255-.4
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00424  goto tff99h
                      00425 tff02h: 
                      00426  xorlw .2
                      00427  xorlw .3
                      00428  btfss STATUS,Z
                      00429  goto tff03h
                      00430  
                      00431  movfw margp2
                      00432  andlw .255-.8
                      00433  goto tff99h
                      00434 tff03h: 
                      00435  xorlw .3
                      00436  xorlw .4
                      00437  btfss STATUS,Z
                      00438  goto tff04h
                      00439  
                      00440  movfw margp2
                      00441  andlw .255-.16
                      00442  goto tff99h
                      00443 tff04h: 
                      00444  xorlw .4
                      00445  xorlw .5
                      00446  btfss STATUS,Z
                      00447  goto tff05h
                      00448  
                      00449  movfw margp2
                      00450  andlw .255-.32
                      00451  goto tff99h
                      00452 tff05h: 
                      00453  xorlw .5
                      00454  xorlw .6
                      00455  btfss STATUS,Z
                      00456  goto tff07h
                      00457  
                      00458  movfw margp2
                      00459  andlw .255-.64
                      00460  goto tff99h
                      00461 tff07h: 
                      00462  
                      00463  movfw margp2
                      00464  andlw .255-.128
                      00465 tff99h:  
                      00466  PUSH
                      00467  return
                      00468 
                      00469 
                      00470 
                      00471 
                      00472 #undefine margp2
                      00473 
                      00474 
                      00475 #define margp2 hllblss00+1
                      00476 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00477 
                      00478 clearbit0:
                      00479 #endif
                      00480 #endif
                      00481 
                      00482  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      00483  banksel margp2
0004   00??           00484  movwf margp2
                      00485  POP 
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   3A00           00486  xorlw .0
0008   1D03           00487  btfss STATUS,Z
0009   2???           00488  goto hllAAAAA
                      00489  
000A   08??           00490  movfw margp2
000B   39FE           00491  andlw .255-.1
000C   2???           00492  goto hllHAAAA
000D                  00493 hllAAAAA: 
                      00494  
000D   3A01           00495  xorlw .1
000E   1D03           00496  btfss STATUS,Z
000F   2???           00497  goto hllBAAAA
                      00498  
0010   08??           00499  movfw margp2
0011   39FD           00500  andlw .255-.2
0012   2???           00501  goto hllHAAAA
0013                  00502 hllBAAAA: 
0013   3A01           00503  xorlw .1
0014   3A02           00504  xorlw .2
0015   1D03           00505  btfss STATUS,Z
0016   2???           00506  goto hllCAAAA
                      00507  
0017   08??           00508  movfw margp2
0018   39FB           00509  andlw .255-.4
0019   2???           00510  goto hllHAAAA
001A                  00511 hllCAAAA: 
001A   3A02           00512  xorlw .2
001B   3A03           00513  xorlw .3
001C   1D03           00514  btfss STATUS,Z
001D   2???           00515  goto hllDAAAA
                      00516  
001E   08??           00517  movfw margp2
001F   39F7           00518  andlw .255-.8
0020   2???           00519  goto hllHAAAA
0021                  00520 hllDAAAA: 
0021   3A03           00521  xorlw .3
0022   3A04           00522  xorlw .4
0023   1D03           00523  btfss STATUS,Z
0024   2???           00524  goto hllEAAAA
                      00525  
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0025   08??           00526  movfw margp2
0026   39EF           00527  andlw .255-.16
0027   2???           00528  goto hllHAAAA
0028                  00529 hllEAAAA: 
0028   3A04           00530  xorlw .4
0029   3A05           00531  xorlw .5
002A   1D03           00532  btfss STATUS,Z
002B   2???           00533  goto hllFAAAA
                      00534  
002C   08??           00535  movfw margp2
002D   39DF           00536  andlw .255-.32
002E   2???           00537  goto hllHAAAA
002F                  00538 hllFAAAA: 
002F   3A05           00539  xorlw .5
0030   3A06           00540  xorlw .6
0031   1D03           00541  btfss STATUS,Z
0032   2???           00542  goto hllGAAAA
                      00543  
0033   08??           00544  movfw margp2
0034   39BF           00545  andlw .255-.64
0035   2???           00546  goto hllHAAAA
0036                  00547 hllGAAAA: 
                      00548  
0036   08??           00549  movfw margp2
0037   397F           00550  andlw .255-.128
0038                  00551 hllHAAAA:  
                      00552  PUSH
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003A   0008           00553  return
                      00554 
                      00555 
                      00556 
                      00557 
                      00558 #undefine margp2
                      00559 
                      00560 
                      00561 
                      00562 
                      00563 
                      00564 
                      00565 
                      00566  
                      00567 
                      00568 
                      00569 
                      00570 ukrnl2 UDATA
0000                  00571 stack res HLOE_STACK_SIZE
                      00572  
                      00573 ukrnl3 UDATA 
0000                  00574 alt_stack res HLOE_STACK2_SIZE
                      00575  
                      00576 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00577 
                      00578 ukernl udata 
                      00579 
                      00580 
                      00581 
                      00582 
                      00583 
0000                  00584 hllblss00 res 1           
                      00585 #ifdef HLLMULTITASK
                      00586 #ifdef HLLGUARDhllblss
                      00587 hllblss00isr res 1      
                      00588 #endif
                      00589 #endif
                      00590 
0001                  00591 hllblss01 res 1    
                      00592 #ifdef HLLMULTITASK
                      00593 #ifdef HLLGUARDhllblss
                      00594 hllblss01isr res 1      
                      00595 #endif
                      00596 #endif
                      00597 
0002                  00598 hllblss02 res 1    
                      00599 #ifdef HLLMULTITASK
                      00600 #ifdef HLLGUARDhllblss
                      00601 hllblss02isr res 1      
                      00602 #endif
                      00603 #endif
                      00604   
                      00605 ukrshr udata_shr
                      00606 
                      00607 
0000                  00608 softstack0 res 1                
                      00609 #ifdef HLLMULTITASK
                      00610 softstack0isr res 1
                      00611 #endif
                      00612 
0001                  00613 softstack1 res 1                
                      00614 #ifdef HLLMULTITASK
                      00615 softstack1isr res 1
                      00616 #endif
                      00617 
0002                  00618 softstack2 res 1                
                      00619 #ifdef HLLMULTITASK
                      00620 softstack2isr res 1
                      00621 #endif
                      00622 
0003                  00623 alt_fsr res 1
0004                  00624 W_Save res 1 
0005                  00625 STATUS_Save res 1
0006                  00626 FSR_Save res 1
0007                  00627 ALT_Save res 1
0008                  00628 in_isr res 1
                      00629 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00630 hllkrna00 CODE
                      00631 
                      00632  
                      00633 
                      00634 
                      00635 #define mterm hllblss00
                      00636 
                      00637 
0000                  00638 mul:  
                      00639 #ifdef HLLMULTITASK
                      00640 #ifdef HLLGUARDhllblss 
                      00641  movf in_isr,f  
                      00642  btfsc STATUS,Z
                      00643  
                      00644 
                      00645 
                      00646  goto mul0
                      00647 
                      00648  POP
                      00649  banksel mterm 
                      00650  movwf mterm
                      00651  clrw 
                      00652  addwf HLINDF,w 
                      00653  decf mterm,f 
                      00654  btfss STATUS,Z 
                      00655  goto $-3
                      00656  movwf HLINDF
                      00657  return
                      00658 
                      00659 
                      00660 
                      00661 #undefine mterm
                      00662 
                      00663 
                      00664 #define mterm hllblss00+1
                      00665 
                      00666 
                      00667 mul0:
                      00668 #endif
                      00669 #endif
                      00670 
                      00671  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      00672  banksel mterm 
0004   00??           00673  movwf mterm
0005   0103           00674  clrw 
0006   0700           00675  addwf HLINDF,w 
0007   03??           00676  decf mterm,f 
0008   1D03           00677  btfss STATUS,Z 
0009   2???           00678  goto $-3
000A   0080           00679  movwf HLINDF
000B   0008           00680  return
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00681 
                      00682 
                      00683 
                      00684 #undefine mterm
                      00685 hllkrna01 CODE
                      00686 
0000                  00687 add: 
                      00688  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0700           00689  addwf HLINDF,w
0003   0384           00690  decf HLFSR,f 
                      00691  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           00692  return
                      00693  
                      00694 hllkrna02 CODE 
                      00695 
0000                  00696 negti:  
0000   0980           00697  comf HLINDF,f
0001   0A80           00698  incf HLINDF,f
0002   0008           00699  return
                      00700  
                      00701 hllkrna03 CODE 
                      00702  
0000                  00703 printch:
                      00704  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
                      00705 #ifdef HLLMULTITASK 
                      00706  
                      00707  banksel PIR1
                      00708  btfss PIR1,TXIF  
                      00709  goto $-1 
                      00710 #endif 
                      00711  
0002   1283 1303      00712  banksel TXREG
0004   0099           00713  movwf TXREG  
                      00714  
0005   1283 1303      00715  banksel PIR1
0007   1E0C           00716  btfss PIR1,TXIF  
0008   2???           00717  goto $-1  
0009   0008           00718  return  
                      00719  
                      00720 
                      00721 hllkrna04 CODE
                      00722  
                      00723 
                      00724 
                      00725 #define mterm hllblss00
                      00726 
                      00727 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00728 #define mdiv hllblss01
                      00729 
                      00730 
                      00731 #define mquot hllblss02
                      00732 
                      00733 
0000                  00734 modu:  
                      00735 #ifdef HLLMULTITASK
                      00736 #ifdef HLLGUARDhllblss 
                      00737  movf in_isr,f  
                      00738  btfsc STATUS,Z
                      00739  
                      00740 
                      00741 
                      00742  goto modu0
                      00743 
                      00744  banksel mquot 
                      00745  clrf mquot
                      00746  POP
                      00747  movwf mdiv
                      00748  POP
                      00749  movwf mterm
                      00750  movfw mdiv
                      00751  subwf mterm,f
                      00752  btfss STATUS,C 
                      00753  goto $+3
                      00754  incf mquot,f 
                      00755  goto $-4
                      00756  addwf mterm,w
                      00757  PUSH
                      00758  return 
                      00759 
                      00760 
                      00761 
                      00762 #undefine mterm
                      00763 
                      00764 
                      00765 #undefine mdiv
                      00766 
                      00767 
                      00768 #undefine mquot
                      00769 
                      00770 
                      00771 #define mterm hllblss00+1
                      00772 
                      00773 
                      00774 #define mdiv hllblss01+1
                      00775 
                      00776 
                      00777 #define mquot hllblss02+1
                      00778 
                      00779 
                      00780 modu0:
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00781 #endif
                      00782 #endif
                      00783 
0000   ???? ????      00784  banksel mquot 
0002   01??           00785  clrf mquot
                      00786  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   00??           00787  movwf mdiv
                      00788  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
0008   00??           00789  movwf mterm
0009   08??           00790  movfw mdiv
000A   02??           00791  subwf mterm,f
000B   1C03           00792  btfss STATUS,C 
000C   2???           00793  goto $+3
000D   0A??           00794  incf mquot,f 
000E   2???           00795  goto $-4
000F   07??           00796  addwf mterm,w
                      00797  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0012   0008           00798  return 
                      00799 
                      00800 
                      00801 
                      00802 #undefine mterm
                      00803 
                      00804 
                      00805 #undefine mdiv
                      00806 
                      00807 
                      00808 #undefine mquot
                      00809 hllkrna05 CODE
                      00810 
                      00811 
                      00812 
                      00813 #define mterm hllblss00
                      00814 
                      00815 
                      00816 #define mdiv hllblss01
                      00817 
                      00818 
                      00819 #define mquot hllblss02
                      00820 
                      00821 
0000                  00822 divu:  
                      00823 #ifdef HLLMULTITASK
                      00824 #ifdef HLLGUARDhllblss 
                      00825  movf in_isr,f  
                      00826  btfsc STATUS,Z
                      00827  
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00828 
                      00829 
                      00830  goto divu0
                      00831 
                      00832  banksel mquot 
                      00833  clrf mquot
                      00834  POP
                      00835  movwf mdiv
                      00836  POP
                      00837  movwf mterm
                      00838  movfw mdiv
                      00839  subwf mterm,f
                      00840  btfss STATUS,C 
                      00841  goto $+3
                      00842  incf mquot,f 
                      00843  goto $-4
                      00844  movfw mquot
                      00845  PUSH
                      00846  return 
                      00847 
                      00848 
                      00849 
                      00850 #undefine mterm
                      00851 
                      00852 
                      00853 #undefine mdiv
                      00854 
                      00855 
                      00856 #undefine mquot
                      00857 
                      00858 
                      00859 #define mterm hllblss00+1
                      00860 
                      00861 
                      00862 #define mdiv hllblss01+1
                      00863 
                      00864 
                      00865 #define mquot hllblss02+1
                      00866 
                      00867 
                      00868 divu0:
                      00869 #endif
                      00870 #endif
                      00871 
0000   ???? ????      00872  banksel mquot 
0002   01??           00873  clrf mquot
                      00874  POP
0003   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0004   0384               M  decf FSR,f 
0005   00??           00875  movwf mdiv
                      00876  POP
0006   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0007   0384               M  decf FSR,f 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   00??           00877  movwf mterm
0009   08??           00878  movfw mdiv
000A   02??           00879  subwf mterm,f
000B   1C03           00880  btfss STATUS,C 
000C   2???           00881  goto $+3
000D   0A??           00882  incf mquot,f 
000E   2???           00883  goto $-4
000F   08??           00884  movfw mquot
                      00885  PUSH
0010   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0011   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0012   0008           00886  return 
                      00887 
                      00888 
                      00889 
                      00890 #undefine mterm
                      00891 
                      00892 
                      00893 #undefine mdiv
                      00894 
                      00895 
                      00896 #undefine mquot
                      00897 hllkrna06 CODE
                      00898 
                      00899  
                      00900  
                      00901  
0000                  00902 getch:
0000   1283 1303      00903  banksel PIR1
0002                  00904 geth2: 
0002   1E8C           00905  btfss PIR1,RCIF
0003   2???           00906  goto geth2
0004   1283 1303      00907  banksel RCREG
0006   081A           00908  movf RCREG,w
                      00909  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0009   0008           00910  return
                      00911  
                      00912 hllkrna07 CODE 
                      00913  
0000                  00914 eq: 
                      00915  POP 
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0600           00916  xorwf HLINDF,w
0003   3001           00917  movlw .1 
0004   1D03           00918  btfss STATUS,Z
0005   3000           00919  movlw .0 
0006   0384           00920  decf HLFSR,f 
                      00921  PUSH 
0007   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0008   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009   0008           00922  return
                      00923  
                      00924  
                      00925  
                      00926 
                      00927 #define sstack0 softstack0 
                      00928 #define sstack1 softstack1 
                      00929 #define sstack2 softstack2 
                      00930 
                      00931 hllparmcore macro 
                      00932  movwf sstack2
                      00933  movfw HLFSR 
                      00934            
                      00935                    
                      00936  movwf sstack0
                      00937  movfw HLINDF
                      00938  
                      00939  subwf sstack2,w
                      00940  movwf HLFSR 
                      00941  movfw HLINDF 
                      00942  
                      00943  movwf sstack1
                      00944  
                      00945  movfw sstack0
                      00946  movwf HLFSR 
                      00947  clrf sstack0
                      00948  movfw sstack1 
                      00949  movwf HLINDF
                      00950  
                      00951  movfw sstack2
                      00952  pagesel kpush
                      00953  goto kpush 
                      00954  endm
                      00955 
                      00956  
                      00957 hllkrna08 CODE  
0000                  00958 parm:
                      00959  KPOP 
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
                      00960  
                      00961 #ifdef HLLMULTITASK 
                      00962  movf in_isr,f 
                      00963  btfss STATUS,Z
                      00964  goto parm4
                      00965  hllparmcore
                      00966 #undefine sstack0 
                      00967 #undefine sstack1
                      00968 #undefine sstack2 
                      00969 #define sstack0 softstack0+1
                      00970 #define sstack1 softstack1+1
                      00971 #define sstack2 softstack2+1
                      00972 parm4:
                      00973 #endif 
                      00974  hllparmcore
0020   00??               M  movwf sstack2
0021   0804               M  movfw HLFSR 
                          M            
                          M                    
0022   00??               M  movwf sstack0
0023   0800               M  movfw HLINDF
                          M  
0024   02??               M  subwf sstack2,w
0025   0084               M  movwf HLFSR 
0026   0800               M  movfw HLINDF 
                          M  
0027   00??               M  movwf sstack1
                          M  
0028   08??               M  movfw sstack0
0029   0084               M  movwf HLFSR 
002A   01??               M  clrf sstack0
002B   08??               M  movfw sstack1 
002C   0080               M  movwf HLINDF
                          M  
002D   08??               M  movfw sstack2
                          M  pagesel kpush
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002E   2???               M  goto kpush 
                      00975 #undefine sstack0 
                      00976 #undefine sstack1
                      00977 #undefine sstack2 
                      00978  
                      00979 hllkrna09 CODE  
0000                  00980 kpop: 
                      00981  KPOP
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0F
0004   0804               M  movfw FSR 
0005   00??               M  movwf softstack0+1 ;Save user stack ptr 
0006   08??               M  movfw alt_fsr ;Get second stack ptr 
0007   0084               M  movwf FSR 
0008   0800               M  movfw INDF ;Dereference it 
0009   0384               M  decf FSR,f ;Decrement it 
000A   00??               M  movwf softstack1+1  ;Save popped value for ret urn 
000B   0804               M  movfw FSR ;Save second stack ptr 
000C   00??               M  movwf alt_fsr 
000D   08??               M  movfw softstack0+1  ;Restore user stack ptr 
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1
0010   08??               M  movfw softstack1+1  ;Bring back popped value for ret urn 
0011   2???               M  goto $+0E
0012   0804               M  movfw FSR 
0013   00??               M  movwf softstack0 ;Save user stack ptr 
0014   08??               M  movfw alt_fsr ;Get second stack ptr 
0015   0084               M  movwf FSR 
0016   0800               M  movfw INDF ;Dereference it 
0017   0384               M  decf FSR,f ;Decrement it 
0018   00??               M  movwf softstack1  ;Save popped value for ret urn 
0019   0804               M  movfw FSR ;Save second stack ptr 
001A   00??               M  movwf alt_fsr 
001B   08??               M  movfw softstack0  ;Restore user stack ptr 
001C   0084               M  movwf FSR 
001D   01??               M  clrf softstack0
001E   08??               M  movfw softstack1  ;Bring back popped value for ret urn 
001F   ????               M  bankisel stack
0020   0008           00982  return 
                      00983  
                      00984 hllkrna10 CODE   
0000                  00985 kpush: 
                      00986  KPUSH
0000   ????               M  bankisel alt_stack ;This is OK for interrupts... part of STATUS 
0001   08??               M  movf in_isr,f ;In shared RAM, no need for BANKSEL
0002   1903               M  btfsc STATUS,Z
0003   2???               M  goto $+0E
0004   00??               M  movwf softstack1+1 ;softstack1 holds parm value being pushed
0005   0804               M  movfw FSR  
0006   00??               M  movwf softstack0+1  ;softstack0 holds FSR
0007   08??               M  movfw alt_fsr 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008   0084               M  movwf FSR 
0009   08??               M  movfw softstack1+1
000A   0A??               M  incf alt_fsr,f 
000B   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
000C   0080               M  movwf INDF 
000D   08??               M  movfw softstack0+1
000E   0084               M  movwf FSR 
000F   01??               M  clrf softstack0+1 
0010   2???               M  goto $+0D
0011   00??               M  movwf softstack1 ;softstack1 holds parm value being pushed
0012   0804               M  movfw FSR  
0013   00??               M  movwf softstack0  ;softstack0 holds FSR
0014   08??               M  movfw alt_fsr 
0015   0084               M  movwf FSR 
0016   08??               M  movfw softstack1
0017   0A??               M  incf alt_fsr,f 
0018   0A84               M  incf FSR,f ;The actual kernel push... preincrement for interrupt safety
0019   0080               M  movwf INDF 
001A   08??               M  movfw softstack0
001B   0084               M  movwf FSR 
001C   01??               M  clrf softstack0
001D   ????               M  bankisel stack
001E   0008           00987  return
                      00988 
                      00989 hllkrna11 CODE   
0000                  00990 dispose:
                      00991  DISCARD
0000   0384               M  decf FSR,f 
0001   0008           00992  return 
                      00993  
                      00994  
                      00995 
                      00996 
                      00997 
                      00998 
                      00999 
                      01000 
                      01001  
                      01002  
                      01003 
                      01004  
                      01005 hlog1d CODE
                      01006 
0000                  01007 oru: 
                      01008  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   0400           01009  iorwf HLINDF,w
0003   0384           01010  decf HLFSR,f 
                      01011  PUSH
0004   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0005   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
0006   0008           01012  return
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01013 
                      01014  
                      01015 
                      01016 
                      01017 
                      01018 
                      01019 
                      01020 
                      01021 
                      01022 
                      01023 hllkrn444 CODE    
0000                  01024 safepush: 
                      01025  PUSH
0000   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0001   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01026  
                      01027  
                      01028  
0002   0804           01029  movf HLFSR,w
0003   3C??           01030  sublw stack  
0004   1903           01031  btfsc STATUS,Z
0005   2???           01032  goto kspox5 
0006   1803           01033  btfsc STATUS,C 
0007   2???           01034  goto sperr11 
0008                  01035 kspox5:
                      01036   
                      01037 
0008   0804           01038  movf HLFSR,w
0009   3E01           01039  addlw .1
000A   3C??           01040  sublw (stack+HLOE_STACK_SIZE)  
000B   1C03           01041  btfss STATUS,C
000C   2???           01042  goto sperr11
000D   0800           01043  movf HLINDF,w
000E   0008           01044  return
000F                  01045 sperr11:
000F   138B           01046  BCF INTCON,GIE 
                      01047  DISCARD 
0010   0384               M  decf FSR,f 
0011                  01048 dmm445:
0011   3021           01049  movlw '!' 
                      01050  PUSH
0012   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0013   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
                      01051  
                      01052  FAR_CALL safepush,printch
                          M  pagesel printch
0014   2???               M  call printch
                          M  pagesel safepush  ;This one restores the caller's code page
0015   2???           01053  goto dmm445
                      01054  
                      01055  
                      01056 
                      01057 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01058 
                      01059 
                      01060 
                      01061  
                      01062  
                      01063 
                      01064  
                      01065 hlog1b CODE
                      01066 
                      01067 
                      01068 #define margp2 hllblss00
                      01069 
                      01070 
0000                  01071 setbit:  
                      01072 #ifdef HLLMULTITASK
                      01073 #ifdef HLLGUARDhllblss 
                      01074  movf in_isr,f  
                      01075  btfsc STATUS,Z
                      01076  
                      01077 
                      01078 
                      01079  goto setbit0
                      01080 
                      01081  POP
                      01082  banksel margp2
                      01083  movwf  margp2
                      01084  POP
                      01085  xorlw .0
                      01086  btfss STATUS,Z
                      01087  goto tcf00h
                      01088  
                      01089  movfw  margp2
                      01090  iorlw .1
                      01091  goto tcf99h
                      01092 tcf00h: 
                      01093  
                      01094  xorlw .1
                      01095  btfss STATUS,Z
                      01096  goto tcf01h
                      01097  
                      01098  movfw  margp2
                      01099  iorlw .2
                      01100  goto tcf99h
                      01101 tcf01h: 
                      01102  xorlw .1
                      01103  xorlw .2
                      01104  btfss STATUS,Z
                      01105  goto tcf02h
                      01106  
                      01107  movfw margp2
                      01108  iorlw .4
                      01109  goto tcf99h
                      01110 tcf02h: 
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01111  xorlw .2
                      01112  xorlw .3
                      01113  btfss STATUS,Z
                      01114  goto tcf03h
                      01115  
                      01116  movfw margp2
                      01117  iorlw .8
                      01118  goto tcf99h
                      01119 tcf03h: 
                      01120  xorlw .3
                      01121  xorlw .4
                      01122  btfss STATUS,Z
                      01123  goto tcf04h
                      01124  
                      01125  movfw margp2
                      01126  iorlw .16
                      01127  goto tcf99h
                      01128 tcf04h: 
                      01129  xorlw .4
                      01130  xorlw .5
                      01131  btfss STATUS,Z
                      01132  goto tcf05h
                      01133  
                      01134  movfw margp2
                      01135  iorlw .32
                      01136  goto tcf99h
                      01137 tcf05h: 
                      01138  xorlw .5
                      01139  xorlw .6
                      01140  btfss STATUS,Z
                      01141  goto tcf07h
                      01142  
                      01143  movfw margp2
                      01144  iorlw .64
                      01145  goto tcf99h
                      01146 tcf07h: 
                      01147  
                      01148  movfw margp2
                      01149  iorlw .128 
                      01150 tcf99h:  
                      01151  PUSH 
                      01152  return
                      01153 
                      01154 
                      01155 
                      01156 
                      01157 #undefine margp2
                      01158 
                      01159 
                      01160 #define margp2 hllblss00+1
                      01161 
                      01162 
                      01163 setbit0:
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01164 #endif
                      01165 #endif
                      01166 
                      01167  POP
0000   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0001   0384               M  decf FSR,f 
0002   ???? ????      01168  banksel margp2
0004   00??           01169  movwf  margp2
                      01170  POP
0005   0800               M  movfw INDF ; preserve the safety of this code under interruptible conditions. 
0006   0384               M  decf FSR,f 
0007   3A00           01171  xorlw .0
0008   1D03           01172  btfss STATUS,Z
0009   2???           01173  goto hllIAAAA
                      01174  
000A   08??           01175  movfw  margp2
000B   3801           01176  iorlw .1
000C   2???           01177  goto hllPAAAA
000D                  01178 hllIAAAA: 
                      01179  
000D   3A01           01180  xorlw .1
000E   1D03           01181  btfss STATUS,Z
000F   2???           01182  goto hllJAAAA
                      01183  
0010   08??           01184  movfw  margp2
0011   3802           01185  iorlw .2
0012   2???           01186  goto hllPAAAA
0013                  01187 hllJAAAA: 
0013   3A01           01188  xorlw .1
0014   3A02           01189  xorlw .2
0015   1D03           01190  btfss STATUS,Z
0016   2???           01191  goto hllKAAAA
                      01192  
0017   08??           01193  movfw margp2
0018   3804           01194  iorlw .4
0019   2???           01195  goto hllPAAAA
001A                  01196 hllKAAAA: 
001A   3A02           01197  xorlw .2
001B   3A03           01198  xorlw .3
001C   1D03           01199  btfss STATUS,Z
001D   2???           01200  goto hllLAAAA
                      01201  
001E   08??           01202  movfw margp2
001F   3808           01203  iorlw .8
0020   2???           01204  goto hllPAAAA
0021                  01205 hllLAAAA: 
0021   3A03           01206  xorlw .3
0022   3A04           01207  xorlw .4
0023   1D03           01208  btfss STATUS,Z
0024   2???           01209  goto hllMAAAA
                      01210  
0025   08??           01211  movfw margp2
0026   3810           01212  iorlw .16
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0027   2???           01213  goto hllPAAAA
0028                  01214 hllMAAAA: 
0028   3A04           01215  xorlw .4
0029   3A05           01216  xorlw .5
002A   1D03           01217  btfss STATUS,Z
002B   2???           01218  goto hllNAAAA
                      01219  
002C   08??           01220  movfw margp2
002D   3820           01221  iorlw .32
002E   2???           01222  goto hllPAAAA
002F                  01223 hllNAAAA: 
002F   3A05           01224  xorlw .5
0030   3A06           01225  xorlw .6
0031   1D03           01226  btfss STATUS,Z
0032   2???           01227  goto hllOAAAA
                      01228  
0033   08??           01229  movfw margp2
0034   3840           01230  iorlw .64
0035   2???           01231  goto hllPAAAA
0036                  01232 hllOAAAA: 
                      01233  
0036   08??           01234  movfw margp2
0037   3880           01235  iorlw .128 
0038                  01236 hllPAAAA:  
                      01237  PUSH 
0038   0A84               M  incf FSR,f ; The "incf" op serves as an allocator; it happens first so that interrupting
0039   0080               M  movwf INDF ; code of any sort will not overwrite the data. 
003A   0008           01238  return
                      01239 
                      01240 
                      01241 
                      01242 
                      01243 #undefine margp2
                      01244 
33C4                  01245  end
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ALT_Save                          00000007
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             0000011E
ANSELH                            0000011F
BAUDCTL                           0000009B
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1SEN                             00000005
C1VREN                            00000007
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2SYNC                            00000000
C2VREN                            00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
CKP                               00000004
CM1CON0                           00000119
CM2CON0                           0000011A
CM2CON1                           0000011B
COPY                              
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DISCARD                           
D_A                               00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FAR_CALL                          
FERR                              00000002
FSR                               00000004
FSR_Save                          00000006
GIE                               00000007
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

GO                                00000001
GO_DONE                           00000001
HALF_FAR_CALL                     
HLFSR                             FSR
HLINDF                            INDF
HLLGUARDhllblss                   
HLOE_STACK2_SIZE                  .20
HLOE_STACK_SIZE                   .80
HLTABLE                           
HTS                               00000002
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOC                               00000096
IOC0                              00000000
IOC1                              00000001
IOC2                              00000002
IOC3                              00000003
IOC4                              00000004
IOC5                              00000005
IOCA                              00000096
IOCA0                             00000000
IOCA1                             00000001
IOCA2                             00000002
IOCA3                             00000003
IOCA4                             00000004
IOCA5                             00000005
IOCB                              00000116
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
KDISCARD                          
KPOP                              
KPUSH                             
LTS                               00000001
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BOR                           00000000
NOT_DONE                          00000001
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

NOT_PD                            00000003
NOT_POR                           00000001
NOT_RABPU                         00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PC_Save                           00000001
PEIE                              00000006
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
POP                               
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PREEMPT                           
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PULSR                             00000002
PULSS                             00000003
PUSH                              
R                                 00000002
RABIE                             00000003
RABIF                             00000000
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
READ_WRITE                        00000002
RESUME                            
RP0                               00000005
RP1                               00000006
RX9                               00000006
RX9D                              00000000
R_W                               00000002
S                                 00000003
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SENB                              00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             0000019E
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STATUS_Save                       00000005
SWDTEN                            00000000
SYNC                              00000004
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GSS                             00000001
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX9                               00000006
TX9D                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
VCFG                              00000006
VP6EN                             00000004
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000118
VRR                               00000005
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPU                               00000095
WPUA                              00000095
WPUA0                             00000000
WPUA1                             00000001
WPUA2                             00000002
WPUA4                             00000004
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

WPUA5                             00000005
WPUB                              00000115
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_Save                            00000004
Z                                 00000002
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_XT_OSC                           00003FF9
__16F687                          00000001
_hllkrna00_0009                   00000009
_hllkrna03_0008                   00000008
_hllkrna04_000C                   0000000C
_hllkrna04_000E                   0000000E
_hllkrna05_000C                   0000000C
_hllkrna05_000E                   0000000E
_hllkrna08_0003                   00000003
_hllkrna08_0011                   00000011
_hllkrna09_0003                   00000003
_hllkrna09_0011                   00000011
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

_hllkrna10_0003                   00000003
_hllkrna10_0010                   00000010
add                               00000000
alt_fsr                           00000003
alt_stack                         00000000
clearbit                          00000000
dispose                           00000000
divu                              00000000
dmm445                            00000011
eq                                00000000
getch                             00000000
geth2                             00000002
hllAAAAA                          0000000D
hllBAAAA                          00000013
hllCAAAA                          0000001A
hllDAAAA                          00000021
hllEAAAA                          00000028
hllFAAAA                          0000002F
hllGAAAA                          00000036
hllHAAAA                          00000038
hllIAAAA                          0000000D
hllJAAAA                          00000013
hllKAAAA                          0000001A
hllLAAAA                          00000021
hllMAAAA                          00000028
hllNAAAA                          0000002F
hllOAAAA                          00000036
hllPAAAA                          00000038
hllblss00                         00000000
hllblss01                         00000001
hllblss02                         00000002
hllparmcore                       
hllprgen2                         00000004
hllprogend                        00000089
hlluserprog                       00000000
hloego                            00000000
in_isr                            00000008
kpop                              00000000
kpush                             00000000
kspox5                            00000008
many_Bs                           00000000
modu                              00000000
mul                               00000000
negti                             00000000
oru                               00000000
parm                              00000000
pbase                             00000000
printch                           00000000
safepush                          00000000
setbit                            00000000
softstack0                        00000000
softstack1                        00000001
softstack2                        00000002
MPASM  5.37                        TARGET.ASM   2-2-2013  15:45:34         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

sperr11                           0000000F
stack                             00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,    84 suppressed

