calls printu,orb,notb,utof,addf,divf,printf,ftou,add,dispose,negti,graphx,ftou,gtf,andb,copyf,gtf
altstack is 80
var scaler,ym,ye

event 1 is
 .add[1 @scaler] > scaler
 if .eq[2 @scaler],
  0 >scaler
/  .graphx[120 .ftou[.addf[.addf[@ym @ye -350.0] 40.0]] 2 2]


   .maybeshow[.addf[5.0  .divf[@ym @ye 50.0]]]

/   if .andb[.gtf[256.0 .addf[.addf[@ym @ye -350.0] 40.0]] .gtf[.addf[.addf[@ym @ye -350.0] 40.0] 0.0]          ],
/     .printu[.ftou[.addf[.addf[@ym @ye -350.0] 40.0]]]
/       .printch[13] .printch[10], .printch['B'],
 
   .printch[13] .printch[10]
 ,,
;

insert clock
.clearbit[gie @intcon] > intcon
.clearbit[sspen @ssp1con1] > ssp1con1

8 > ssp1con1   		    /I2C aster mode
0 > ssp1con2		    /Default settings
19 > ssp1add  		    /32000000/(4*(1+SSPADD)); 19 -> 400k; Slow for now
18 > trisb		    /SCL and SDA as inputs
.clearbit[ansb4 @anselb] > anselb    /SCL and SDA non-analog
.clearbit[ansb1 @anselb] > anselb
.setbit[scie .setbit[pcie @ssp1con3]] > ssp1con3	/Start and Stop bit flagging on
.setbit[sspen @ssp1con1] > ssp1con1   /Start I2C

frost9600baud

.printch['O'].printch['K']

/Necessary to use MAX-232
/.clearbit[sckp @baudcon] > baudcon

.iicstart[]
.clearinterrupt[]
.checkack[]
210 > ssp1buf
.clearinterrupt[]
.checkack[]
107 > ssp1buf
.clearinterrupt[]
.checkack[]
0 > ssp1buf		/I think this is necess. to turn on the internal clock
.clearinterrupt[]
.checkack[]
.iicend[]
.clearinterrupt[]
.delay[]

.iicstart[]
.clearinterrupt[]
.checkack[]
210 > ssp1buf
.clearinterrupt[]
.checkack[]
26 > ssp1buf      
.clearinterrupt[]
.checkack[]
6 > ssp1buf		/Low-pass filter (6 is max)
.clearinterrupt[]
.checkack[]
.iicend[]
.clearinterrupt[]
.delay[]

0>scaler
insert slowtimer
insert starttimer

.loop[]

////////////////////////////////////////////////////

d .loop is

 .iicstart[]
 .clearinterrupt[]

 210 > sspbuf
 .clearinterrupt[]
 .checkack[]
 61 > sspbuf
 .clearinterrupt[]
 .checkack[]
 .setbit[rsen @ssp1con2] > ssp1con2
 .clearinterrupt[]
 211 > sspbuf
 .clearinterrupt[]
 .checkack[]
 .setbit[rcen @ssp1con2] > ssp1con2
 .clearfill[]
 .clearinterrupt[]
 .clearbit[ssp1if @pir1] > pir1
 @ssp1buf
 .clearbit[bf @ssp1stat] > ssp1stat

 .ack[]
 .clearinterrupt[]
 .setbit[rcen @ssp1con2] > ssp1con2
 .clearfill[]
 .clearinterrupt[]
 .clearbit[ssp1if @pir1] > pir1
 @ssp1buf
 .itoflong[]  > ye > ym
 .clearbit[bf @ssp1stat] > ssp1stat

 .nack[]
 .clearinterrupt[]
 .iicend[]
 .clearinterrupt[]
 .loop[]
;

d .clearinterruptin is
 if .getbit[ssp1if @pir1],,.clearinterruptin[], 
;

d .clearinterrupt is
 .clearinterruptin[]
 .clearbit[3 @pir1] > pir1
;

d .clearfill is
 if .getbit[bf @ssp1stat],,.clearfill[], 
;

d .ack is
 .clearbit[ackdt @ssp1con2] > ssp1con2
 .setbit[acken @ssp1con2] > ssp1con2
;

d .nack is
 .setbit[ackdt @ssp1con2] > ssp1con2
 .setbit[acken @ssp1con2] > ssp1con2
;

d .checkack 0 0 is
 if .notb[.getbit[6 @ssp1con2]],,.printch['E'].printch['R'].printch['R']  .checkack[],
;

d .delay is
 ffor(.printch[' '])(20) /Delay 
;

d .iicstart is
 .setbit[sen @ssp1con2] > ssp1con2
;

d .iicend is
 .setbit[pen @ssp1con2] > ssp1con2
;

d .copy 1 2 is
 .parm[0] .parm[0]
;

d .maybeshow 2 0 is
   if .andb[.gtf[120.5 parmf(0)] .gtf[ parmf(0) 0.0]],   
     .printu[ .ftou[ parmf(0)]]
     .graphx[120 .ftou[parmf(0)] 2 2],
     .printch['B'] .printf[ parmf(0)],
;

insert itof